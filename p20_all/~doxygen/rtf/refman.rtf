{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment p20_all }p20_all}
{\comment Generated by doxygen 1.9.5.}
{\creatim \yr2023\mo5\dy11\hr11\min40\sec39}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt p20_all}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Thu May 11 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
line_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
mxGlWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
GlWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
mxWidget_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
mxWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RCWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
packfile_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
packheader_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCheckBox
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxCheckBox_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QComboBox
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxChoice_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QGroupBox
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxGroupBox_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGLW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QLabel
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxLabel_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QLineEdit
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxLineEdit_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QListWidget
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxListBox_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGVP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMainWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxWindow_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAKBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMenu
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxMenu_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
mxPopupMenu_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMenuBar
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxMenuBar_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QOpenGLWidget
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxGlWindow_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGBN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QProgressBar
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxProgressBar_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHVC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QPushButton
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxButton_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
mxToggleButton_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIXI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QRadioButton
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxRadioButton_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QSlider
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxSlider_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QTabWidget
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxTab_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIRP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QTreeWidget
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
mxTreeView_i\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJCU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ring_buffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJA" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFMT" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFRE" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGBN" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGBN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLW" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGLW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOD" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGQU" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGVP" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGVP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBU" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHGH" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHPC" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVC" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHVC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHZF" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIKR" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIRP" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIRP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIXI" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIXI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJCU" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJCU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPG" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKBC" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAKBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 packfile_t}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 packheader_t}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZW" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZQ" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAA" }{}}{\fldrslt {\cs37\ul\cf2 action.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADZ" }{}}{\fldrslt {\cs37\ul\cf2 action.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFH" }{}}{\fldrslt {\cs37\ul\cf2 buffer.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 buffer.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 client.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 client.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATB" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNW" }{}}{\fldrslt {\cs37\ul\cf2 CmdLine.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 mxBmp.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBN" }{}}{\fldrslt {\cs37\ul\cf2 mxPath.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHF" }{}}{\fldrslt {\cs37\ul\cf2 mxPcx.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLA" }{}}{\fldrslt {\cs37\ul\cf2 mxShellExec.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADMN" }{}}{\fldrslt {\cs37\ul\cf2 mxSound.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADOA" }{}}{\fldrslt {\cs37\ul\cf2 mxString.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSF" }{}}{\fldrslt {\cs37\ul\cf2 mxTga.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADXQ" }{}}{\fldrslt {\cs37\ul\cf2 GlPainter.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEAJ" }{}}{\fldrslt {\cs37\ul\cf2 GlPainter.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEBQ" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEQA" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAESJ" }{}}{\fldrslt {\cs37\ul\cf2 painter.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFAR" }{}}{\fldrslt {\cs37\ul\cf2 mx.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFIA" }{}}{\fldrslt {\cs37\ul\cf2 mxButton.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJT" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFLT" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFOE" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFQE" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFTW" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFWA" }{}}{\fldrslt {\cs37\ul\cf2 mxChooseColor.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFXN" }{}}{\fldrslt {\cs37\ul\cf2 mxFileDialog.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFXN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGAM" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLD" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGLD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGNK" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGPT" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGSL" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGUP" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGYY" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAGYY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBA" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHBA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHFH" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHJM" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHLN" }{}}{\fldrslt {\cs37\ul\cf2 mxMessageBox.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHLN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHOF" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHSP" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHSP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHUH" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHYB" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAHYB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIAS" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIDM" }{}}{\fldrslt {\cs37\ul\cf2 mxSettings.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIDM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIJR" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAION" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAION \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIQP" }{}}{\fldrslt {\cs37\ul\cf2 mxTab.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAITS" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAITS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIWI" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIWI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIYR" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAIYR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJAR" }{}}{\fldrslt {\cs37\ul\cf2 mxToolTip.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJBV" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJNZ" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJNZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJZU" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAJZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAKED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKLC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAKLC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKSC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAKSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKUZ" }{}}{\fldrslt {\cs37\ul\cf2 receiver.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAKUZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALDE" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.cpp}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAALDE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALKC" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAALKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALMZ" }{}}{\fldrslt {\cs37\ul\cf2 sender.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAALMZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALVK" }{}}{\fldrslt {\cs37\ul\cf2 server.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAALVK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAMEE" }{}}{\fldrslt {\cs37\ul\cf2 server.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAMEE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAMGD" }{}}{\fldrslt {\cs37\ul\cf2 shared.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAMGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAMJP" }{}}{\fldrslt {\cs37\ul\cf2 softgpio.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAMJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAMOS" }{}}{\fldrslt {\cs37\ul\cf2 softgpio.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAMOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAMRD" }{}}{\fldrslt {\cs37\ul\cf2 threads.c}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAMRD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANEJ" }{}}{\fldrslt {\cs37\ul\cf2 threads.h}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAANEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GlWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v GlWindow}
{\xe \v GlWindow}
{\bkmkstart AAAAAAAEDS}
{\bkmkend AAAAAAAEDS}
\par
{
Inherits mxGlWindow.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGH" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 (mxWindow *parent, int x, int y, int w, int h, const char *label, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGI" }{}}{\fldrslt {\cs37\ul\cf2 handleEvent}}}
 (mxEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGJ" }{}}{\fldrslt {\cs37\ul\cf2 draw}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGK" }{}}{\fldrslt {\cs37\ul\cf2 InsertLine}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
 &newline)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGL" }{}}{\fldrslt {\cs37\ul\cf2 LineClear}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGM" }{}}{\fldrslt {\cs37\ul\cf2 LineUndo}}}
 ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAERB" }{}}{\fldrslt {\cs37\ul\cf2 27}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEQA" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GlWindow\:GlWindow}
{\xe \v GlWindow\:GlWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GlWindow::GlWindow (mxWindow *  {\i parent}, int  {\i x}, int  {\i y}, int  {\i w}, int  {\i h}, const char *  {\i label}, int  {\i style})}}
\par
{\bkmkstart AAAAAAANGH}
{\bkmkend AAAAAAANGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDU" }{}}{\fldrslt {\cs37\ul\cf2 55}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEBQ" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00055                                                                                                  : mxGlWindow( parent, x, y, w, h, label, style )\par
00056 \{\par
00057 {\cf20 //      glDepthFunc( GL_LEQUAL );}\par
00058 \par
00059         {\cf19 if}( !parent ) setVisible( {\cf17 true} );\par
00060         {\cf19 else} mx :: setIdleWindow ( {\cf17 this} );\par
00061 \par
00062 {\cf20 //      line_t line1 = \{0,0,255,255\};}\par
00063 {\cf20 //      CmdLines.assign(1, line1);}\par
00064             x0 = 0;\par
00065             y0 = 0;\par
00066             x1 = 0;\par
00067             y1 = 0;\par
00068 {\cf20 //    PrevLine.x0 = 0;}\par
00069 {\cf20 //    PrevLine.y0 = 0;}\par
00070 {\cf20 //    PrevLine.x1 = 0;}\par
00071 {\cf20 //    PrevLine.y1 = 0;}\par
00072 \par
00073     setTimer( BAUD_RATE * 10 );\par
00074 \}\par
}
}
{\xe \v ~GlWindow\:GlWindow}
{\xe \v GlWindow\:~GlWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GlWindow::~GlWindow (void )}}
\par
{\bkmkstart AAAAAAANGN}
{\bkmkend AAAAAAANGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEEP" }{}}{\fldrslt {\cs37\ul\cf2 76}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEBQ" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00077 \{\par
00078         mx::setIdleWindow( 0 );\par
00079 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v draw\:GlWindow}
{\xe \v GlWindow\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GlWindow::draw (void ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANGJ}
{\bkmkend AAAAAAANGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEOL" }{}}{\fldrslt {\cs37\ul\cf2 332}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEBQ" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00333 \{\par
00334     glClearColor(1.0f, 1.0f, 1.0f, 1.0f);\par
00335     glClear(GL_COLOR_BUFFER_BIT);\par
00336 \par
00337     glViewport( 0, 0, w2(), h2() ); {\cf20 //resize glviewport}\par
00338     {\cf20 //glViewport( 0, 0, w(), h() ); //resize glviewport}\par
00339 \par
00340 {\cf20 //    glPushMatrix();}\par
00341 \par
00342     glLineWidth(3);\par
00343 \par
00344     glColor3f(0.0f, 0.0f, 0.0f);\par
00345     glBegin(GL_LINES);\par
00346 \par
00347     {\cf19 for}(drawlines_t::iterator iter_lines = CmdLines.begin(); iter_lines != CmdLines.end(); ++iter_lines)\par
00348     \{\par
00349         glVertex2f(iter_lines->x0 * 2.0f / 255.0f -1.0f, iter_lines->y0 * -2.0f / 255.0f +1.0f);\par
00350         glVertex2f(iter_lines->x1 * 2.0f / 255.0f -1.0f, iter_lines->y1 * -2.0f / 255.0f +1.0f);\par
00351     \}\par
00352 \par
00353     glVertex2f(x0 * 2.0f / 255.0f -1.0f, y0 * -2.0f / 255.0f +1.0f);\par
00354     glVertex2f(x1 * 2.0f / 255.0f -1.0f, y1 * -2.0f / 255.0f +1.0f);\par
00355 \par
00356     glEnd();\par
00357 \par
00358 \par
00359 {\cf20 //    glFlush();}\par
00360 \par
00361 {\cf20 //    glPopMatrix();}\par
00362 \}\par
}
}
{\xe \v handleEvent\:GlWindow}
{\xe \v GlWindow\:handleEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GlWindow::handleEvent (mxEvent *  {\i event}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANGI}
{\bkmkend AAAAAAANGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEEU" }{}}{\fldrslt {\cs37\ul\cf2 81}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEBQ" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00082 \{\par
00083 {\cf20 //      static float oldrx, oldry, oldtz, oldtx, oldty;}\par
00084 {\cf20 //      static float oldlx, oldly;}\par
00085 {\cf20 //      static int oldx, oldy;}\par
00086 {\cf20 //      static double lastupdate;}\par
00087 \par
00088         {\cf19 switch}( event->event )\par
00089         \{\par
00090 {\cf20 /*}\par
00091 {\cf20     case mxEvent::ParentNotify:}\par
00092 {\cf20     \{}\par
00093 {\cf20         char msg[MAX_MSG_LENGTH + 1];}\par
00094 {\cf20         msg[MAX_MSG_LENGTH] = '\\0';}\par
00095 {\cf20         int i = 0;}\par
00096 {\cf20 }\par
00097 {\cf20         for(drawlines_t::iterator iter_buffer = Buffer.begin(); iter_buffer != Buffer.end() && i < MAX_MSG_LENGTH; ++iter_buffer, i+=4)}\par
00098 {\cf20         \{}\par
00099 {\cf20         msg[i] = iter_buffer->x0;}\par
00100 {\cf20         msg[i+1] = iter_buffer->y0;}\par
00101 {\cf20         msg[i+2] = iter_buffer->x1;}\par
00102 {\cf20         msg[i+3] = iter_buffer->y1;}\par
00103 {\cf20         \}}\par
00104 {\cf20 }\par
00105 {\cf20         msg[i] = '\\0';}\par
00106 {\cf20 }\par
00107 {\cf20         if(Buffer.size() == MAX_MSG_LENGTH/4)}\par
00108 {\cf20         \{}\par
00109 {\cf20             SV_insert_msg(msg);}\par
00110 {\cf20             Buffer.clear();}\par
00111 {\cf20         \}}\par
00112 {\cf20         else}\par
00113 {\cf20             if(!SV_insert_msg_nb(msg))}\par
00114 {\cf20                 Buffer.clear();}\par
00115 {\cf20     \}}\par
00116 {\cf20     break;}\par
00117 {\cf20 */}\par
00118     {\cf19 case} mxEvent::Timer:\par
00119     \{\par
00120                         redraw();\par
00121 \par
00122             {\cf19 if}(this->isEnabled())\par
00123             \{\par
00124                 {\cf19 if}(Buffer.size() < MAX_MSG_LENGTH/4)\par
00125                     \{\par
00126                     {\cf18 unsigned} {\cf18 char} msg[MAX_MSG_LENGTH + 1];\par
00127                     msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
00128                     {\cf18 int} i = 0;\par
00129 \par
00130                     msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
00131 \par
00132                     {\cf19 for}(drawlines_t::iterator iter_buffer = Buffer.begin(); iter_buffer != Buffer.end() && i < MAX_MSG_LENGTH; ++iter_buffer, i+=4)\par
00133                     \{\par
00134                     msg[i] = iter_buffer->x0;\par
00135                     msg[i+1] = iter_buffer->y0;\par
00136                     msg[i+2] = iter_buffer->x1;\par
00137                     msg[i+3] = iter_buffer->y1;\par
00138                     \}\par
00139 \par
00140                     msg[i] = {\cf23 '\\0'};\par
00141 \par
00142                     {\cf19 if}(Buffer.size() == MAX_MSG_LENGTH/4)\par
00143                     \{\par
00144                         SV_insert_msg(msg);\par
00145                         Buffer.clear();\par
00146                     \}\par
00147                     {\cf19 else}\par
00148                         {\cf19 if}(!SV_insert_msg_nb(msg))\par
00149                             Buffer.clear();\par
00150                 \}\par
00151                 {\cf19 else} {\cf19 if}(Buffer.size() > MAX_MSG_LENGTH/4)\par
00152                         Buffer.clear();\par
00153             \}\par
00154             {\cf19 else} {\cf19 if}(!this->isEnabled())\par
00155             \{\par
00156                 {\cf18 char} msg[MAX_MSG_LENGTH + 1];\par
00157                 msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
00158                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
 NewLine = \{0,0,0,0\};\par
00159 \par
00160                 {\cf19 if}(!CL_get_msg(msg))\par
00161                 \{\par
00162                     {\cf19 for}({\cf18 int} i=0; i < MAX_MSG_LENGTH; i+=4)\par
00163                     \{\par
00164                         {\cf19 if}(msg[i])\par
00165                             NewLine.x0 = msg[i];\par
00166                         {\cf19 else}\par
00167                             {\cf19 break};\par
00168                         {\cf19 if}(msg[i+1])\par
00169                             NewLine.y0 = msg[i+1];\par
00170                         {\cf19 else}\par
00171                             {\cf19 break};\par
00172                         {\cf19 if}(msg[i+2])\par
00173                             NewLine.x1 = msg[i+2];\par
00174                         {\cf19 else}\par
00175                             {\cf19 break};\par
00176                         {\cf19 if}(msg[i+3])\par
00177                             NewLine.y1 = msg[i+3];\par
00178                         {\cf19 else}\par
00179                             {\cf19 break};\par
00180 \par
00181                         {\cf19 if}(NewLine.x0 == 255 && NewLine.y0 == 255 && NewLine.x1 == 255 && NewLine.y1 == 255)\par
00182                             CmdLines.clear();\par
00183                         {\cf19 else}\par
00184                             CmdLines.push_back(NewLine);\par
00185 \par
00186 {\cf21 #ifdef _DEBUG}\par
00187                         std::printf({\cf22 "RCWindow::newline: %d %d %d %d\\n"} ,NewLine.x0, NewLine.y0, NewLine.x1, NewLine.y1);\par
00188 {\cf21 #endif }{\cf20 // _DEBUG}\par
00189 \par
00190                     \}\par
00191                 \}\par
00192             \}\par
00193 \par
00194                 {\cf19 return} 1;\par
00195     \}\par
00196     {\cf19 break};\par
00197 \par
00198     {\cf20 /*}\par
00199 {\cf20         case mxEvent::Idle:}\par
00200 {\cf20         \{}\par
00201 {\cf20 }\par
00202 {\cf20                         redraw();}\par
00203 {\cf20                         delay(100);}\par
00204 {\cf20 }\par
00205 {\cf20 //              prev = curr;}\par
00206 {\cf20 }\par
00207 {\cf20             if(!this->isEnabled())}\par
00208 {\cf20             \{}\par
00209 {\cf20                 char msg[MAX_MSG_LENGTH + 1];}\par
00210 {\cf20                 msg[MAX_MSG_LENGTH] = '\\0';}\par
00211 {\cf20                 line_t NewLine = \{0,0,0,0\};}\par
00212 {\cf20 }\par
00213 {\cf20                 if(!CL_get_msg(msg))}\par
00214 {\cf20                 \{}\par
00215 {\cf20                     for(int i=0; i < MAX_MSG_LENGTH; i+=4)}\par
00216 {\cf20                     \{}\par
00217 {\cf20                         if(msg[i])}\par
00218 {\cf20                             NewLine.x0 = msg[i];}\par
00219 {\cf20                         else}\par
00220 {\cf20                             break;}\par
00221 {\cf20                         if(msg[i+1])}\par
00222 {\cf20                             NewLine.y0 = msg[i+1];}\par
00223 {\cf20                         else}\par
00224 {\cf20                             break;}\par
00225 {\cf20                         if(msg[i+2])}\par
00226 {\cf20                             NewLine.x1 = msg[i+2];}\par
00227 {\cf20                         else}\par
00228 {\cf20                             break;}\par
00229 {\cf20                         if(msg[i+3])}\par
00230 {\cf20                             NewLine.y1 = msg[i+3];}\par
00231 {\cf20                         else}\par
00232 {\cf20                             break;}\par
00233 {\cf20 }\par
00234 {\cf20                         if(NewLine.x0 == 255 && NewLine.y0 == 255 && NewLine.x1 == 255 && NewLine.y1 == 255)}\par
00235 {\cf20                             CmdLines.clear();}\par
00236 {\cf20                         else}\par
00237 {\cf20                             CmdLines.push_back(NewLine);}\par
00238 {\cf20 }\par
00239 {\cf20 #ifdef _DEBUG}\par
00240 {\cf20                         std::printf("RCWindow::newline: %d %d %d %d\\n" ,NewLine.x0, NewLine.y0, NewLine.x1, NewLine.y1);}\par
00241 {\cf20 #endif // _DEBUG}\par
00242 {\cf20 }\par
00243 {\cf20                     \}}\par
00244 {\cf20                 \}}\par
00245 {\cf20             \}}\par
00246 {\cf20 }\par
00247 {\cf20                 return 1;}\par
00248 {\cf20         \}}\par
00249 {\cf20         break;}\par
00250 {\cf20     */}\par
00251         {\cf19 case} mxEvent::MouseUp:\par
00252         \{\par
00253 {\cf20 //        char msg[MAX_MSG_LENGTH + 1];}\par
00254 {\cf20 //        int i = 0;}\par
00255             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
 NewLine = \{x0,y0,x1,y1\};\par
00256 \par
00257 {\cf20 //          PrevLine = NewLine;}\par
00258             {\cf19 if}(Buffer.size() < MAX_MSG_LENGTH/4)\par
00259         \{\par
00260             {\cf18 unsigned} {\cf18 char} msg[MAX_MSG_LENGTH + 1];\par
00261             msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
00262             {\cf18 int} i = 0;\par
00263 \par
00264             msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
00265 \par
00266             CmdLines.push_back(NewLine);\par
00267             Buffer.push_back(NewLine);\par
00268 \par
00269 {\cf21 #ifdef _DEBUG}\par
00270             std::printf({\cf22 "SDWindow::newline\\n"});\par
00271 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
00272 \par
00273             {\cf19 for}(drawlines_t::iterator iter_buffer = Buffer.begin(); iter_buffer != Buffer.end() && i < MAX_MSG_LENGTH; ++iter_buffer, i+=4)\par
00274             \{\par
00275             msg[i] = iter_buffer->x0;\par
00276             msg[i+1] = iter_buffer->y0;\par
00277             msg[i+2] = iter_buffer->x1;\par
00278             msg[i+3] = iter_buffer->y1;\par
00279             \}\par
00280 \par
00281             msg[i] = {\cf23 '\\0'};\par
00282 \par
00283             {\cf19 if}(Buffer.size() == MAX_MSG_LENGTH/4)\par
00284             \{\par
00285                 SV_insert_msg(msg);\par
00286                 Buffer.clear();\par
00287             \}\par
00288             {\cf19 else}\par
00289                 {\cf19 if}(!SV_insert_msg_nb(msg))\par
00290                     Buffer.clear();\par
00291         \}\par
00292         {\cf19 else} {\cf19 if}(Buffer.size() > MAX_MSG_LENGTH/4)\par
00293                 Buffer.clear();\par
00294 \par
00295             x0 = 0;\par
00296             y0 = 0;\par
00297             x1 = 0;\par
00298             y1 = 0;\par
00299 {\cf20 //              g_viewerSettings.pause = false;}\par
00300         \}\par
00301         {\cf19 break};\par
00302 \par
00303         {\cf19 case} mxEvent::MouseDown:\par
00304         \{\par
00305 {\cf20 //          std::printf("%d,%d\\n", event->x, event->y);}\par
00306 {\cf20 //      std::printf("%d,%d,%d,%d\\n", x0, y0,x1,y1);}\par
00307             x0 = unsigned ({\cf18 char}( event->x * 255.0f / w2() ));\par
00308             y0 = unsigned ({\cf18 char}( event->y * 255.0f / h2() ));\par
00309             x1 = x0;\par
00310             y1 = y0;\par
00311 \par
00312                 {\cf19 return} 1;\par
00313         \}\par
00314         {\cf19 break};\par
00315 \par
00316         {\cf19 case} mxEvent::MouseDrag:\par
00317         \{\par
00318 {\cf20 //          std::printf("%d,%d,%d,%d\\n", x0, y0,x1,y1);}\par
00319             x1 = unsigned ({\cf18 char}( event->x * 255.0f / w2() ));\par
00320             y1 = unsigned ({\cf18 char}( event->y * 255.0f / h2() ));\par
00321 \par
00322                 redraw ();\par
00323 \par
00324                 {\cf19 return} 1;\par
00325         \}\par
00326         {\cf19 break};\par
00327         \} {\cf20 // switch (event->event)}\par
00328 \par
00329         {\cf19 return} 1;\par
00330 \}\par
}
}
{\xe \v InsertLine\:GlWindow}
{\xe \v GlWindow\:InsertLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GlWindow::InsertLine (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
 &  {\i newline}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANGK}
{\bkmkend AAAAAAANGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAERN" }{}}{\fldrslt {\cs37\ul\cf2 39}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEQA" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00039 \{ CmdLines.push_back(newline); redraw(); \}\par
}
}
{\xe \v LineClear\:GlWindow}
{\xe \v GlWindow\:LineClear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GlWindow::LineClear ()}}
\par
{\bkmkstart AAAAAAANGL}
{\bkmkend AAAAAAANGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEPR" }{}}{\fldrslt {\cs37\ul\cf2 364}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEBQ" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00364                           \{\par
00365 \par
00366     {\cf18 unsigned} {\cf18 char} msg[5] = \{255, 255, 255, 255, 0\};\par
00367     Buffer.clear();\par
00368     SV_insert_msg(msg);\par
00369     CmdLines.clear();\par
00370     redraw();\par
00371 \par
00372 \}\par
}
}
{\xe \v LineUndo\:GlWindow}
{\xe \v GlWindow\:LineUndo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GlWindow::LineUndo (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANGM}
{\bkmkend AAAAAAANGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAERQ" }{}}{\fldrslt {\cs37\ul\cf2 42}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEQA" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00042 \{ {\cf19 if}(!CmdLines.empty()) CmdLines.pop_back(); redraw(); \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GlWindow.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GlWindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
line_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v line_t}
{\xe \v line_t}
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGO" }{}}{\fldrslt {\cs37\ul\cf2 x0}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGP" }{}}{\fldrslt {\cs37\ul\cf2 y0}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGQ" }{}}{\fldrslt {\cs37\ul\cf2 x1}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGR" }{}}{\fldrslt {\cs37\ul\cf2 y1}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOY" }{}}{\fldrslt {\cs37\ul\cf2 28}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNW" }{}}{\fldrslt {\cs37\ul\cf2 CmdLine.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v x0\:line_t}
{\xe \v line_t\:x0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char line_t::x0}}
\par
{\bkmkstart AAAAAAANGO}
{\bkmkend AAAAAAANGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPB" }{}}{\fldrslt {\cs37\ul\cf2 30}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNW" }{}}{\fldrslt {\cs37\ul\cf2 CmdLine.h}}}
.}\par
}
{\xe \v x1\:line_t}
{\xe \v line_t\:x1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char line_t::x1}}
\par
{\bkmkstart AAAAAAANGQ}
{\bkmkend AAAAAAANGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPD" }{}}{\fldrslt {\cs37\ul\cf2 32}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNW" }{}}{\fldrslt {\cs37\ul\cf2 CmdLine.h}}}
.}\par
}
{\xe \v y0\:line_t}
{\xe \v line_t\:y0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char line_t::y0}}
\par
{\bkmkstart AAAAAAANGP}
{\bkmkend AAAAAAANGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPC" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNW" }{}}{\fldrslt {\cs37\ul\cf2 CmdLine.h}}}
.}\par
}
{\xe \v y1\:line_t}
{\xe \v line_t\:y1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char line_t::y1}}
\par
{\bkmkstart AAAAAAANGR}
{\bkmkend AAAAAAANGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPE" }{}}{\fldrslt {\cs37\ul\cf2 33}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNW" }{}}{\fldrslt {\cs37\ul\cf2 CmdLine.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CmdLine.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxButton_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxButton_i}
{\xe \v mxButton_i}
{\bkmkstart AAAAAAAFJA}
{\bkmkend AAAAAAAFJA}
\par
{
Inherits QPushButton.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGS" }{}}{\fldrslt {\cs37\ul\cf2 clickedEvent}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGT" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i}}}
 (QWidget *parent, mxButton *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFKN" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJT" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxButton_i\:mxButton_i}
{\xe \v mxButton_i\:mxButton_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxButton_i::mxButton_i (QWidget *  {\i parent}, mxButton *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANGT}
{\bkmkend AAAAAAANGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFKT" }{}}{\fldrslt {\cs37\ul\cf2 26}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJT" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00026                                                        : QPushButton (parent)\par
00027         \{\par
00028                 d_widget = widget;\par
00029         \}\par
}
}
{\xe \v ~mxButton_i\:mxButton_i}
{\xe \v mxButton_i\:~mxButton_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxButton_i::~mxButton_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANGU}
{\bkmkend AAAAAAANGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFKY" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJT" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clickedEvent\:mxButton_i}
{\xe \v mxButton_i\:clickedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxButton_i::clickedEvent (){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANGS}
{\bkmkend AAAAAAANGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFLB" }{}}{\fldrslt {\cs37\ul\cf2 34}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJT" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00035         \{\par
00036                 {\cf19 if} (d_widget->getId () > 0)\par
00037                 \{\par
00038                         mxWindow *parent = d_widget->getParent ();\par
00039                         mxEvent event;\par
00040                         {\cf17 event}.event = mxEvent::Action;\par
00041                         {\cf17 event}.widget = d_widget;\par
00042                         {\cf17 event}.action = d_widget->getId ();\par
00043                         {\cf19 while} (parent)\par
00044                         \{\par
00045                                 {\cf19 if} (parent->handleEvent (&event))\par
00046                                         {\cf19 break};\par
00047                                 parent = parent->getParent ();\par
00048                         \}\par
00049                 \}\par
00050         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxButton_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxCheckBox_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxCheckBox_i}
{\xe \v mxCheckBox_i}
{\bkmkstart AAAAAAAFMT}
{\bkmkend AAAAAAAFMT}
\par
{
Inherits QCheckBox.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGV" }{}}{\fldrslt {\cs37\ul\cf2 clickedEvent}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGW" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i}}}
 (QWidget *parent, mxCheckBox *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFOY" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFOE" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxCheckBox_i\:mxCheckBox_i}
{\xe \v mxCheckBox_i\:mxCheckBox_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxCheckBox_i::mxCheckBox_i (QWidget *  {\i parent}, mxCheckBox *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANGW}
{\bkmkend AAAAAAANGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFPE" }{}}{\fldrslt {\cs37\ul\cf2 26}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFOE" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00026                                                            : QCheckBox (parent)\par
00027         \{\par
00028                 d_widget = widget;\par
00029         \}\par
}
}
{\xe \v ~mxCheckBox_i\:mxCheckBox_i}
{\xe \v mxCheckBox_i\:~mxCheckBox_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxCheckBox_i::~mxCheckBox_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANGX}
{\bkmkend AAAAAAANGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFPJ" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFOE" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clickedEvent\:mxCheckBox_i}
{\xe \v mxCheckBox_i\:clickedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxCheckBox_i::clickedEvent (){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANGV}
{\bkmkend AAAAAAANGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFPM" }{}}{\fldrslt {\cs37\ul\cf2 34}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFOE" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00035         \{\par
00036                 {\cf19 if} (d_widget->getId () > 0)\par
00037                 \{\par
00038                         mxWindow *parent = d_widget->getParent ();\par
00039                         mxEvent event;\par
00040                         {\cf17 event}.event = mxEvent::Action;\par
00041                         {\cf17 event}.widget = d_widget;\par
00042                         {\cf17 event}.action = d_widget->getId ();\par
00043                         {\cf19 while} (parent)\par
00044                         \{\par
00045                                 {\cf19 if} (parent->handleEvent (&event))\par
00046                                         {\cf19 break};\par
00047                                 parent = parent->getParent ();\par
00048                         \}\par
00049                 \}\par
00050         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxCheckBox_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxChoice_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxChoice_i}
{\xe \v mxChoice_i}
{\bkmkstart AAAAAAAFRE}
{\bkmkend AAAAAAAFRE}
\par
{
Inherits QComboBox.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGY" }{}}{\fldrslt {\cs37\ul\cf2 activatedEvent}}}
 (int index)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANGZ" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i}}}
 (QWidget *parent, mxChoice *widget)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHA" }{}}{\fldrslt {\cs37\ul\cf2 d_currentItem}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFUQ" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFTW" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxChoice_i\:mxChoice_i}
{\xe \v mxChoice_i\:mxChoice_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxChoice_i::mxChoice_i (QWidget *  {\i parent}, mxChoice *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANGZ}
{\bkmkend AAAAAAANGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFUY" }{}}{\fldrslt {\cs37\ul\cf2 28}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFTW" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00028                                                        : QComboBox (parent)\par
00029         \{\par
00030                 d_widget = widget;\par
00031                 d_currentItem = 0;\par
00032         \}\par
}
}
{\xe \v ~mxChoice_i\:mxChoice_i}
{\xe \v mxChoice_i\:~mxChoice_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxChoice_i::~mxChoice_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHB}
{\bkmkend AAAAAAANHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFVE" }{}}{\fldrslt {\cs37\ul\cf2 34}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFTW" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00034 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v activatedEvent\:mxChoice_i}
{\xe \v mxChoice_i\:activatedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxChoice_i::activatedEvent (int  {\i index}){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANGY}
{\bkmkend AAAAAAANGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFVH" }{}}{\fldrslt {\cs37\ul\cf2 37}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFTW" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00038         \{\par
00039                 {\cf19 if} (d_widget->getId () > 0)\par
00040                 \{\par
00041                         mxWindow *parent = d_widget->getParent ();\par
00042                         mxEvent event;\par
00043                         {\cf17 event}.event = mxEvent::Action;\par
00044                         {\cf17 event}.widget = d_widget;\par
00045                         {\cf17 event}.action = d_widget->getId ();\par
00046                         {\cf19 while} (parent)\par
00047                         \{\par
00048                                 {\cf19 if} (parent->handleEvent (&event))\par
00049                                         {\cf19 break};\par
00050                                 parent = parent->getParent ();\par
00051                         \}\par
00052                 \}\par
00053         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v d_currentItem\:mxChoice_i}
{\xe \v mxChoice_i\:d_currentItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mxChoice_i::d_currentItem}}
\par
{\bkmkstart AAAAAAANHA}
{\bkmkend AAAAAAANHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFUW" }{}}{\fldrslt {\cs37\ul\cf2 26}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFTW" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxChoice_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxGlWindow_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxGlWindow_i}
{\xe \v mxGlWindow_i}
{\bkmkstart AAAAAAAGBN}
{\bkmkend AAAAAAAGBN}
\par
{
Inherits QOpenGLWidget.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHC" }{}}{\fldrslt {\cs37\ul\cf2 idleEvent}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHD" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i}}}
 (QWidget *parent, mxGlWindow *{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHE" }{}}{\fldrslt {\cs37\ul\cf2 paintGL}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHF" }{}}{\fldrslt {\cs37\ul\cf2 resizeGL}}}
 (int w, int h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHG" }{}}{\fldrslt {\cs37\ul\cf2 mousePressEvent}}}
 (QMouseEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHH" }{}}{\fldrslt {\cs37\ul\cf2 mouseMoveEvent}}}
 (QMouseEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHI" }{}}{\fldrslt {\cs37\ul\cf2 mouseReleaseEvent}}}
 (QMouseEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHJ" }{}}{\fldrslt {\cs37\ul\cf2 keyPressEvent}}}
 (QKeyEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHK" }{}}{\fldrslt {\cs37\ul\cf2 timerEvent}}}
 (QTimerEvent *e)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGFD" }{}}{\fldrslt {\cs37\ul\cf2 22}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxGlWindow_i\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:mxGlWindow_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxGlWindow_i::mxGlWindow_i (QWidget *  {\i parent}, mxGlWindow *  {\i GlWindow}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHD}
{\bkmkend AAAAAAANHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGFM" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031                                                              : QOpenGLWidget (parent)\par
00032         \{\par
00033                 d_GlWindow = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
;\par
00034                 d_dragging = {\cf17 false};\par
00035                 d_button = 0;\par
00036                 setMouseTracking ({\cf17 true});\par
00037                 installEventFilter ({\cf17 this});\par
00038         \}\par
}
}
{\xe \v ~mxGlWindow_i\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:~mxGlWindow_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxGlWindow_i::~mxGlWindow_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHL}
{\bkmkend AAAAAAANHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGFV" }{}}{\fldrslt {\cs37\ul\cf2 40}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00041         \{\par
00042         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v idleEvent\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:idleEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxGlWindow_i::idleEvent (){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANHC}
{\bkmkend AAAAAAANHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGGA" }{}}{\fldrslt {\cs37\ul\cf2 45}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00046         \{\par
00047                 mxEvent event;\par
00048 \par
00049                 {\cf17 event}.event = mxEvent::Idle;\par
00050                 d_GlWindow->handleEvent (&event);\par
00051         update();\par
00052         \}\par
}
}
{\xe \v keyPressEvent\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:keyPressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxGlWindow_i::keyPressEvent (QKeyEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANHJ}
{\bkmkend AAAAAAANHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGKE" }{}}{\fldrslt {\cs37\ul\cf2 153}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00154         \{\par
00155                 QOpenGLWidget::keyPressEvent (e);\par
00156 \par
00157                 mxEvent event;\par
00158 \par
00159                 {\cf17 event}.key = tolower (e->key ());\par
00160 \par
00161                 {\cf19 if} (e->modifiers () & Qt::ControlModifier)\par
00162                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
00163                 {\cf19 if} (e->modifiers () & Qt::ShiftModifier)\par
00164                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
00165 \par
00166                 {\cf17 event}.event = mxEvent::KeyDown;\par
00167                 d_GlWindow->handleEvent (&event);\par
00168         \}\par
}
}
{\xe \v mouseMoveEvent\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxGlWindow_i::mouseMoveEvent (QMouseEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANHH}
{\bkmkend AAAAAAANHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGHY" }{}}{\fldrslt {\cs37\ul\cf2 95}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00096         \{\par
00097                 QOpenGLWidget::mouseMoveEvent (e);\par
00098 \par
00099                 d_button = 0;\par
00100                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
00101                         d_button |= mxEvent::MouseLeftButton;\par
00102                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
00103                         d_button |= mxEvent::MouseRightButton;\par
00104                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
00105                         d_button |= mxEvent::MouseMiddleButton;\par
00106 \par
00107                 mxEvent event;\par
00108                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
00109                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
00110                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
00111                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
00112 \par
00113                 {\cf17 event}.buttons = d_button;\par
00114                 {\cf17 event}.x = e->x ();\par
00115                 {\cf17 event}.y = e->y ();\par
00116 \par
00117                 {\cf19 if} (d_dragging)\par
00118                         {\cf17 event}.event = mxEvent::MouseDrag;\par
00119                 {\cf19 else}\par
00120                         {\cf17 event}.event = mxEvent::MouseMove;\par
00121 \par
00122                 d_GlWindow->handleEvent (&event);\par
00123         \}\par
}
}
{\xe \v mousePressEvent\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxGlWindow_i::mousePressEvent (QMouseEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANHG}
{\bkmkend AAAAAAANHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGGZ" }{}}{\fldrslt {\cs37\ul\cf2 70}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00071         \{\par
00072                 QOpenGLWidget::mousePressEvent (e);\par
00073                 d_dragging = {\cf17 true};\par
00074 \par
00075                 d_button = 0;\par
00076                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
00077                         d_button |= mxEvent::MouseLeftButton;\par
00078                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
00079                         d_button |= mxEvent::MouseRightButton;\par
00080                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
00081                         d_button |= mxEvent::MouseMiddleButton;\par
00082 \par
00083                 mxEvent event;\par
00084                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
00085                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
00086                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
00087                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
00088                 {\cf17 event}.event = mxEvent::MouseDown;\par
00089                 {\cf17 event}.buttons = d_button;\par
00090                 {\cf17 event}.x = e->x ();\par
00091                 {\cf17 event}.y = e->y ();\par
00092                 d_GlWindow->handleEvent (&event);\par
00093         \}\par
}
}
{\xe \v mouseReleaseEvent\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxGlWindow_i::mouseReleaseEvent (QMouseEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANHI}
{\bkmkend AAAAAAANHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGJC" }{}}{\fldrslt {\cs37\ul\cf2 125}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00126         \{\par
00127                 QOpenGLWidget::mouseReleaseEvent (e);\par
00128                 d_dragging = {\cf17 false};\par
00129 \par
00130                 d_button = 0;\par
00131                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
00132                         d_button |= mxEvent::MouseLeftButton;\par
00133                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
00134                         d_button |= mxEvent::MouseRightButton;\par
00135                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
00136                         d_button |= mxEvent::MouseMiddleButton;\par
00137 \par
00138                 mxEvent event;\par
00139                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
00140                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
00141                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
00142                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
00143 \par
00144                 {\cf17 event}.event = mxEvent::MouseUp;\par
00145                 {\cf17 event}.buttons = d_button;\par
00146                 {\cf17 event}.x = e->x ();\par
00147                 {\cf17 event}.y = e->y ();\par
00148 \par
00149                 d_GlWindow->handleEvent (&event);\par
00150                 d_button = 0;\par
00151         \}\par
}
}
{\xe \v paintGL\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:paintGL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxGlWindow_i::paintGL (){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANHE}
{\bkmkend AAAAAAANHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGGK" }{}}{\fldrslt {\cs37\ul\cf2 55}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00056         \{\par
00057                 d_GlWindow->draw ();\par
00058         update();\par
00059         \}\par
}
}
{\xe \v resizeGL\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:resizeGL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxGlWindow_i::resizeGL (int  {\i w}, int  {\i h}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANHF}
{\bkmkend AAAAAAANHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGGQ" }{}}{\fldrslt {\cs37\ul\cf2 61}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00062         \{\par
00063                 mxEvent event;\par
00064                 {\cf17 event}.event = mxEvent::Size;\par
00065                 {\cf17 event}.width = w;\par
00066                 {\cf17 event}.height = h;\par
00067                 d_GlWindow->handleEvent (&event);\par
00068         \}\par
}
}
{\xe \v timerEvent\:mxGlWindow_i}
{\xe \v mxGlWindow_i\:timerEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxGlWindow_i::timerEvent (QTimerEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANHK}
{\bkmkend AAAAAAANHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGKV" }{}}{\fldrslt {\cs37\ul\cf2 170}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGEH" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00171         \{\par
00172                 mxEvent event;\par
00173                 {\cf17 event}.event = mxEvent::Timer;\par
00174                 d_GlWindow->handleEvent (&event);\par
00175         {\cf20 //update();}\par
00176         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxGlWindow_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxGroupBox_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxGroupBox_i}
{\xe \v mxGroupBox_i}
{\bkmkstart AAAAAAAGLW}
{\bkmkend AAAAAAAGLW}
\par
{
Inherits QGroupBox.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHM" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox_i}}}
 (QWidget *parent, mxGroupBox *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLV" }{}}{\fldrslt {\cs37\ul\cf2 18}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLD" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox.cpp}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxGroupBox_i\:mxGroupBox_i}
{\xe \v mxGroupBox_i\:mxGroupBox_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxGroupBox_i::mxGroupBox_i (QWidget *  {\i parent}, mxGroupBox *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHM}
{\bkmkend AAAAAAANHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGMB" }{}}{\fldrslt {\cs37\ul\cf2 23}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLD" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00023                                                            : QGroupBox (parent)\par
00024         \{\par
00025                 d_widget = widget;\par
00026         \}\par
}
}
{\xe \v ~mxGroupBox_i\:mxGroupBox_i}
{\xe \v mxGroupBox_i\:~mxGroupBox_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxGroupBox_i::~mxGroupBox_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHN}
{\bkmkend AAAAAAANHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGMG" }{}}{\fldrslt {\cs37\ul\cf2 28}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLD" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00029         \{\par
00030         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxGroupBox.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxLabel_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxLabel_i}
{\xe \v mxLabel_i}
{\bkmkstart AAAAAAAGOD}
{\bkmkend AAAAAAAGOD}
\par
{
Inherits QLabel.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHO" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel_i}}}
 (QWidget *parent, mxLabel *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOC" }{}}{\fldrslt {\cs37\ul\cf2 18}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGNK" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel.cpp}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxLabel_i\:mxLabel_i}
{\xe \v mxLabel_i\:mxLabel_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxLabel_i::mxLabel_i (QWidget *  {\i parent}, mxLabel *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHO}
{\bkmkend AAAAAAANHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOI" }{}}{\fldrslt {\cs37\ul\cf2 23}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGNK" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00023                                                      : QLabel (parent)\par
00024         \{\par
00025                 d_widget = widget;\par
00026                 setAlignment (Qt::AlignLeft | Qt::AlignTop);\par
00027         \}\par
}
}
{\xe \v ~mxLabel_i\:mxLabel_i}
{\xe \v mxLabel_i\:~mxLabel_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxLabel_i::~mxLabel_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHP}
{\bkmkend AAAAAAANHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOO" }{}}{\fldrslt {\cs37\ul\cf2 29}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGNK" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00030         \{\par
00031         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxLabel.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxLineEdit_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxLineEdit_i}
{\xe \v mxLineEdit_i}
{\bkmkstart AAAAAAAGQU}
{\bkmkend AAAAAAAGQU}
\par
{
Inherits QLineEdit.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHQ" }{}}{\fldrslt {\cs37\ul\cf2 textChangedEvent}}}
 (const QString &text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHR" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i}}}
 (QWidget *parent, mxLineEdit *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGTF" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGSL" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxLineEdit_i\:mxLineEdit_i}
{\xe \v mxLineEdit_i\:mxLineEdit_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxLineEdit_i::mxLineEdit_i (QWidget *  {\i parent}, mxLineEdit *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHR}
{\bkmkend AAAAAAANHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGTM" }{}}{\fldrslt {\cs37\ul\cf2 27}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGSL" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00027                                                            : QLineEdit (parent)\par
00028         \{\par
00029                 d_widget = widget;\par
00030                 setFrame ({\cf17 true});\par
00031         \}\par
}
}
{\xe \v ~mxLineEdit_i\:mxLineEdit_i}
{\xe \v mxLineEdit_i\:~mxLineEdit_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxLineEdit_i::~mxLineEdit_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHS}
{\bkmkend AAAAAAANHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGTS" }{}}{\fldrslt {\cs37\ul\cf2 33}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGSL" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00034         \{\par
00035         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v textChangedEvent\:mxLineEdit_i}
{\xe \v mxLineEdit_i\:textChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxLineEdit_i::textChangedEvent (const QString &  {\i text}){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANHQ}
{\bkmkend AAAAAAANHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGTX" }{}}{\fldrslt {\cs37\ul\cf2 38}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGSL" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00039         \{\par
00040                 {\cf19 if} (d_widget->getId () > 0)\par
00041                 \{\par
00042                         mxWindow *parent = d_widget->getParent ();\par
00043                         mxEvent event;\par
00044                         {\cf17 event}.event = mxEvent::Action;\par
00045                         {\cf17 event}.widget = d_widget;\par
00046                         {\cf17 event}.action = d_widget->getId ();\par
00047                         {\cf19 while} (parent)\par
00048                         \{\par
00049                                 {\cf19 if} (parent->handleEvent (&event))\par
00050                                         {\cf19 break};\par
00051                                 parent = parent->getParent ();\par
00052                         \}\par
00053                 \}\par
00054         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxLineEdit_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxListBox_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxListBox_i}
{\xe \v mxListBox_i}
{\bkmkstart AAAAAAAGVP}
{\bkmkend AAAAAAAGVP}
\par
{
Inherits QListWidget.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHT" }{}}{\fldrslt {\cs37\ul\cf2 selectedEvent}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHU" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i}}}
 (QWidget *parent, mxListBox *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGZS" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGYY" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxListBox_i\:mxListBox_i}
{\xe \v mxListBox_i\:mxListBox_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxListBox_i::mxListBox_i (QWidget *  {\i parent}, mxListBox *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHU}
{\bkmkend AAAAAAANHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGZY" }{}}{\fldrslt {\cs37\ul\cf2 26}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGYY" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00026                                                          : QListWidget (parent)\par
00027         \{\par
00028                 d_widget = widget;\par
00029         \}\par
}
}
{\xe \v ~mxListBox_i\:mxListBox_i}
{\xe \v mxListBox_i\:~mxListBox_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxListBox_i::~mxListBox_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHV}
{\bkmkend AAAAAAANHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHAD" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGYY" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00032         \{\par
00033         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v selectedEvent\:mxListBox_i}
{\xe \v mxListBox_i\:selectedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxListBox_i::selectedEvent (){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANHT}
{\bkmkend AAAAAAANHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHAI" }{}}{\fldrslt {\cs37\ul\cf2 36}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGYY" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00037         \{\par
00038                 {\cf19 if} (d_widget->getId () > 0)\par
00039                 \{\par
00040                         mxWindow *parent = d_widget->getParent ();\par
00041                         mxEvent event;\par
00042                         {\cf17 event}.event = mxEvent::Action;\par
00043                         {\cf17 event}.widget = d_widget;\par
00044                         {\cf17 event}.action = d_widget->getId ();\par
00045                         {\cf19 while} (parent)\par
00046                         \{\par
00047                                 {\cf19 if} (d_widget->getParent ()->handleEvent (&event))\par
00048                                         {\cf19 break};\par
00049                                 parent = parent->getParent ();\par
00050                         \}\par
00051                 \}\par
00052         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxListBox_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxMenu_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxMenu_i}
{\xe \v mxMenu_i}
{\bkmkstart AAAAAAAHBU}
{\bkmkend AAAAAAAHBU}
\par
{
Inherits QMenu.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHW" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu_i}}}
 (mxMenu *menu)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBT" }{}}{\fldrslt {\cs37\ul\cf2 19}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBA" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu.cpp}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxMenu_i\:mxMenu_i}
{\xe \v mxMenu_i\:mxMenu_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxMenu_i::mxMenu_i (mxMenu *  {\i menu}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHW}
{\bkmkend AAAAAAANHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBZ" }{}}{\fldrslt {\cs37\ul\cf2 24}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBA" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00024                                 : QMenu ()\par
00025         \{\par
00026                 d_widget = menu;\par
00027         \}\par
}
}
{\xe \v ~mxMenu_i\:mxMenu_i}
{\xe \v mxMenu_i\:~mxMenu_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxMenu_i::~mxMenu_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHX}
{\bkmkend AAAAAAANHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHCE" }{}}{\fldrslt {\cs37\ul\cf2 29}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBA" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00030         \{\par
00031         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxMenu.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxMenuBar_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxMenuBar_i}
{\xe \v mxMenuBar_i}
{\bkmkstart AAAAAAAHGH}
{\bkmkend AAAAAAAHGH}
\par
{
Inherits QMenuBar.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHY" }{}}{\fldrslt {\cs37\ul\cf2 activatedEvent}}}
 (QAction *action)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANHZ" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i}}}
 (QWidget *parent, mxMenuBar *menuBar)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHKG" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHJM" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxMenuBar_i\:mxMenuBar_i}
{\xe \v mxMenuBar_i\:mxMenuBar_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxMenuBar_i::mxMenuBar_i (QWidget *  {\i parent}, mxMenuBar *  {\i menuBar}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANHZ}
{\bkmkend AAAAAAANHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHKL" }{}}{\fldrslt {\cs37\ul\cf2 25}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHJM" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00025                                                           : QMenuBar (parent)\par
00026         \{\par
00027                 d_widget = menuBar;\par
00028         \}\par
}
}
{\xe \v ~mxMenuBar_i\:mxMenuBar_i}
{\xe \v mxMenuBar_i\:~mxMenuBar_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxMenuBar_i::~mxMenuBar_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIA}
{\bkmkend AAAAAAANIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHKQ" }{}}{\fldrslt {\cs37\ul\cf2 30}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHJM" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031         \{\par
00032         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v activatedEvent\:mxMenuBar_i}
{\xe \v mxMenuBar_i\:activatedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxMenuBar_i::activatedEvent (QAction *  {\i action}){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANHY}
{\bkmkend AAAAAAANHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHKV" }{}}{\fldrslt {\cs37\ul\cf2 35}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHJM" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00036         \{\par
00037                 {\cf18 int} itemId = g_actionList.key(action);\par
00038                 {\cf19 if} (itemId > 0)\par
00039                 \{\par
00040                         mxWindow *parent = d_widget->getParent ();\par
00041                         mxEvent event;\par
00042                         {\cf17 event}.event = mxEvent::Action;\par
00043                         {\cf17 event}.action = itemId;\par
00044                         {\cf19 while} (parent)\par
00045                         \{\par
00046                                 {\cf19 if} (parent->handleEvent (&event))\par
00047                                         {\cf19 break};\par
00048                                 parent = parent->getParent ();\par
00049                         \}\par
00050                 \}\par
00051         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxMenuBar_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxPopupMenu_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxPopupMenu_i}
{\xe \v mxPopupMenu_i}
{\bkmkstart AAAAAAAHPC}
{\bkmkend AAAAAAAHPC}
\par
{
Inherits QMenu.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIB" }{}}{\fldrslt {\cs37\ul\cf2 activatedEvent}}}
 (QAction *action)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIC" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i}}}
 (mxPopupMenu *popupMenu)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMap< int, QAction * > {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANID" }{}}{\fldrslt {\cs37\ul\cf2 d_actionList}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIE" }{}}{\fldrslt {\cs37\ul\cf2 d_lastItemId}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHTJ" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHSP" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxPopupMenu_i\:mxPopupMenu_i}
{\xe \v mxPopupMenu_i\:mxPopupMenu_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxPopupMenu_i::mxPopupMenu_i (mxPopupMenu *  {\i popupMenu}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIC}
{\bkmkend AAAAAAANIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHTR" }{}}{\fldrslt {\cs37\ul\cf2 28}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHSP" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00028                                                : QMenu ()\par
00029         \{\par
00030                 d_widget = popupMenu;\par
00031                 d_lastItemId = -1;\par
00032         \}\par
}
}
{\xe \v ~mxPopupMenu_i\:mxPopupMenu_i}
{\xe \v mxPopupMenu_i\:~mxPopupMenu_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxPopupMenu_i::~mxPopupMenu_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIF}
{\bkmkend AAAAAAANIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHTX" }{}}{\fldrslt {\cs37\ul\cf2 34}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHSP" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00035         \{\par
00036         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v activatedEvent\:mxPopupMenu_i}
{\xe \v mxPopupMenu_i\:activatedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxPopupMenu_i::activatedEvent (QAction *  {\i action}){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANIB}
{\bkmkend AAAAAAANIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHUC" }{}}{\fldrslt {\cs37\ul\cf2 39}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHSP" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00040         \{\par
00041                 d_lastItemId = d_actionList.key(action);\par
00042         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v d_actionList\:mxPopupMenu_i}
{\xe \v mxPopupMenu_i\:d_actionList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMap<int, QAction*> mxPopupMenu_i::d_actionList}}
\par
{\bkmkstart AAAAAAANID}
{\bkmkend AAAAAAANID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHTP" }{}}{\fldrslt {\cs37\ul\cf2 26}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHSP" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i.h}}}
.}\par
}
{\xe \v d_lastItemId\:mxPopupMenu_i}
{\xe \v mxPopupMenu_i\:d_lastItemId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mxPopupMenu_i::d_lastItemId}}
\par
{\bkmkstart AAAAAAANIE}
{\bkmkend AAAAAAANIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHTQ" }{}}{\fldrslt {\cs37\ul\cf2 27}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHSP" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxPopupMenu_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxProgressBar_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxProgressBar_i}
{\xe \v mxProgressBar_i}
{\bkmkstart AAAAAAAHVC}
{\bkmkend AAAAAAAHVC}
\par
{
Inherits QProgressBar.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIG" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar_i}}}
 (QWidget *parent, mxProgressBar *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVB" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHUH" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar.cpp}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxProgressBar_i\:mxProgressBar_i}
{\xe \v mxProgressBar_i\:mxProgressBar_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxProgressBar_i::mxProgressBar_i (QWidget *  {\i parent}, mxProgressBar *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIG}
{\bkmkend AAAAAAANIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVH" }{}}{\fldrslt {\cs37\ul\cf2 25}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHUH" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00025                                                                  : QProgressBar (parent)\par
00026         \{\par
00027                 d_widget = widget;\par
00028                 setRange (0, 100);\par
00029                 setValue (0);\par
00030         \}\par
}
}
{\xe \v ~mxProgressBar_i\:mxProgressBar_i}
{\xe \v mxProgressBar_i\:~mxProgressBar_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxProgressBar_i::~mxProgressBar_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIH}
{\bkmkend AAAAAAANIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVO" }{}}{\fldrslt {\cs37\ul\cf2 32}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHUH" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00033         \{\par
00034         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxProgressBar.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxRadioButton_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxRadioButton_i}
{\xe \v mxRadioButton_i}
{\bkmkstart AAAAAAAHZF}
{\bkmkend AAAAAAAHZF}
\par
{
Inherits QRadioButton.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANII" }{}}{\fldrslt {\cs37\ul\cf2 clickedEvent}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIJ" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i}}}
 (QWidget *parent, mxRadioButton *widget, bool newGroup)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIBN" }{}}{\fldrslt {\cs37\ul\cf2 21}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIAS" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxRadioButton_i\:mxRadioButton_i}
{\xe \v mxRadioButton_i\:mxRadioButton_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxRadioButton_i::mxRadioButton_i (QWidget *  {\i parent}, mxRadioButton *  {\i widget}, bool  {\i newGroup}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIJ}
{\bkmkend AAAAAAANIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIBV" }{}}{\fldrslt {\cs37\ul\cf2 29}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIAS" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00029                                                                                 : QRadioButton (parent)\par
00030         \{\par
00031                 d_widget = widget;\par
00032                 d_buttonGroup = 0;\par
00033 \par
00034                 {\cf19 if} (newGroup)\par
00035                 \{\par
00036                         d_buttonGroup = {\cf17 new} QButtonGroup ();\par
00037                         d_buttonGroup->setExclusive ({\cf17 true});\par
00038                         s_buttonGroup = d_buttonGroup;\par
00039                 \}\par
00040 \par
00041                 {\cf19 if} (s_buttonGroup)\par
00042                         s_buttonGroup->addButton ({\cf17 this});\par
00043         \}\par
}
}
{\xe \v ~mxRadioButton_i\:mxRadioButton_i}
{\xe \v mxRadioButton_i\:~mxRadioButton_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxRadioButton_i::~mxRadioButton_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIK}
{\bkmkend AAAAAAANIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAICL" }{}}{\fldrslt {\cs37\ul\cf2 45}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIAS" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00046         \{\par
00047                 {\cf19 if} (d_buttonGroup)\par
00048                 \{\par
00049                         d_buttonGroup->removeButton ({\cf17 this});\par
00050                 \}\par
00051         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clickedEvent\:mxRadioButton_i}
{\xe \v mxRadioButton_i\:clickedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxRadioButton_i::clickedEvent (){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANII}
{\bkmkend AAAAAAANII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAICU" }{}}{\fldrslt {\cs37\ul\cf2 54}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIAS" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00055         \{\par
00056                 {\cf19 if} (d_widget->getId () > 0)\par
00057                 \{\par
00058                         mxWindow *parent = d_widget->getParent ();\par
00059                         mxEvent event;\par
00060                         {\cf17 event}.event = mxEvent::Action;\par
00061                         {\cf17 event}.widget = d_widget;\par
00062                         {\cf17 event}.action = d_widget->getId ();\par
00063                         {\cf19 while} (parent)\par
00064                         \{\par
00065                                 {\cf19 if} (parent->handleEvent (&event))\par
00066                                         {\cf19 break};\par
00067                                 parent = parent->getParent ();\par
00068                         \}\par
00069                 \}\par
00070         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxRadioButton_i.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxRadioButton.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxSlider_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxSlider_i}
{\xe \v mxSlider_i}
{\bkmkstart AAAAAAAIKR}
{\bkmkend AAAAAAAIKR}
\par
{
Inherits QSlider.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIL" }{}}{\fldrslt {\cs37\ul\cf2 valueChangedEvent}}}
 (int value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIM" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i}}}
 (QWidget *parent, mxSlider *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIPH" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAION" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxSlider_i\:mxSlider_i}
{\xe \v mxSlider_i\:mxSlider_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxSlider_i::mxSlider_i (QWidget *  {\i parent}, mxSlider *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIM}
{\bkmkend AAAAAAANIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIPN" }{}}{\fldrslt {\cs37\ul\cf2 26}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAION" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00026                                                        : QSlider (parent)\par
00027         \{\par
00028                 d_widget = widget;\par
00029         \}\par
}
}
{\xe \v ~mxSlider_i\:mxSlider_i}
{\xe \v mxSlider_i\:~mxSlider_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxSlider_i::~mxSlider_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIN}
{\bkmkend AAAAAAANIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIPS" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAION" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00032         \{\par
00033         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v valueChangedEvent\:mxSlider_i}
{\xe \v mxSlider_i\:valueChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxSlider_i::valueChangedEvent (int  {\i value}){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANIL}
{\bkmkend AAAAAAANIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIPX" }{}}{\fldrslt {\cs37\ul\cf2 36}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAION" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00037         \{\par
00038                 {\cf19 if} (d_widget->getId () > 0)\par
00039                 \{\par
00040                         mxWindow *parent = d_widget->getParent ();\par
00041                         mxEvent event;\par
00042                         {\cf17 event}.event = mxEvent::Action;\par
00043                         {\cf17 event}.widget = d_widget;\par
00044                         {\cf17 event}.action = d_widget->getId ();\par
00045                         {\cf19 while} (parent)\par
00046                         \{\par
00047                                 {\cf19 if} (parent->handleEvent (&event))\par
00048                                         {\cf19 break};\par
00049                                 parent = parent->getParent ();\par
00050                         \}\par
00051                 \}\par
00052         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxSlider_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxTab_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxTab_i}
{\xe \v mxTab_i}
{\bkmkstart AAAAAAAIRP}
{\bkmkend AAAAAAAIRP}
\par
{
Inherits QTabWidget.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIO" }{}}{\fldrslt {\cs37\ul\cf2 tabBarClickedEvent}}}
 (int index)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIP" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i}}}
 (QWidget *parent, mxTab *widget)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIQ" }{}}{\fldrslt {\cs37\ul\cf2 select}}}
 (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIR" }{}}{\fldrslt {\cs37\ul\cf2 getSelectedIndex}}}
 () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIUM" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAITS" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxTab_i\:mxTab_i}
{\xe \v mxTab_i\:mxTab_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxTab_i::mxTab_i (QWidget *  {\i parent}, mxTab *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIP}
{\bkmkend AAAAAAANIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIUT" }{}}{\fldrslt {\cs37\ul\cf2 27}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAITS" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00027                                                  : QTabWidget (parent)\par
00028         \{\par
00029                 d_widget = widget;\par
00030                 d_currentItem = 0;\par
00031         \}\par
}
}
{\xe \v ~mxTab_i\:mxTab_i}
{\xe \v mxTab_i\:~mxTab_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxTab_i::~mxTab_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIS}
{\bkmkend AAAAAAANIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIVJ" }{}}{\fldrslt {\cs37\ul\cf2 43}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAITS" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00044         \{\par
00045         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getSelectedIndex\:mxTab_i}
{\xe \v mxTab_i\:getSelectedIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mxTab_i::getSelectedIndex () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIR}
{\bkmkend AAAAAAANIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIVE" }{}}{\fldrslt {\cs37\ul\cf2 38}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAITS" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00039         \{\par
00040                 {\cf19 return} d_currentItem;\par
00041         \}\par
}
}
{\xe \v select\:mxTab_i}
{\xe \v mxTab_i\:select}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxTab_i::select (int  {\i index}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIQ}
{\bkmkend AAAAAAANIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIUZ" }{}}{\fldrslt {\cs37\ul\cf2 33}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAITS" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00034         \{\par
00035                 d_currentItem = index;\par
00036         \}\par
}
}
{\xe \v tabBarClickedEvent\:mxTab_i}
{\xe \v mxTab_i\:tabBarClickedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxTab_i::tabBarClickedEvent (int  {\i index}){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANIO}
{\bkmkend AAAAAAANIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIVO" }{}}{\fldrslt {\cs37\ul\cf2 48}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAITS" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00049         \{\par
00050                 d_currentItem = index;\par
00051 \par
00052                 {\cf19 if} (d_widget->getId () > 0)\par
00053                 \{\par
00054                         mxWindow *parent = d_widget->getParent ();\par
00055                         mxEvent event;\par
00056                         {\cf17 event}.event = mxEvent::Action;\par
00057                         {\cf17 event}.widget = d_widget;\par
00058                         {\cf17 event}.action = d_widget->getId ();\par
00059                         {\cf19 while} (parent)\par
00060                         \{\par
00061                                 {\cf19 if} (parent->handleEvent (&event))\par
00062                                         {\cf19 break};\par
00063                                 parent = parent->getParent ();\par
00064                         \}\par
00065                 \}\par
00066         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxTab_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxToggleButton_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxToggleButton_i}
{\xe \v mxToggleButton_i}
{\bkmkstart AAAAAAAIXI}
{\bkmkend AAAAAAAIXI}
\par
{
Inherits QPushButton.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIT" }{}}{\fldrslt {\cs37\ul\cf2 clickedEvent}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIU" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i}}}
 (QWidget *parent, mxToggleButton *widget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIZL" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIYR" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxToggleButton_i\:mxToggleButton_i}
{\xe \v mxToggleButton_i\:mxToggleButton_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxToggleButton_i::mxToggleButton_i (QWidget *  {\i parent}, mxToggleButton *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIU}
{\bkmkend AAAAAAANIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIZR" }{}}{\fldrslt {\cs37\ul\cf2 26}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIYR" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00026                                                                    : QPushButton (parent)\par
00027         \{\par
00028                 d_widget = widget;\par
00029         \}\par
}
}
{\xe \v ~mxToggleButton_i\:mxToggleButton_i}
{\xe \v mxToggleButton_i\:~mxToggleButton_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxToggleButton_i::~mxToggleButton_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIV}
{\bkmkend AAAAAAANIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIZW" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIYR" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clickedEvent\:mxToggleButton_i}
{\xe \v mxToggleButton_i\:clickedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxToggleButton_i::clickedEvent (){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANIT}
{\bkmkend AAAAAAANIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIZZ" }{}}{\fldrslt {\cs37\ul\cf2 34}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIYR" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00035         \{\par
00036                 {\cf19 if} (d_widget->getId () > 0)\par
00037                 \{\par
00038                         mxWindow *parent = d_widget->getParent ();\par
00039                         mxEvent event;\par
00040                         {\cf17 event}.event = mxEvent::Action;\par
00041                         {\cf17 event}.widget = d_widget;\par
00042                         {\cf17 event}.action = d_widget->getId ();\par
00043                         {\cf19 while} (parent)\par
00044                         \{\par
00045                                 {\cf19 if} (parent->handleEvent (&event))\par
00046                                         {\cf19 break};\par
00047                                 parent = parent->getParent ();\par
00048                         \}\par
00049                 \}\par
00050         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxToggleButton_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxTreeView_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxTreeView_i}
{\xe \v mxTreeView_i}
{\bkmkstart AAAAAAAJCU}
{\bkmkend AAAAAAAJCU}
\par
{
Inherits QTreeWidget.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIW" }{}}{\fldrslt {\cs37\ul\cf2 selectionChangedEvent}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIX" }{}}{\fldrslt {\cs37\ul\cf2 doubleClickedEvent}}}
 (QTreeWidgetItem *item, int column)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIY" }{}}{\fldrslt {\cs37\ul\cf2 rightButtonClickedEvent}}}
 (const QPoint &pos)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANIZ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i}}}
 (QWidget *parent, mxTreeView *widget)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJA" }{}}{\fldrslt {\cs37\ul\cf2 resizeEvent}}}
 (QResizeEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJB" }{}}{\fldrslt {\cs37\ul\cf2 mousePressEvent}}}
 (QMouseEvent *event)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJKM" }{}}{\fldrslt {\cs37\ul\cf2 22}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxTreeView_i\:mxTreeView_i}
{\xe \v mxTreeView_i\:mxTreeView_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxTreeView_i::mxTreeView_i (QWidget *  {\i parent}, mxTreeView *  {\i widget}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANIZ}
{\bkmkend AAAAAAANIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJKS" }{}}{\fldrslt {\cs37\ul\cf2 28}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00028                                                            : QTreeWidget (parent)\par
00029         \{\par
00030                 d_widget = widget;\par
00031         \}\par
}
}
{\xe \v ~mxTreeView_i\:mxTreeView_i}
{\xe \v mxTreeView_i\:~mxTreeView_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxTreeView_i::~mxTreeView_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANJC}
{\bkmkend AAAAAAANJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJKX" }{}}{\fldrslt {\cs37\ul\cf2 33}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00034         \{\par
00035         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v doubleClickedEvent\:mxTreeView_i}
{\xe \v mxTreeView_i\:doubleClickedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxTreeView_i::doubleClickedEvent (QTreeWidgetItem *  {\i item}, int  {\i column}){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANIX}
{\bkmkend AAAAAAANIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJMK" }{}}{\fldrslt {\cs37\ul\cf2 72}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00073         \{\par
00074                 {\cf19 if} (d_widget->getId () > 0)\par
00075                 \{\par
00076                         mxWindow *parent = ((mxWidget *) d_widget)->getParent ();\par
00077                         mxEvent event;\par
00078                         {\cf17 event}.event = mxEvent::Action;\par
00079                         {\cf17 event}.widget = d_widget;\par
00080                         {\cf17 event}.action = d_widget->getId ();\par
00081                         {\cf17 event}.flags = mxEvent::DoubleClicked;\par
00082                         {\cf19 while} (parent)\par
00083                         \{\par
00084                                 {\cf19 if} (parent->handleEvent (&event))\par
00085                                         {\cf19 break};\par
00086                                 parent = parent->getParent ();\par
00087                         \}\par
00088                 \}\par
00089         \}\par
}
}
{\xe \v mousePressEvent\:mxTreeView_i}
{\xe \v mxTreeView_i\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxTreeView_i::mousePressEvent (QMouseEvent *  {\i event}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJB}
{\bkmkend AAAAAAANJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJLI" }{}}{\fldrslt {\cs37\ul\cf2 44}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00045         \{\par
00046                 {\cf19 if} (event->button() == Qt::RightButton)\par
00047                 \{\par
00048                         emit rightButtonClickedEvent(event->pos());\par
00049                 \}\par
00050                 QTreeWidget::mousePressEvent(event);\par
00051         \}\par
}
}
{\xe \v resizeEvent\:mxTreeView_i}
{\xe \v mxTreeView_i\:resizeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxTreeView_i::resizeEvent (QResizeEvent *  {\i event}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJA}
{\bkmkend AAAAAAANJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJLC" }{}}{\fldrslt {\cs37\ul\cf2 38}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00039         \{\par
00040                 setColumnWidth (0, event->size ().width ());\par
00041                 QTreeWidget::resizeEvent (event);\par
00042         \}\par
}
}
{\xe \v rightButtonClickedEvent\:mxTreeView_i}
{\xe \v mxTreeView_i\:rightButtonClickedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxTreeView_i::rightButtonClickedEvent (const QPoint &  {\i pos}){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANIY}
{\bkmkend AAAAAAANIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJND" }{}}{\fldrslt {\cs37\ul\cf2 91}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00092         \{\par
00093                 {\cf19 if} (d_widget->getId () > 0)\par
00094                 \{\par
00095                         mxWindow *parent = ((mxWidget *) d_widget)->getParent ();\par
00096                         mxEvent event;\par
00097                         {\cf17 event}.event = mxEvent::Action;\par
00098                         {\cf17 event}.widget = d_widget;\par
00099                         {\cf17 event}.action = d_widget->getId ();\par
00100                         {\cf17 event}.flags = mxEvent::RightClicked;\par
00101                         QPoint point = pos;{\cf20 //mapFromGlobal (pos);                       }\par
00102                         {\cf17 event}.x = point.x ();\par
00103                         {\cf17 event}.y = point.y ();\par
00104                         {\cf19 while} (parent)\par
00105                         \{\par
00106                                 {\cf19 if} (parent->handleEvent (&event))\par
00107                                         {\cf19 break};\par
00108                                 parent = parent->getParent ();\par
00109                         \}\par
00110                 \}\par
00111         \}\par
}
}
{\xe \v selectionChangedEvent\:mxTreeView_i}
{\xe \v mxTreeView_i\:selectionChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxTreeView_i::selectionChangedEvent (){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANIW}
{\bkmkend AAAAAAANIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJLS" }{}}{\fldrslt {\cs37\ul\cf2 54}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJJQ" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00055         \{\par
00056                 {\cf19 if} (d_widget->getId () > 0)\par
00057                 \{\par
00058                         mxWindow *parent = ((mxWidget *) d_widget)->getParent ();\par
00059                         mxEvent event;\par
00060                         {\cf17 event}.event = mxEvent::Action;\par
00061                         {\cf17 event}.widget = d_widget;\par
00062                         {\cf17 event}.action = d_widget->getId ();\par
00063                         {\cf19 while} (parent)\par
00064                         \{\par
00065                                 {\cf19 if} (parent->handleEvent (&event))\par
00066                                         {\cf19 break};\par
00067                                 parent = parent->getParent ();\par
00068                         \}\par
00069                 \}\par
00070         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxTreeView_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxWidget_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxWidget_i}
{\xe \v mxWidget_i}
{\bkmkstart AAAAAAAJPG}
{\bkmkend AAAAAAAJPG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxWindow * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJD" }{}}{\fldrslt {\cs37\ul\cf2 d_parent_p}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJE" }{}}{\fldrslt {\cs37\ul\cf2 d_widget}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJF" }{}}{\fldrslt {\cs37\ul\cf2 d_userData}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJG" }{}}{\fldrslt {\cs37\ul\cf2 d_id}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJH" }{}}{\fldrslt {\cs37\ul\cf2 d_type}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPF" }{}}{\fldrslt {\cs37\ul\cf2 32}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJNZ" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget.cpp}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v d_id\:mxWidget_i}
{\xe \v mxWidget_i\:d_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mxWidget_i::d_id}}
\par
{\bkmkstart AAAAAAANJG}
{\bkmkend AAAAAAANJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPN" }{}}{\fldrslt {\cs37\ul\cf2 39}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJNZ" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget.cpp}}}
.}\par
}
{\xe \v d_parent_p\:mxWidget_i}
{\xe \v mxWidget_i\:d_parent_p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxWindow* mxWidget_i::d_parent_p}}
\par
{\bkmkstart AAAAAAANJD}
{\bkmkend AAAAAAANJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPJ" }{}}{\fldrslt {\cs37\ul\cf2 35}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJNZ" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget.cpp}}}
.}\par
}
{\xe \v d_type\:mxWidget_i}
{\xe \v mxWidget_i\:d_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mxWidget_i::d_type}}
\par
{\bkmkstart AAAAAAANJH}
{\bkmkend AAAAAAANJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPO" }{}}{\fldrslt {\cs37\ul\cf2 40}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJNZ" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget.cpp}}}
.}\par
}
{\xe \v d_userData\:mxWidget_i}
{\xe \v mxWidget_i\:d_userData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* mxWidget_i::d_userData}}
\par
{\bkmkstart AAAAAAANJF}
{\bkmkend AAAAAAANJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPL" }{}}{\fldrslt {\cs37\ul\cf2 37}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJNZ" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget.cpp}}}
.}\par
}
{\xe \v d_widget\:mxWidget_i}
{\xe \v mxWidget_i\:d_widget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* mxWidget_i::d_widget}}
\par
{\bkmkstart AAAAAAANJE}
{\bkmkend AAAAAAANJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPK" }{}}{\fldrslt {\cs37\ul\cf2 36}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJNZ" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget.cpp}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxWidget.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxWindow_i Class Reference\par \pard\plain 
{\tc\tcl2 \v mxWindow_i}
{\xe \v mxWindow_i}
{\bkmkstart AAAAAAAKBC}
{\bkmkend AAAAAAAKBC}
\par
{
Inherits QMainWindow.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJI" }{}}{\fldrslt {\cs37\ul\cf2 idleEvent}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJJ" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i}}}
 (QWidget *parent, mxWindow *window)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJK" }{}}{\fldrslt {\cs37\ul\cf2 setTimerId}}}
 (int timerId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJL" }{}}{\fldrslt {\cs37\ul\cf2 getTimerId}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJM" }{}}{\fldrslt {\cs37\ul\cf2 resizeEvent}}}
 (QResizeEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJN" }{}}{\fldrslt {\cs37\ul\cf2 mousePressEvent}}}
 (QMouseEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJO" }{}}{\fldrslt {\cs37\ul\cf2 mouseMoveEvent}}}
 (QMouseEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJP" }{}}{\fldrslt {\cs37\ul\cf2 mouseReleaseEvent}}}
 (QMouseEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJQ" }{}}{\fldrslt {\cs37\ul\cf2 keyPressEvent}}}
 (QKeyEvent *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJR" }{}}{\fldrslt {\cs37\ul\cf2 timerEvent}}}
 (QTimerEvent *e)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKFA" }{}}{\fldrslt {\cs37\ul\cf2 23}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v mxWindow_i\:mxWindow_i}
{\xe \v mxWindow_i\:mxWindow_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxWindow_i::mxWindow_i (QWidget *  {\i parent}, mxWindow *  {\i window}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANJJ}
{\bkmkend AAAAAAANJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKFI" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031                                                        : QMainWindow ((QMainWindow *)parent)\par
00032         \{\par
00033                 d_window = window;\par
00034                 d_dragging = {\cf17 false};\par
00035                 d_button = 0;\par
00036                 d_timerId = 0;\par
00037                 {\cf20 //setMouseGrabEnabled(true);}\par
00038                 setMouseTracking ({\cf17 true});\par
00039                 installEventFilter ({\cf17 this});\par
00040         \}\par
}
}
{\xe \v ~mxWindow_i\:mxWindow_i}
{\xe \v mxWindow_i\:~mxWindow_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxWindow_i::~mxWindow_i (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANJS}
{\bkmkend AAAAAAANJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKFT" }{}}{\fldrslt {\cs37\ul\cf2 42}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00043         \{\par
00044         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getTimerId\:mxWindow_i}
{\xe \v mxWindow_i\:getTimerId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mxWindow_i::getTimerId (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANJL}
{\bkmkend AAAAAAANJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKGC" }{}}{\fldrslt {\cs37\ul\cf2 51}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00052         \{\par
00053                 {\cf19 return} d_timerId;\par
00054         \}\par
}
}
{\xe \v idleEvent\:mxWindow_i}
{\xe \v mxWindow_i\:idleEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxWindow_i::idleEvent (){\f2 [inline]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAANJI}
{\bkmkend AAAAAAANJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKGH" }{}}{\fldrslt {\cs37\ul\cf2 56}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00057         \{\par
00058                 mxEvent event;\par
00059                 {\cf17 event}.event = mxEvent::Idle;\par
00060                 d_window->handleEvent (&event);\par
00061         \}\par
}
}
{\xe \v keyPressEvent\:mxWindow_i}
{\xe \v mxWindow_i\:keyPressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxWindow_i::keyPressEvent (QKeyEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJQ}
{\bkmkend AAAAAAANJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKKE" }{}}{\fldrslt {\cs37\ul\cf2 157}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00158         \{\par
00159                 QMainWindow::keyPressEvent (e);\par
00160 \par
00161                 mxEvent event;\par
00162 \par
00163                 {\cf17 event}.key = tolower (e->key ());\par
00164 \par
00165                 {\cf19 if} (e->modifiers () & Qt::ControlModifier)\par
00166                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
00167                 {\cf19 if} (e->modifiers () & Qt::ShiftModifier)\par
00168                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
00169 \par
00170                 {\cf17 event}.event = mxEvent::KeyDown;\par
00171                 d_window->handleEvent (&event);\par
00172         \}\par
}
}
{\xe \v mouseMoveEvent\:mxWindow_i}
{\xe \v mxWindow_i\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxWindow_i::mouseMoveEvent (QMouseEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJO}
{\bkmkend AAAAAAANJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKHY" }{}}{\fldrslt {\cs37\ul\cf2 99}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00100         \{\par
00101                 QMainWindow::mouseMoveEvent (e);\par
00102 \par
00103                 d_button = 0;\par
00104                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
00105                         d_button |= mxEvent::MouseLeftButton;\par
00106                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
00107                         d_button |= mxEvent::MouseRightButton;\par
00108                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
00109                         d_button |= mxEvent::MouseMiddleButton;\par
00110                 \par
00111                 mxEvent event;\par
00112                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
00113                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
00114                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
00115                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
00116 \par
00117                 {\cf17 event}.buttons = d_button;\par
00118                 {\cf17 event}.x = e->x ();\par
00119                 {\cf17 event}.y = e->y ();\par
00120                 \par
00121                 {\cf19 if} (d_dragging)\par
00122                         {\cf17 event}.event = mxEvent::MouseDrag;\par
00123                 {\cf19 else}\par
00124                         {\cf17 event}.event = mxEvent::MouseMove;\par
00125                         \par
00126                 d_window->handleEvent (&event);\par
00127         \}\par
}
}
{\xe \v mousePressEvent\:mxWindow_i}
{\xe \v mxWindow_i\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxWindow_i::mousePressEvent (QMouseEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJN}
{\bkmkend AAAAAAANJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKGZ" }{}}{\fldrslt {\cs37\ul\cf2 74}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00075         \{\par
00076                 QMainWindow::mousePressEvent (e);\par
00077                 d_dragging = {\cf17 true};\par
00078 \par
00079                 d_button = 0;\par
00080                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
00081                         d_button |= mxEvent::MouseLeftButton;\par
00082                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
00083                         d_button |= mxEvent::MouseRightButton;\par
00084                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
00085                         d_button |= mxEvent::MouseMiddleButton;\par
00086                 \par
00087                 mxEvent event;\par
00088                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
00089                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
00090                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
00091                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
00092                 {\cf17 event}.event = mxEvent::MouseDown;\par
00093                 {\cf17 event}.buttons = d_button;\par
00094                 {\cf17 event}.x = e->x ();\par
00095                 {\cf17 event}.y = e->y ();\par
00096                 d_window->handleEvent (&event);\par
00097         \}\par
}
}
{\xe \v mouseReleaseEvent\:mxWindow_i}
{\xe \v mxWindow_i\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxWindow_i::mouseReleaseEvent (QMouseEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJP}
{\bkmkend AAAAAAANJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKJC" }{}}{\fldrslt {\cs37\ul\cf2 129}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00130         \{\par
00131                 QMainWindow::mouseReleaseEvent (e);\par
00132                 d_dragging = {\cf17 false};\par
00133                 d_button = 0;\par
00134                 \par
00135                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
00136                         d_button |= mxEvent::MouseLeftButton;\par
00137                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
00138                         d_button |= mxEvent::MouseRightButton;\par
00139                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
00140                         d_button |= mxEvent::MouseMiddleButton;\par
00141                 \par
00142                 mxEvent event;\par
00143                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
00144                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
00145                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
00146                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
00147 \par
00148                 {\cf17 event}.event = mxEvent::MouseUp;\par
00149                 {\cf17 event}.buttons = d_button;\par
00150                 {\cf17 event}.x = e->x ();\par
00151                 {\cf17 event}.y = e->y ();\par
00152                 \par
00153                 d_window->handleEvent (&event);\par
00154                 d_button = 0;\par
00155         \}\par
}
}
{\xe \v resizeEvent\:mxWindow_i}
{\xe \v mxWindow_i\:resizeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxWindow_i::resizeEvent (QResizeEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJM}
{\bkmkend AAAAAAANJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKGP" }{}}{\fldrslt {\cs37\ul\cf2 64}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00065         \{\par
00066                 QMainWindow::resizeEvent (e);\par
00067                 mxEvent event;\par
00068                 {\cf17 event}.event = mxEvent::Size;\par
00069                 {\cf17 event}.width = e->size ().width ();\par
00070                 {\cf17 event}.height = e->size ().height ();\par
00071                 d_window->handleEvent (&event);\par
00072         \}\par
}
}
{\xe \v setTimerId\:mxWindow_i}
{\xe \v mxWindow_i\:setTimerId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mxWindow_i::setTimerId (int  {\i timerId}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANJK}
{\bkmkend AAAAAAANJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKFX" }{}}{\fldrslt {\cs37\ul\cf2 46}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00047         \{\par
00048                 d_timerId = timerId;\par
00049         \}\par
}
}
{\xe \v timerEvent\:mxWindow_i}
{\xe \v mxWindow_i\:timerEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void mxWindow_i::timerEvent (QTimerEvent *  {\i e}){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJR}
{\bkmkend AAAAAAANJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKKV" }{}}{\fldrslt {\cs37\ul\cf2 174}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKED" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00175         \{\par
00176                 mxEvent event;\par
00177                 {\cf17 event}.event = mxEvent::Timer;\par
00178                 d_window->handleEvent (&event);\par
00179         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxWindow_i.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
packfile_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v packfile_t}
{\xe \v packfile_t}
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJT" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
 [56]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJU" }{}}{\fldrslt {\cs37\ul\cf2 filepos}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJV" }{}}{\fldrslt {\cs37\ul\cf2 filelen}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACMZ" }{}}{\fldrslt {\cs37\ul\cf2 133}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v filelen\:packfile_t}
{\xe \v packfile_t\:filelen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int packfile_t::filelen}}
\par
{\bkmkstart AAAAAAANJV}
{\bkmkend AAAAAAANJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNC" }{}}{\fldrslt {\cs37\ul\cf2 136}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
.}\par
}
{\xe \v filepos\:packfile_t}
{\xe \v packfile_t\:filepos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int packfile_t::filepos}}
\par
{\bkmkstart AAAAAAANJU}
{\bkmkend AAAAAAANJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNC" }{}}{\fldrslt {\cs37\ul\cf2 136}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
.}\par
}
{\xe \v name\:packfile_t}
{\xe \v packfile_t\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char packfile_t::name[56]}}
\par
{\bkmkstart AAAAAAANJT}
{\bkmkend AAAAAAANJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNB" }{}}{\fldrslt {\cs37\ul\cf2 135}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cmdlib.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
packheader_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v packheader_t}
{\xe \v packheader_t}
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJW" }{}}{\fldrslt {\cs37\ul\cf2 id}}}
 [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJX" }{}}{\fldrslt {\cs37\ul\cf2 dirofs}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJY" }{}}{\fldrslt {\cs37\ul\cf2 dirlen}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNF" }{}}{\fldrslt {\cs37\ul\cf2 139}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dirlen\:packheader_t}
{\xe \v packheader_t\:dirlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int packheader_t::dirlen}}
\par
{\bkmkstart AAAAAAANJY}
{\bkmkend AAAAAAANJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNJ" }{}}{\fldrslt {\cs37\ul\cf2 143}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
.}\par
}
{\xe \v dirofs\:packheader_t}
{\xe \v packheader_t\:dirofs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int packheader_t::dirofs}}
\par
{\bkmkstart AAAAAAANJX}
{\bkmkend AAAAAAANJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNI" }{}}{\fldrslt {\cs37\ul\cf2 142}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
.}\par
}
{\xe \v id\:packheader_t}
{\xe \v packheader_t\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char packheader_t::id[4]}}
\par
{\bkmkstart AAAAAAANJW}
{\bkmkend AAAAAAANJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACNH" }{}}{\fldrslt {\cs37\ul\cf2 141}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 cmdlib.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cmdlib.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RCWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v RCWindow}
{\xe \v RCWindow}
{\bkmkstart AAAAAAADZW}
{\bkmkend AAAAAAADZW}
\par
{
Inherits mxWindow.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANJZ" }{}}{\fldrslt {\cs37\ul\cf2 handleEvent}}}
 (mxEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKA" }{}}{\fldrslt {\cs37\ul\cf2 redraw}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxMenuBar * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKB" }{}}{\fldrslt {\cs37\ul\cf2 getMenuBar}}}
 () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKC" }{}}{\fldrslt {\cs37\ul\cf2 getGlWindow}}}
 () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKTY" }{}}{\fldrslt {\cs37\ul\cf2 48}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKSC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RCWindow\:RCWindow}
{\xe \v RCWindow\:RCWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RCWindow::RCWindow ()}}
\par
{\bkmkstart AAAAAAANKD}
{\bkmkend AAAAAAANKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKMX" }{}}{\fldrslt {\cs37\ul\cf2 47}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKLC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00047                      : mxWindow( 0, 0, 0, 0, 0, {\cf22 "Receiver Window"}, mxWindow::Normal )\par
00048 \{\par
00049         {\cf20 // create menu stuff}\par
00050         mb = {\cf17 new} mxMenuBar ({\cf17 this});\par
00051         {\cf20 /*}\par
00052 {\cf20         mxMenu *menuFile = new mxMenu ();}\par
00053 {\cf20         mxMenu *menuAction = new mxMenu ();}\par
00054 {\cf20 //      mxMenu *menuTool = new mxMenu ();}\par
00055 {\cf20         mxMenu *menuHelp = new mxMenu ();}\par
00056 {\cf20 }\par
00057 {\cf20         mb->addMenu ("File", menuFile);}\par
00058 {\cf20         mb->addMenu ("Action", menuAction);}\par
00059 {\cf20 //      mb->addMenu ("Tools", menuTool);}\par
00060 {\cf20         mb->addMenu ("Help", menuHelp);}\par
00061 {\cf20 }\par
00062 {\cf20 //      menuFile->addSeparator ();}\par
00063 {\cf20         menuFile->add ("Exit", IDC_FILE_EXIT);}\par
00064 {\cf20 }\par
00065 {\cf20 //      menuAction->add ("Connect...", IDC_ACTION_CONNECT);}\par
00066 {\cf20 //      menuAction->add ("Disconnect...", IDC_ACTION_DISCONNECT);}\par
00067 {\cf20         menuAction->add ("Display Information", IDC_ACTION_INFO);}\par
00068 {\cf20         menuAction->addSeparator ();}\par
00069 {\cf20         menuAction->add ("Undo", IDC_ACTION_UNDO);}\par
00070 {\cf20 //      menuAction->add ("Redo", IDC_ACTION_REDO);}\par
00071 {\cf20         menuAction->addSeparator ();}\par
00072 {\cf20         menuAction->add ("Clear Sceen", IDC_ACTION_CLS);}\par
00073 {\cf20 //      menuAction->add ("Refresh", IDC_ACTION_REFRESH);}\par
00074 {\cf20 }\par
00075 {\cf20         menuHelp->add ("About...", IDC_HELP_ABOUT);}\par
00076 {\cf20     */}\par
00077         {\cf20 // create the OpenGL window}\par
00078         d_GlWindow = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 ({\cf17 this}, 0, 0, 0, 0, {\cf22 ""}, mxWindow::Normal);\par
00079 {\cf21 #ifdef WIN32}\par
00080         SetWindowLong ((HWND) d_GlWindow->getHandle (), GWL_EXSTYLE, WS_EX_CLIENTEDGE);\par
00081 {\cf21 #endif}\par
00082 \par
00083         g_GlWindow = d_GlWindow;\par
00084 \par
00085 {\cf20 //      line_t emptyline = \{0,0,0,0\};}\par
00086 {\cf20 //      cmd_lines.assign(32, emptyline);}\par
00087 \par
00088         setBounds (20, 20, 640, 540);\par
00089         setVisible ({\cf17 true});\par
00090         g_GlWindow->setEnabled({\cf17 false});\par
00091 \}\par
}
}
{\xe \v ~RCWindow\:RCWindow}
{\xe \v RCWindow\:~RCWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RCWindow::~RCWindow ()}}
\par
{\bkmkstart AAAAAAANKE}
{\bkmkend AAAAAAANKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKOT" }{}}{\fldrslt {\cs37\ul\cf2 95}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKLC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00096 \{\par
00097         {\cf20 // grab some params in case that hasn't updates}\par
00098 \par
00099 {\cf21 #ifdef WIN32}\par
00100         DeleteFile ({\cf22 "midump.txt"});\par
00101 {\cf21 #endif}\par
00102 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getGlWindow\:RCWindow}
{\xe \v RCWindow\:getGlWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 * RCWindow::getGlWindow () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANKC}
{\bkmkend AAAAAAANKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKUM" }{}}{\fldrslt {\cs37\ul\cf2 62}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKSC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00062 \{ {\cf19 return} d_GlWindow; \}\par
}
}
{\xe \v getMenuBar\:RCWindow}
{\xe \v RCWindow\:getMenuBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxMenuBar * RCWindow::getMenuBar () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANKB}
{\bkmkend AAAAAAANKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKUL" }{}}{\fldrslt {\cs37\ul\cf2 61}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKSC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00061 \{ {\cf19 return} mb; \}\par
}
}
{\xe \v handleEvent\:RCWindow}
{\xe \v RCWindow\:handleEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RCWindow::handleEvent (mxEvent *  {\i event}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANJZ}
{\bkmkend AAAAAAANJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKPI" }{}}{\fldrslt {\cs37\ul\cf2 110}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKLC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00111 \{\par
00112         {\cf19 switch} (event->event)\par
00113         \{\par
00114 \par
00115         {\cf19 case} mxEvent::Action:\par
00116         \{\par
00117                 {\cf19 switch} (event->action)\par
00118                 \{\par
00119                 {\cf19 case} IDC_FILE_EXIT:\par
00120                 \{\par
00121                         redraw ();\par
00122                         mx::quit ();\par
00123                 \}\par
00124                 {\cf19 break};\par
00125 \par
00126                 {\cf19 case} IDC_ACTION_CLS:\par
00127             getGlWindow()->LineClear();\par
00128             {\cf19 break};\par
00129 \par
00130         {\cf19 case} IDC_ACTION_UNDO:\par
00131             getGlWindow()->LineUndo();\par
00132             {\cf19 break};\par
00133 \par
00134                 {\cf19 case} IDC_HELP_ABOUT:\par
00135                         mxMessageBox ({\cf17 this},\par
00136                                 {\cf22 "Painter P20\\n"}\par
00137                                 {\cf22 "Build:\\t"} __DATE__ {\cf22 ".\\n"}\par
00138                                 {\cf22 "Email:\\tjw26u22@soton.ac.uk\\n"}, {\cf22 "Painter"},\par
00139                                 MX_MB_OK | MX_MB_INFORMATION );\par
00140                         {\cf19 break};\par
00141 \par
00142                 \} {\cf20 //switch (event->action)}\par
00143 \par
00144         \} {\cf20 // mxEvent::Action}\par
00145         {\cf19 break};\par
00146 \par
00147         {\cf19 case} mxEvent::Size:\par
00148         \{\par
00149                 {\cf18 int} w = {\cf17 event}->width;\par
00150                 {\cf18 int} h = {\cf17 event}->height;\par
00151                 {\cf18 int} y = mb->getHeight ();\par
00152 {\cf21 #ifdef WIN32}\par
00153 {\cf21 #define HEIGHT 120}\par
00154 {\cf21 #else}\par
00155 {\cf21 #define HEIGHT 140}\par
00156                 h -= 40;\par
00157 {\cf21 #endif}\par
00158 \par
00159 {\cf20 //              d_GlWindow->setBounds (0, y, w, h - HEIGHT);}\par
00160                 d_GlWindow->setBounds (0, y, w, h);\par
00161 {\cf20 //              d_cpl->setBounds (0, y + h - HEIGHT, w, HEIGHT);}\par
00162         \}\par
00163         {\cf19 break};\par
00164 \par
00165         {\cf19 break};\par
00166         \} {\cf20 // event->event}\par
00167 \par
00168         {\cf19 return} 1;\par
00169 \}\par
}
}
{\xe \v redraw\:RCWindow}
{\xe \v RCWindow\:redraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RCWindow::redraw ()}}
\par
{\bkmkstart AAAAAAANKA}
{\bkmkend AAAAAAANKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKRU" }{}}{\fldrslt {\cs37\ul\cf2 174}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKLC" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00175 \{\par
00176         mxEvent event;\par
00177         {\cf17 event}.event = mxEvent::Size;\par
00178         {\cf17 event}.width = w2 ();\par
00179         {\cf17 event}.height = h2 ();\par
00180         handleEvent (&event);\par
00181 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RCWindow.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RCWindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ring_buffer Struct Reference\par \pard\plain 
{\tc\tcl2 \v ring_buffer}
{\xe \v ring_buffer}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKF" }{}}{\fldrslt {\cs37\ul\cf2 size}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKG" }{}}{\fldrslt {\cs37\ul\cf2 get_index}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKH" }{}}{\fldrslt {\cs37\ul\cf2 put_index}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ElemType * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKI" }{}}{\fldrslt {\cs37\ul\cf2 address}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 28}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 buffer.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v address\:ring_buffer}
{\xe \v ring_buffer\:address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ElemType* ring_buffer::address}}
\par
{\bkmkstart AAAAAAANKI}
{\bkmkend AAAAAAANKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 33}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 buffer.h}}}
.}\par
}
{\xe \v get_index\:ring_buffer}
{\xe \v ring_buffer\:get_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ring_buffer::get_index}}
\par
{\bkmkstart AAAAAAANKG}
{\bkmkend AAAAAAANKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 31}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 buffer.h}}}
.}\par
}
{\xe \v put_index\:ring_buffer}
{\xe \v ring_buffer\:put_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ring_buffer::put_index}}
\par
{\bkmkstart AAAAAAANKH}
{\bkmkend AAAAAAANKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJL" }{}}{\fldrslt {\cs37\ul\cf2 32}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 buffer.h}}}
.}\par
}
{\xe \v size\:ring_buffer}
{\xe \v ring_buffer\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ring_buffer::size}}
\par
{\bkmkstart AAAAAAANKF}
{\bkmkend AAAAAAANKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 30}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 buffer.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
buffer.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v SDWindow}
{\xe \v SDWindow}
{\bkmkstart AAAAAAADZQ}
{\bkmkend AAAAAAADZQ}
\par
{
Inherits mxWindow.}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKJ" }{}}{\fldrslt {\cs37\ul\cf2 handleEvent}}}
 (mxEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKK" }{}}{\fldrslt {\cs37\ul\cf2 redraw}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mxMenuBar * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKL" }{}}{\fldrslt {\cs37\ul\cf2 getMenuBar}}}
 () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAANKM" }{}}{\fldrslt {\cs37\ul\cf2 getGlWindow}}}
 () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALLY" }{}}{\fldrslt {\cs37\ul\cf2 48}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALKC" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.h}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SDWindow\:SDWindow}
{\xe \v SDWindow\:SDWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDWindow::SDWindow ()}}
\par
{\bkmkstart AAAAAAANKN}
{\bkmkend AAAAAAANKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALEZ" }{}}{\fldrslt {\cs37\ul\cf2 47}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALDE" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00047                      : mxWindow( 0, 0, 0, 0, 0, {\cf22 "Sender Window"}, mxWindow::Normal )\par
00048 \{\par
00049         {\cf20 // create menu stuff}\par
00050         mb = {\cf17 new} mxMenuBar ({\cf17 this});\par
00051         mxMenu *menuFile = {\cf17 new} mxMenu ();\par
00052         mxMenu *menuAction = {\cf17 new} mxMenu ();\par
00053 {\cf20 //      mxMenu *menuTool = new mxMenu ();}\par
00054         mxMenu *menuHelp = {\cf17 new} mxMenu ();\par
00055 \par
00056         mb->addMenu ({\cf22 "File"}, menuFile);\par
00057         mb->addMenu ({\cf22 "Action"}, menuAction);\par
00058 {\cf20 //      mb->addMenu ("Tools", menuTool);}\par
00059         mb->addMenu ({\cf22 "Help"}, menuHelp);\par
00060 \par
00061 {\cf20 //      menuFile->addSeparator ();}\par
00062         menuFile->add ({\cf22 "Exit"}, IDC_FILE_EXIT);\par
00063 \par
00064 {\cf20 //      menuAction->add ("Connect...", IDC_ACTION_CONNECT);}\par
00065 {\cf20 //      menuAction->add ("Disconnect...", IDC_ACTION_DISCONNECT);}\par
00066         menuAction->add ({\cf22 "Display Information"}, IDC_ACTION_INFO);\par
00067         menuAction->addSeparator ();\par
00068         menuAction->add ({\cf22 "Undo"}, IDC_ACTION_UNDO);\par
00069 {\cf20 //      menuAction->add ("Redo", IDC_ACTION_REDO);}\par
00070         menuAction->addSeparator ();\par
00071         menuAction->add ({\cf22 "Clear Sceen"}, IDC_ACTION_CLS);\par
00072 {\cf20 //      menuAction->add ("Refresh", IDC_ACTION_REFRESH);}\par
00073 \par
00074         menuHelp->add ({\cf22 "About..."}, IDC_HELP_ABOUT);\par
00075 \par
00076         {\cf20 // create the OpenGL window}\par
00077         d_GlWindow = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 ({\cf17 this}, 0, 0, 0, 0, {\cf22 ""}, mxWindow::Normal);\par
00078 {\cf21 #ifdef WIN32}\par
00079         SetWindowLong ((HWND) d_GlWindow->getHandle (), GWL_EXSTYLE, WS_EX_CLIENTEDGE);\par
00080 {\cf21 #endif}\par
00081 \par
00082         g_GlWindow = d_GlWindow;\par
00083 \par
00084 {\cf20 //      line_t emptyline = \{0,0,0,0\};}\par
00085 {\cf20 //      cmd_lines.assign(32, emptyline);}\par
00086 \par
00087         setBounds (20, 20, 640, 540);\par
00088         setVisible ({\cf17 true});\par
00089 \}\par
}
}
{\xe \v ~SDWindow\:SDWindow}
{\xe \v SDWindow\:~SDWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDWindow::~SDWindow ()}}
\par
{\bkmkstart AAAAAAANKO}
{\bkmkend AAAAAAANKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALGT" }{}}{\fldrslt {\cs37\ul\cf2 93}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALDE" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00094 \{\par
00095         {\cf20 // grab some params in case that hasn't updates}\par
00096 \par
00097 {\cf21 #ifdef WIN32}\par
00098         DeleteFile ({\cf22 "midump.txt"});\par
00099 {\cf21 #endif}\par
00100 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getGlWindow\:SDWindow}
{\xe \v SDWindow\:getGlWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 * SDWindow::getGlWindow () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANKM}
{\bkmkend AAAAAAANKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALMM" }{}}{\fldrslt {\cs37\ul\cf2 62}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALKC" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00062 \{ {\cf19 return} d_GlWindow; \}\par
}
}
{\xe \v getMenuBar\:SDWindow}
{\xe \v SDWindow\:getMenuBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mxMenuBar * SDWindow::getMenuBar () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAANKL}
{\bkmkend AAAAAAANKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALML" }{}}{\fldrslt {\cs37\ul\cf2 61}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALKC" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.h}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00061 \{ {\cf19 return} mb; \}\par
}
}
{\xe \v handleEvent\:SDWindow}
{\xe \v SDWindow\:handleEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDWindow::handleEvent (mxEvent *  {\i event}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAANKJ}
{\bkmkend AAAAAAANKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALHI" }{}}{\fldrslt {\cs37\ul\cf2 108}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALDE" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00109 \{\par
00110         {\cf19 switch} (event->event)\par
00111         \{\par
00112 \par
00113         {\cf19 case} mxEvent::Action:\par
00114         \{\par
00115                 {\cf19 switch} (event->action)\par
00116                 \{\par
00117                 {\cf19 case} IDC_FILE_EXIT:\par
00118                 \{\par
00119                         redraw ();\par
00120                         mx::quit ();\par
00121                 \}\par
00122                 {\cf19 break};\par
00123 \par
00124                 {\cf19 case} IDC_ACTION_CLS:\par
00125             getGlWindow()->LineClear();\par
00126             {\cf19 break};\par
00127 \par
00128         {\cf19 case} IDC_ACTION_UNDO:\par
00129             getGlWindow()->LineUndo();\par
00130             {\cf19 break};\par
00131 \par
00132                 {\cf19 case} IDC_HELP_ABOUT:\par
00133                         mxMessageBox ({\cf17 this},\par
00134                                 {\cf22 "Painter P20\\n"}\par
00135                                 {\cf22 "Build:\\t"} __DATE__ {\cf22 ".\\n"}\par
00136                                 {\cf22 "Email:\\tjw26u22@soton.ac.uk\\n"}, {\cf22 "Painter"},\par
00137                                 MX_MB_OK | MX_MB_INFORMATION );\par
00138                         {\cf19 break};\par
00139 \par
00140                 \} {\cf20 //switch (event->action)}\par
00141 \par
00142         \} {\cf20 // mxEvent::Action}\par
00143         {\cf19 break};\par
00144 \par
00145         {\cf19 case} mxEvent::Size:\par
00146         \{\par
00147                 {\cf18 int} w = {\cf17 event}->width;\par
00148                 {\cf18 int} h = {\cf17 event}->height;\par
00149                 {\cf18 int} y = mb->getHeight ();\par
00150 {\cf21 #ifdef WIN32}\par
00151 {\cf21 #define HEIGHT 120}\par
00152 {\cf21 #else}\par
00153 {\cf21 #define HEIGHT 140}\par
00154                 h -= 40;\par
00155 {\cf21 #endif}\par
00156 \par
00157 {\cf20 //              d_GlWindow->setBounds (0, y, w, h - HEIGHT);}\par
00158                 d_GlWindow->setBounds (0, y, w, h);\par
00159 {\cf20 //              d_cpl->setBounds (0, y + h - HEIGHT, w, HEIGHT);}\par
00160         \}\par
00161         {\cf19 break};\par
00162 \par
00163         {\cf19 break};\par
00164         \} {\cf20 // event->event}\par
00165 \par
00166         {\cf19 return} 1;\par
00167 \}\par
}
}
{\xe \v redraw\:SDWindow}
{\xe \v SDWindow\:redraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SDWindow::redraw ()}}
\par
{\bkmkstart AAAAAAANKK}
{\bkmkend AAAAAAANKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALJU" }{}}{\fldrslt {\cs37\ul\cf2 172}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALDE" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow.cpp}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00173 \{\par
00174         mxEvent event;\par
00175         {\cf17 event}.event = mxEvent::Size;\par
00176         {\cf17 event}.width = w2 ();\par
00177         {\cf17 event}.height = h2 ();\par
00178         handleEvent (&event);\par
00179 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDWindow.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDWindow.cpp\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
action.c\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAAB}{\bkmkend AAAAAAAAAB}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAAAC}{\bkmkend AAAAAAAAAC}
00002 {\cf20 }\par
{\bkmkstart AAAAAAAAAD}{\bkmkend AAAAAAAAAD}
00003 {\cf20 ===== sotfgpio.c ========================================================}\par
{\bkmkstart AAAAAAAAAE}{\bkmkend AAAAAAAAAE}
00004 {\cf20 }\par
{\bkmkstart AAAAAAAAAF}{\bkmkend AAAAAAAAAF}
00005 {\cf20 */}\par
{\bkmkstart AAAAAAAAAG}{\bkmkend AAAAAAAAAG}
00006 \par
{\bkmkstart AAAAAAAAAH}{\bkmkend AAAAAAAAAH}
00007 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAAAAI}{\bkmkend AAAAAAAAAI}
00008 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAAAAJ}{\bkmkend AAAAAAAAAJ}
00009 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAAAAK}{\bkmkend AAAAAAAAAK}
00010 \par
{\bkmkstart AAAAAAAAAL}{\bkmkend AAAAAAAAAL}
00011 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAAAAM}{\bkmkend AAAAAAAAAM}
00012 {\cf21 #include "softgpio.h"}\par
{\bkmkstart AAAAAAAAAN}{\bkmkend AAAAAAAAAN}
00013 {\cf21 #else}\par
{\bkmkstart AAAAAAAAAO}{\bkmkend AAAAAAAAAO}
00014 {\cf21 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAAAAP}{\bkmkend AAAAAAAAAP}
00015 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAAQ}{\bkmkend AAAAAAAAAQ}
00016 \par
{\bkmkstart AAAAAAAAAR}{\bkmkend AAAAAAAAAR}
00017 {\cf21 #include "shared.h"}\par
{\bkmkstart AAAAAAAAAS}{\bkmkend AAAAAAAAAS}
00018 {\cf21 #include "server.h"}\par
{\bkmkstart AAAAAAAAAT}{\bkmkend AAAAAAAAAT}
00019 \par
{\bkmkstart AAAAAAAAAU}{\bkmkend AAAAAAAAAU}
00020 {\cf21 #include "action.h"}\par
{\bkmkstart AAAAAAAAAV}{\bkmkend AAAAAAAAAV}
00021 \par
{\bkmkstart AAAAAAAAAW}{\bkmkend AAAAAAAAAW}
00022 \par
{\bkmkstart AAAAAAAAAX}{\bkmkend AAAAAAAAAX}
00023 {\cf18 void} CMD_help()\par
{\bkmkstart AAAAAAAAAY}{\bkmkend AAAAAAAAAY}
00024 \{\par
{\bkmkstart AAAAAAAAAZ}{\bkmkend AAAAAAAAAZ}
00025     printf({\cf22 "------------------\\n"}\par
{\bkmkstart AAAAAAAABA}{\bkmkend AAAAAAAABA}
00026            {\cf22 "svsendmsg"} {\cf22 " <string>"}\par
{\bkmkstart AAAAAAAABB}{\bkmkend AAAAAAAABB}
00027            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABC}{\bkmkend AAAAAAAABC}
00028            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABD}{\bkmkend AAAAAAAABD}
00029            {\cf22 "sdecho"}\par
{\bkmkstart AAAAAAAABE}{\bkmkend AAAAAAAABE}
00030            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABF}{\bkmkend AAAAAAAABF}
00031            {\cf22 "sdputc"} {\cf22 " <char>"}\par
{\bkmkstart AAAAAAAABG}{\bkmkend AAAAAAAABG}
00032            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABH}{\bkmkend AAAAAAAABH}
00033            {\cf22 "sdflush"}\par
{\bkmkstart AAAAAAAABI}{\bkmkend AAAAAAAABI}
00034            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABJ}{\bkmkend AAAAAAAABJ}
00035            {\cf22 "rcecho"}\par
{\bkmkstart AAAAAAAABK}{\bkmkend AAAAAAAABK}
00036            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABL}{\bkmkend AAAAAAAABL}
00037            {\cf22 "rcgetc"}\par
{\bkmkstart AAAAAAAABM}{\bkmkend AAAAAAAABM}
00038            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABN}{\bkmkend AAAAAAAABN}
00039            {\cf22 "rcflush"}\par
{\bkmkstart AAAAAAAABO}{\bkmkend AAAAAAAABO}
00040            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABP}{\bkmkend AAAAAAAABP}
00041            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABQ}{\bkmkend AAAAAAAABQ}
00042            {\cf22 "help"}\par
{\bkmkstart AAAAAAAABR}{\bkmkend AAAAAAAABR}
00043            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABS}{\bkmkend AAAAAAAABS}
00044            {\cf22 "quit"}\par
{\bkmkstart AAAAAAAABT}{\bkmkend AAAAAAAABT}
00045            {\cf22 "\\n"}\par
{\bkmkstart AAAAAAAABU}{\bkmkend AAAAAAAABU}
00046            {\cf22 "------------------\\n"}\par
{\bkmkstart AAAAAAAABV}{\bkmkend AAAAAAAABV}
00047           );\par
{\bkmkstart AAAAAAAABW}{\bkmkend AAAAAAAABW}
00048 \}\par
{\bkmkstart AAAAAAAABX}{\bkmkend AAAAAAAABX}
00049 \par
{\bkmkstart AAAAAAAABY}{\bkmkend AAAAAAAABY}
00050 {\cf18 void} action_main()\par
{\bkmkstart AAAAAAAABZ}{\bkmkend AAAAAAAABZ}
00051 \{\par
{\bkmkstart AAAAAAAACA}{\bkmkend AAAAAAAACA}
00052     {\cf18 char} cmd[128];\par
{\bkmkstart AAAAAAAACB}{\bkmkend AAAAAAAACB}
00053     {\cf18 char} narg[128];\par
{\bkmkstart AAAAAAAACC}{\bkmkend AAAAAAAACC}
00054 \par
{\bkmkstart AAAAAAAACD}{\bkmkend AAAAAAAACD}
00055     {\cf19 for}(; !flag_sender_ready || !flag_receiver_ready;)\par
{\bkmkstart AAAAAAAACE}{\bkmkend AAAAAAAACE}
00056         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAACF}{\bkmkend AAAAAAAACF}
00057 \par
{\bkmkstart AAAAAAAACG}{\bkmkend AAAAAAAACG}
00058     printf({\cf22 "Enter 'help' for a list of commands\\n"});\par
{\bkmkstart AAAAAAAACH}{\bkmkend AAAAAAAACH}
00059     {\cf19 for}(;;)\par
{\bkmkstart AAAAAAAACI}{\bkmkend AAAAAAAACI}
00060 \par
{\bkmkstart AAAAAAAACJ}{\bkmkend AAAAAAAACJ}
00061     \{\par
{\bkmkstart AAAAAAAACK}{\bkmkend AAAAAAAACK}
00062         gets(cmd);\par
{\bkmkstart AAAAAAAACL}{\bkmkend AAAAAAAACL}
00063 \par
{\bkmkstart AAAAAAAACM}{\bkmkend AAAAAAAACM}
00064         strcpy(narg,cmd);\par
{\bkmkstart AAAAAAAACN}{\bkmkend AAAAAAAACN}
00065         narg[9]={\cf23 '\\0'};\par
{\bkmkstart AAAAAAAACO}{\bkmkend AAAAAAAACO}
00066 \par
{\bkmkstart AAAAAAAACP}{\bkmkend AAAAAAAACP}
00067         {\cf19 if}(!strcmp(narg,{\cf22 "svsendmsg"}))\par
{\bkmkstart AAAAAAAACQ}{\bkmkend AAAAAAAACQ}
00068             SV_insert_msg(&cmd[10]);\par
{\bkmkstart AAAAAAAACR}{\bkmkend AAAAAAAACR}
00069 \par
{\bkmkstart AAAAAAAACS}{\bkmkend AAAAAAAACS}
00070         {\cf19 if}(!strcmp(cmd,{\cf22 "sdecho"}))\par
{\bkmkstart AAAAAAAACT}{\bkmkend AAAAAAAACT}
00071             SD_print_buffer();\par
{\bkmkstart AAAAAAAACU}{\bkmkend AAAAAAAACU}
00072 \par
{\bkmkstart AAAAAAAACV}{\bkmkend AAAAAAAACV}
00073         strcpy(narg,cmd);\par
{\bkmkstart AAAAAAAACW}{\bkmkend AAAAAAAACW}
00074         narg[6]={\cf23 '\\0'};\par
{\bkmkstart AAAAAAAACX}{\bkmkend AAAAAAAACX}
00075 \par
{\bkmkstart AAAAAAAACY}{\bkmkend AAAAAAAACY}
00076         {\cf19 if}(!strcmp(narg,{\cf22 "sdputc"}))\par
{\bkmkstart AAAAAAAACZ}{\bkmkend AAAAAAAACZ}
00077             SD_buffer_put(cmd[7]);\par
{\bkmkstart AAAAAAAADA}{\bkmkend AAAAAAAADA}
00078 \par
{\bkmkstart AAAAAAAADB}{\bkmkend AAAAAAAADB}
00079         {\cf19 if}(!strcmp(cmd,{\cf22 "sdflush"}))\par
{\bkmkstart AAAAAAAADC}{\bkmkend AAAAAAAADC}
00080             SD_flush_buffer();\par
{\bkmkstart AAAAAAAADD}{\bkmkend AAAAAAAADD}
00081 \par
{\bkmkstart AAAAAAAADE}{\bkmkend AAAAAAAADE}
00082         {\cf20 /*if(!strcmp(cmd,"rcsync"))}\par
{\bkmkstart AAAAAAAADF}{\bkmkend AAAAAAAADF}
00083 {\cf20             RC_sync();*/}\par
{\bkmkstart AAAAAAAADG}{\bkmkend AAAAAAAADG}
00084 \par
{\bkmkstart AAAAAAAADH}{\bkmkend AAAAAAAADH}
00085         {\cf19 if}(!strcmp(cmd,{\cf22 "rcecho"}))\par
{\bkmkstart AAAAAAAADI}{\bkmkend AAAAAAAADI}
00086             RC_print_buffer();\par
{\bkmkstart AAAAAAAADJ}{\bkmkend AAAAAAAADJ}
00087 \par
{\bkmkstart AAAAAAAADK}{\bkmkend AAAAAAAADK}
00088         {\cf19 if}(!strcmp(cmd,{\cf22 "rcgetc"}))\par
{\bkmkstart AAAAAAAADL}{\bkmkend AAAAAAAADL}
00089             printf({\cf22 "%d\\n"}, RC_buffer_get());\par
{\bkmkstart AAAAAAAADM}{\bkmkend AAAAAAAADM}
00090 \par
{\bkmkstart AAAAAAAADN}{\bkmkend AAAAAAAADN}
00091         {\cf19 if}(!strcmp(cmd,{\cf22 "rcflush"}))\par
{\bkmkstart AAAAAAAADO}{\bkmkend AAAAAAAADO}
00092             RC_flush_buffer();\par
{\bkmkstart AAAAAAAADP}{\bkmkend AAAAAAAADP}
00093 \par
{\bkmkstart AAAAAAAADQ}{\bkmkend AAAAAAAADQ}
00094         {\cf19 if}(!strcmp(cmd,{\cf22 "help"}))\par
{\bkmkstart AAAAAAAADR}{\bkmkend AAAAAAAADR}
00095             CMD_help();\par
{\bkmkstart AAAAAAAADS}{\bkmkend AAAAAAAADS}
00096 \par
{\bkmkstart AAAAAAAADT}{\bkmkend AAAAAAAADT}
00097         {\cf19 if}(!strcmp(cmd,{\cf22 "quit"}))\par
{\bkmkstart AAAAAAAADU}{\bkmkend AAAAAAAADU}
00098             exit(0);\par
{\bkmkstart AAAAAAAADV}{\bkmkend AAAAAAAADV}
00099 \par
{\bkmkstart AAAAAAAADW}{\bkmkend AAAAAAAADW}
00100     \}\par
{\bkmkstart AAAAAAAADX}{\bkmkend AAAAAAAADX}
00101 \par
{\bkmkstart AAAAAAAADY}{\bkmkend AAAAAAAADY}
00102 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
action.h\par \pard\plain 
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAEA}{\bkmkend AAAAAAAAEA}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAAEB}{\bkmkend AAAAAAAAEB}
00002 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAAEC}{\bkmkend AAAAAAAAEC}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAAED}{\bkmkend AAAAAAAAED}
00004 {\cf20 // Purpose:}\par
{\bkmkstart AAAAAAAAEE}{\bkmkend AAAAAAAAEE}
00005 {\cf20 //}\par
{\bkmkstart AAAAAAAAEF}{\bkmkend AAAAAAAAEF}
00006 {\cf20 // $NoKeywords: $}\par
{\bkmkstart AAAAAAAAEG}{\bkmkend AAAAAAAAEG}
00007 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAAEH}{\bkmkend AAAAAAAAEH}
00008 {\cf20 */}\par
{\bkmkstart AAAAAAAAEI}{\bkmkend AAAAAAAAEI}
00009 \par
{\bkmkstart AAAAAAAAEJ}{\bkmkend AAAAAAAAEJ}
00010 \par
{\bkmkstart AAAAAAAAEK}{\bkmkend AAAAAAAAEK}
00011 {\cf21 #ifndef __ACTION__}\par
{\bkmkstart AAAAAAAAEL}{\bkmkend AAAAAAAAEL}
00012 {\cf21 #define __ACTION__}\par
{\bkmkstart AAAAAAAAEM}{\bkmkend AAAAAAAAEM}
00013 \par
{\bkmkstart AAAAAAAAEN}{\bkmkend AAAAAAAAEN}
00014 \par
{\bkmkstart AAAAAAAAEO}{\bkmkend AAAAAAAAEO}
00015 {\cf20 /*}\par
{\bkmkstart AAAAAAAAEP}{\bkmkend AAAAAAAAEP}
00016 {\cf20 // action.h}\par
{\bkmkstart AAAAAAAAEQ}{\bkmkend AAAAAAAAEQ}
00017 {\cf20 */}\par
{\bkmkstart AAAAAAAAER}{\bkmkend AAAAAAAAER}
00018 \par
{\bkmkstart AAAAAAAAES}{\bkmkend AAAAAAAAES}
00019 \par
{\bkmkstart AAAAAAAAET}{\bkmkend AAAAAAAAET}
00020 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAAEU}{\bkmkend AAAAAAAAEU}
00021 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAAAEV}{\bkmkend AAAAAAAAEV}
00022 \{\par
{\bkmkstart AAAAAAAAEW}{\bkmkend AAAAAAAAEW}
00023 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAEX}{\bkmkend AAAAAAAAEX}
00024 \par
{\bkmkstart AAAAAAAAEY}{\bkmkend AAAAAAAAEY}
00025 {\cf18 void} action_main();\par
{\bkmkstart AAAAAAAAEZ}{\bkmkend AAAAAAAAEZ}
00026 \par
{\bkmkstart AAAAAAAAFA}{\bkmkend AAAAAAAAFA}
00027 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAAFB}{\bkmkend AAAAAAAAFB}
00028 \}\par
{\bkmkstart AAAAAAAAFC}{\bkmkend AAAAAAAAFC}
00029 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAFD}{\bkmkend AAAAAAAAFD}
00030 \par
{\bkmkstart AAAAAAAAFE}{\bkmkend AAAAAAAAFE}
00031 \par
{\bkmkstart AAAAAAAAFF}{\bkmkend AAAAAAAAFF}
00032 {\cf21 #endif  }{\cf20 /*__ACTION__*/}{\cf21 }\par
{\bkmkstart AAAAAAAAFG}{\bkmkend AAAAAAAAFG}
00033 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
buffer.c\par \pard\plain 
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAFI}{\bkmkend AAAAAAAAFI}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAAFJ}{\bkmkend AAAAAAAAFJ}
00002 {\cf20 }\par
{\bkmkstart AAAAAAAAFK}{\bkmkend AAAAAAAAFK}
00003 {\cf20 ===== buffer.c ========================================================}\par
{\bkmkstart AAAAAAAAFL}{\bkmkend AAAAAAAAFL}
00004 {\cf20 }\par
{\bkmkstart AAAAAAAAFM}{\bkmkend AAAAAAAAFM}
00005 {\cf20 */}\par
{\bkmkstart AAAAAAAAFN}{\bkmkend AAAAAAAAFN}
00006 \par
{\bkmkstart AAAAAAAAFO}{\bkmkend AAAAAAAAFO}
00007 {\cf20 /* ring buffer */}\par
{\bkmkstart AAAAAAAAFP}{\bkmkend AAAAAAAAFP}
00008 \par
{\bkmkstart AAAAAAAAFQ}{\bkmkend AAAAAAAAFQ}
00009 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAAAFR}{\bkmkend AAAAAAAAFR}
00010 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAAAFS}{\bkmkend AAAAAAAAFS}
00011 \par
{\bkmkstart AAAAAAAAFT}{\bkmkend AAAAAAAAFT}
00012 {\cf21 #include "buffer.h"}\par
{\bkmkstart AAAAAAAAFU}{\bkmkend AAAAAAAAFU}
00013 \par
{\bkmkstart AAAAAAAAFV}{\bkmkend AAAAAAAAFV}
00014 \par
{\bkmkstart AAAAAAAAFW}{\bkmkend AAAAAAAAFW}
00015 \par
{\bkmkstart AAAAAAAAFX}{\bkmkend AAAAAAAAFX}
00016 {\cf18 void} buffer_init({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr, {\cf18 int} size)\par
{\bkmkstart AAAAAAAAFZ}{\bkmkend AAAAAAAAFZ}
00017 \{\par
{\bkmkstart AAAAAAAAGA}{\bkmkend AAAAAAAAGA}
00018     buffer_ptr->size = size;\par
{\bkmkstart AAAAAAAAGB}{\bkmkend AAAAAAAAGB}
00019     buffer_ptr->get_index = 0;\par
{\bkmkstart AAAAAAAAGC}{\bkmkend AAAAAAAAGC}
00020     buffer_ptr->put_index = 0;\par
{\bkmkstart AAAAAAAAGD}{\bkmkend AAAAAAAAGD}
00021     buffer_ptr->address = (ElemType *)calloc(buffer_ptr->size, {\cf17 sizeof}(ElemType));\par
{\bkmkstart AAAAAAAAGE}{\bkmkend AAAAAAAAGE}
00022 \}\par
{\bkmkstart AAAAAAAAGF}{\bkmkend AAAAAAAAGF}
00023 \par
{\bkmkstart AAAAAAAAGG}{\bkmkend AAAAAAAAGG}
00024 {\cf18 void} buffer_print({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr)\par
{\bkmkstart AAAAAAAAGH}{\bkmkend AAAAAAAAGH}
00025 \{\par
{\bkmkstart AAAAAAAAGI}{\bkmkend AAAAAAAAGI}
00026     printf({\cf22 "size = 0x%x, get_index = %d, put_index = %d\\n"}, buffer_ptr->size, buffer_ptr->get_index, buffer_ptr->put_index);\par
{\bkmkstart AAAAAAAAGJ}{\bkmkend AAAAAAAAGJ}
00027 \}\par
{\bkmkstart AAAAAAAAGK}{\bkmkend AAAAAAAAGK}
00028 \par
{\bkmkstart AAAAAAAAGL}{\bkmkend AAAAAAAAGL}
00029 {\cf18 int} buffer_full({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr)\par
{\bkmkstart AAAAAAAAGM}{\bkmkend AAAAAAAAGM}
00030 \{\par
{\bkmkstart AAAAAAAAGN}{\bkmkend AAAAAAAAGN}
00031     {\cf19 return} buffer_ptr->put_index == (buffer_ptr->get_index ^ buffer_ptr->size);\par
{\bkmkstart AAAAAAAAGO}{\bkmkend AAAAAAAAGO}
00032 \}\par
{\bkmkstart AAAAAAAAGP}{\bkmkend AAAAAAAAGP}
00033 \par
{\bkmkstart AAAAAAAAGQ}{\bkmkend AAAAAAAAGQ}
00034 {\cf18 int} buffer_empty({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr)\par
{\bkmkstart AAAAAAAAGR}{\bkmkend AAAAAAAAGR}
00035 \{\par
{\bkmkstart AAAAAAAAGS}{\bkmkend AAAAAAAAGS}
00036     {\cf19 return} buffer_ptr->put_index == buffer_ptr->get_index;\par
{\bkmkstart AAAAAAAAGT}{\bkmkend AAAAAAAAGT}
00037 \}\par
{\bkmkstart AAAAAAAAGU}{\bkmkend AAAAAAAAGU}
00038 \par
{\bkmkstart AAAAAAAAGV}{\bkmkend AAAAAAAAGV}
00039 {\cf18 int} _buffer_incr({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr, {\cf18 int} pos)\par
{\bkmkstart AAAAAAAAGW}{\bkmkend AAAAAAAAGW}
00040 \{\par
{\bkmkstart AAAAAAAAGX}{\bkmkend AAAAAAAAGX}
00041     {\cf19 return} (pos + 1) & (2 * buffer_ptr->size - 1);\par
{\bkmkstart AAAAAAAAGY}{\bkmkend AAAAAAAAGY}
00042 \}\par
{\bkmkstart AAAAAAAAGZ}{\bkmkend AAAAAAAAGZ}
00043 \par
{\bkmkstart AAAAAAAAHA}{\bkmkend AAAAAAAAHA}
00044 {\cf18 void} buffer_put({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr, ElemType *elem)\par
{\bkmkstart AAAAAAAAHB}{\bkmkend AAAAAAAAHB}
00045 \{\par
{\bkmkstart AAAAAAAAHC}{\bkmkend AAAAAAAAHC}
00046     buffer_ptr->address[buffer_ptr->put_index & (buffer_ptr->size - 1)] = *elem;\par
{\bkmkstart AAAAAAAAHD}{\bkmkend AAAAAAAAHD}
00047     {\cf19 if} (buffer_full(buffer_ptr))\par
{\bkmkstart AAAAAAAAHE}{\bkmkend AAAAAAAAHE}
00048         buffer_ptr->get_index = _buffer_incr(buffer_ptr, buffer_ptr->get_index);\par
{\bkmkstart AAAAAAAAHF}{\bkmkend AAAAAAAAHF}
00049     buffer_ptr->put_index = _buffer_incr(buffer_ptr, buffer_ptr->put_index);\par
{\bkmkstart AAAAAAAAHG}{\bkmkend AAAAAAAAHG}
00050 \}\par
{\bkmkstart AAAAAAAAHH}{\bkmkend AAAAAAAAHH}
00051 \par
{\bkmkstart AAAAAAAAHI}{\bkmkend AAAAAAAAHI}
00052 {\cf18 void} buffer_get({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr, ElemType *elem)\par
{\bkmkstart AAAAAAAAHJ}{\bkmkend AAAAAAAAHJ}
00053 \{\par
{\bkmkstart AAAAAAAAHK}{\bkmkend AAAAAAAAHK}
00054     *elem = buffer_ptr->address[buffer_ptr->get_index & (buffer_ptr->size - 1)];\par
{\bkmkstart AAAAAAAAHL}{\bkmkend AAAAAAAAHL}
00055     buffer_ptr->get_index = _buffer_incr(buffer_ptr, buffer_ptr->get_index);\par
{\bkmkstart AAAAAAAAHM}{\bkmkend AAAAAAAAHM}
00056 \}\par
{\bkmkstart AAAAAAAAHN}{\bkmkend AAAAAAAAHN}
00057 \par
{\bkmkstart AAAAAAAAHO}{\bkmkend AAAAAAAAHO}
00058 {\cf18 void} buffer_flush({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr)\par
{\bkmkstart AAAAAAAAHP}{\bkmkend AAAAAAAAHP}
00059 \{\par
{\bkmkstart AAAAAAAAHQ}{\bkmkend AAAAAAAAHQ}
00060     {\cf18 int} i=0;\par
{\bkmkstart AAAAAAAAHR}{\bkmkend AAAAAAAAHR}
00061     buffer_ptr->get_index = 0;\par
{\bkmkstart AAAAAAAAHS}{\bkmkend AAAAAAAAHS}
00062     buffer_ptr->put_index = 0;\par
{\bkmkstart AAAAAAAAHT}{\bkmkend AAAAAAAAHT}
00063     {\cf19 for}(i=0; i<buffer_ptr->size; i++)\par
{\bkmkstart AAAAAAAAHU}{\bkmkend AAAAAAAAHU}
00064         buffer_ptr->address[i] = 0;\par
{\bkmkstart AAAAAAAAHV}{\bkmkend AAAAAAAAHV}
00065 \}\par
{\bkmkstart AAAAAAAAHW}{\bkmkend AAAAAAAAHW}
00066 \par
{\bkmkstart AAAAAAAAHX}{\bkmkend AAAAAAAAHX}
00067 {\cf18 void} buffer_display({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr)\par
{\bkmkstart AAAAAAAAHY}{\bkmkend AAAAAAAAHY}
00068 \{\par
{\bkmkstart AAAAAAAAHZ}{\bkmkend AAAAAAAAHZ}
00069     {\cf18 int} i=0;\par
{\bkmkstart AAAAAAAAIA}{\bkmkend AAAAAAAAIA}
00070     printf({\cf22 "\\n"});\par
{\bkmkstart AAAAAAAAIB}{\bkmkend AAAAAAAAIB}
00071     {\cf19 for}(i=0; i<buffer_ptr->size; i++)\par
{\bkmkstart AAAAAAAAIC}{\bkmkend AAAAAAAAIC}
00072         printf({\cf22 "%d "},buffer_ptr->address[i]);\par
{\bkmkstart AAAAAAAAID}{\bkmkend AAAAAAAAID}
00073     printf({\cf22 "\\n"});\par
{\bkmkstart AAAAAAAAIE}{\bkmkend AAAAAAAAIE}
00074 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
buffer.h\par \pard\plain 
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAIG}{\bkmkend AAAAAAAAIG}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAAIH}{\bkmkend AAAAAAAAIH}
00002 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAAII}{\bkmkend AAAAAAAAII}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAAIJ}{\bkmkend AAAAAAAAIJ}
00004 {\cf20 // Purpose:}\par
{\bkmkstart AAAAAAAAIK}{\bkmkend AAAAAAAAIK}
00005 {\cf20 //}\par
{\bkmkstart AAAAAAAAIL}{\bkmkend AAAAAAAAIL}
00006 {\cf20 // $NoKeywords: $}\par
{\bkmkstart AAAAAAAAIM}{\bkmkend AAAAAAAAIM}
00007 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAAIN}{\bkmkend AAAAAAAAIN}
00008 {\cf20 */}\par
{\bkmkstart AAAAAAAAIO}{\bkmkend AAAAAAAAIO}
00009 \par
{\bkmkstart AAAAAAAAIP}{\bkmkend AAAAAAAAIP}
00010 \par
{\bkmkstart AAAAAAAAIQ}{\bkmkend AAAAAAAAIQ}
00011 {\cf21 #ifndef __BUFFER__}\par
{\bkmkstart AAAAAAAAIR}{\bkmkend AAAAAAAAIR}
00012 {\cf21 #define __BUFFER__}\par
{\bkmkstart AAAAAAAAIS}{\bkmkend AAAAAAAAIS}
00013 \par
{\bkmkstart AAAAAAAAIT}{\bkmkend AAAAAAAAIT}
00014 \par
{\bkmkstart AAAAAAAAIU}{\bkmkend AAAAAAAAIU}
00015 {\cf20 /*}\par
{\bkmkstart AAAAAAAAIV}{\bkmkend AAAAAAAAIV}
00016 {\cf20 // buffer.h}\par
{\bkmkstart AAAAAAAAIW}{\bkmkend AAAAAAAAIW}
00017 {\cf20 */}\par
{\bkmkstart AAAAAAAAIX}{\bkmkend AAAAAAAAIX}
00018 \par
{\bkmkstart AAAAAAAAIY}{\bkmkend AAAAAAAAIY}
00019 \par
{\bkmkstart AAAAAAAAIZ}{\bkmkend AAAAAAAAIZ}
00020 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAAJA}{\bkmkend AAAAAAAAJA}
00021 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAAAJB}{\bkmkend AAAAAAAAJB}
00022 \{\par
{\bkmkstart AAAAAAAAJC}{\bkmkend AAAAAAAAJC}
00023 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAJD}{\bkmkend AAAAAAAAJD}
00024 \par
{\bkmkstart AAAAAAAAJE}{\bkmkend AAAAAAAAJE}
00025 \par
{\bkmkstart AAAAAAAAJF}{\bkmkend AAAAAAAAJF}
00026 {\cf17 typedef} {\cf18 unsigned} {\cf18 char} ElemType;\par
{\bkmkstart AAAAAAAAJG}{\bkmkend AAAAAAAAJG}
00027 \par
{\bkmkstart AAAAAAAAJH}{\bkmkend AAAAAAAAJH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 00028}}}
 {\cf17 typedef} {\cf17 struct}\par
{\bkmkstart AAAAAAAAJI}{\bkmkend AAAAAAAAJI}
00029 \{\par
{\bkmkstart AAAAAAAAJJ}{\bkmkend AAAAAAAAJJ}
00030     {\cf18 int} size;\par
{\bkmkstart AAAAAAAAJK}{\bkmkend AAAAAAAAJK}
00031     {\cf18 int} get_index;\par
{\bkmkstart AAAAAAAAJL}{\bkmkend AAAAAAAAJL}
00032     {\cf18 int} put_index;\par
{\bkmkstart AAAAAAAAJM}{\bkmkend AAAAAAAAJM}
00033     ElemType *address;\par
{\bkmkstart AAAAAAAAJN}{\bkmkend AAAAAAAAJN}
00034 \} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
;\par
{\bkmkstart AAAAAAAAJO}{\bkmkend AAAAAAAAJO}
00035 \par
{\bkmkstart AAAAAAAAJP}{\bkmkend AAAAAAAAJP}
00036 \par
{\bkmkstart AAAAAAAAJQ}{\bkmkend AAAAAAAAJQ}
00037 {\cf18 void} buffer_init({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr, {\cf18 int} size);\par
{\bkmkstart AAAAAAAAJR}{\bkmkend AAAAAAAAJR}
00038 \par
{\bkmkstart AAAAAAAAJS}{\bkmkend AAAAAAAAJS}
00039 {\cf18 void} buffer_print({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr);\par
{\bkmkstart AAAAAAAAJT}{\bkmkend AAAAAAAAJT}
00040 {\cf18 int} buffer_full({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr);\par
{\bkmkstart AAAAAAAAJU}{\bkmkend AAAAAAAAJU}
00041 {\cf18 int} buffer_empty({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr);\par
{\bkmkstart AAAAAAAAJV}{\bkmkend AAAAAAAAJV}
00042 \par
{\bkmkstart AAAAAAAAJW}{\bkmkend AAAAAAAAJW}
00043 {\cf18 void} buffer_put({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr, ElemType *elem);\par
{\bkmkstart AAAAAAAAJX}{\bkmkend AAAAAAAAJX}
00044 {\cf18 void} buffer_get({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr, ElemType *elem);\par
{\bkmkstart AAAAAAAAJY}{\bkmkend AAAAAAAAJY}
00045 \par
{\bkmkstart AAAAAAAAJZ}{\bkmkend AAAAAAAAJZ}
00046 {\cf18 void} buffer_flush({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr);\par
{\bkmkstart AAAAAAAAKA}{\bkmkend AAAAAAAAKA}
00047 {\cf18 void} buffer_display({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 *buffer_ptr);\par
{\bkmkstart AAAAAAAAKB}{\bkmkend AAAAAAAAKB}
00048 \par
{\bkmkstart AAAAAAAAKC}{\bkmkend AAAAAAAAKC}
00049 \par
{\bkmkstart AAAAAAAAKD}{\bkmkend AAAAAAAAKD}
00050 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAAKE}{\bkmkend AAAAAAAAKE}
00051 \}\par
{\bkmkstart AAAAAAAAKF}{\bkmkend AAAAAAAAKF}
00052 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAKG}{\bkmkend AAAAAAAAKG}
00053 \par
{\bkmkstart AAAAAAAAKH}{\bkmkend AAAAAAAAKH}
00054 \par
{\bkmkstart AAAAAAAAKI}{\bkmkend AAAAAAAAKI}
00055 {\cf21 #endif  }{\cf20 /*__BUFFER__*/}{\cf21 }\par
{\bkmkstart AAAAAAAAKJ}{\bkmkend AAAAAAAAKJ}
00056 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
client.c\par \pard\plain 
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAKL}{\bkmkend AAAAAAAAKL}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAAKM}{\bkmkend AAAAAAAAKM}
00002 {\cf20 }\par
{\bkmkstart AAAAAAAAKN}{\bkmkend AAAAAAAAKN}
00003 {\cf20 ===== client.c ========================================================}\par
{\bkmkstart AAAAAAAAKO}{\bkmkend AAAAAAAAKO}
00004 {\cf20 }\par
{\bkmkstart AAAAAAAAKP}{\bkmkend AAAAAAAAKP}
00005 {\cf20 */}\par
{\bkmkstart AAAAAAAAKQ}{\bkmkend AAAAAAAAKQ}
00006 \par
{\bkmkstart AAAAAAAAKR}{\bkmkend AAAAAAAAKR}
00007 \par
{\bkmkstart AAAAAAAAKS}{\bkmkend AAAAAAAAKS}
00008 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAAAKT}{\bkmkend AAAAAAAAKT}
00009 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAAAKU}{\bkmkend AAAAAAAAKU}
00010 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAAAKV}{\bkmkend AAAAAAAAKV}
00011 \par
{\bkmkstart AAAAAAAAKW}{\bkmkend AAAAAAAAKW}
00012 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAAAKX}{\bkmkend AAAAAAAAKX}
00013 {\cf21 #include "softgpio.h"}\par
{\bkmkstart AAAAAAAAKY}{\bkmkend AAAAAAAAKY}
00014 {\cf21 #else}\par
{\bkmkstart AAAAAAAAKZ}{\bkmkend AAAAAAAAKZ}
00015 {\cf21 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAAALA}{\bkmkend AAAAAAAALA}
00016 {\cf21 #endif}\par
{\bkmkstart AAAAAAAALB}{\bkmkend AAAAAAAALB}
00017 \par
{\bkmkstart AAAAAAAALC}{\bkmkend AAAAAAAALC}
00018 {\cf21 #include "shared.h"}\par
{\bkmkstart AAAAAAAALD}{\bkmkend AAAAAAAALD}
00019 {\cf21 #include "server.h"}\par
{\bkmkstart AAAAAAAALE}{\bkmkend AAAAAAAALE}
00020 \par
{\bkmkstart AAAAAAAALF}{\bkmkend AAAAAAAALF}
00021 {\cf21 #include "client.h"}\par
{\bkmkstart AAAAAAAALG}{\bkmkend AAAAAAAALG}
00022 \par
{\bkmkstart AAAAAAAALH}{\bkmkend AAAAAAAALH}
00023 \par
{\bkmkstart AAAAAAAALI}{\bkmkend AAAAAAAALI}
00024 {\cf18 int} flag_client_ready;\par
{\bkmkstart AAAAAAAALJ}{\bkmkend AAAAAAAALJ}
00025 {\cf18 int} flag_client_isdumping;\par
{\bkmkstart AAAAAAAALK}{\bkmkend AAAAAAAALK}
00026 {\cf18 int} flag_client_get_ack;\par
{\bkmkstart AAAAAAAALL}{\bkmkend AAAAAAAALL}
00027 {\cf18 byte} client_crc16[3];\par
{\bkmkstart AAAAAAAALM}{\bkmkend AAAAAAAALM}
00028 \par
{\bkmkstart AAAAAAAALN}{\bkmkend AAAAAAAALN}
00029 {\cf17 static} {\cf18 char} client_msg_buffer[MAX_MSG_LENGTH + 1];\par
{\bkmkstart AAAAAAAALO}{\bkmkend AAAAAAAALO}
00030 \par
{\bkmkstart AAAAAAAALP}{\bkmkend AAAAAAAALP}
00031 \par
{\bkmkstart AAAAAAAALQ}{\bkmkend AAAAAAAALQ}
00032 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAALR}{\bkmkend AAAAAAAALR}
00033 {\cf18 int} CL_get_msg ( {\cf18 char} *msg )\par
{\bkmkstart AAAAAAAALS}{\bkmkend AAAAAAAALS}
00034 \{\par
{\bkmkstart AAAAAAAALT}{\bkmkend AAAAAAAALT}
00035     {\cf20 /*}\par
{\bkmkstart AAAAAAAALU}{\bkmkend AAAAAAAALU}
00036 {\cf20     if(strlen(msg) < MAX_MSG_LENGTH)}\par
{\bkmkstart AAAAAAAALV}{\bkmkend AAAAAAAALV}
00037 {\cf20     \{}\par
{\bkmkstart AAAAAAAALW}{\bkmkend AAAAAAAALW}
00038 {\cf20         printf("Client::not enough space, aborted!\\n");}\par
{\bkmkstart AAAAAAAALX}{\bkmkend AAAAAAAALX}
00039 {\cf20         return -2;}\par
{\bkmkstart AAAAAAAALY}{\bkmkend AAAAAAAALY}
00040 {\cf20     \}}\par
{\bkmkstart AAAAAAAALZ}{\bkmkend AAAAAAAALZ}
00041 {\cf20     */}\par
{\bkmkstart AAAAAAAAMA}{\bkmkend AAAAAAAAMA}
00042     {\cf19 if}(flag_client_ready)\par
{\bkmkstart AAAAAAAAMB}{\bkmkend AAAAAAAAMB}
00043     \{\par
{\bkmkstart AAAAAAAAMC}{\bkmkend AAAAAAAAMC}
00044         strcpy(msg, client_msg_buffer);\par
{\bkmkstart AAAAAAAAMD}{\bkmkend AAAAAAAAMD}
00045         client_msg_buffer[0] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAAME}{\bkmkend AAAAAAAAME}
00046         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAAMF}{\bkmkend AAAAAAAAMF}
00047     \}\par
{\bkmkstart AAAAAAAAMG}{\bkmkend AAAAAAAAMG}
00048     {\cf19 else}\par
{\bkmkstart AAAAAAAAMH}{\bkmkend AAAAAAAAMH}
00049         {\cf19 return} -1;\par
{\bkmkstart AAAAAAAAMI}{\bkmkend AAAAAAAAMI}
00050 \}\par
{\bkmkstart AAAAAAAAMJ}{\bkmkend AAAAAAAAMJ}
00051 {\cf21 #else}\par
{\bkmkstart AAAAAAAAMK}{\bkmkend AAAAAAAAMK}
00052 {\cf18 int} CL_get_msg ( {\cf18 char} *msg )\par
{\bkmkstart AAAAAAAAML}{\bkmkend AAAAAAAAML}
00053 \{\par
{\bkmkstart AAAAAAAAMM}{\bkmkend AAAAAAAAMM}
00054     {\cf19 if}(flag_client_ready)\par
{\bkmkstart AAAAAAAAMN}{\bkmkend AAAAAAAAMN}
00055     \{\par
{\bkmkstart AAAAAAAAMO}{\bkmkend AAAAAAAAMO}
00056         strcpy(msg, client_msg_buffer);\par
{\bkmkstart AAAAAAAAMP}{\bkmkend AAAAAAAAMP}
00057         client_msg_buffer[0] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAAMQ}{\bkmkend AAAAAAAAMQ}
00058         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAAMR}{\bkmkend AAAAAAAAMR}
00059     \}\par
{\bkmkstart AAAAAAAAMS}{\bkmkend AAAAAAAAMS}
00060     {\cf19 else}\par
{\bkmkstart AAAAAAAAMT}{\bkmkend AAAAAAAAMT}
00061         {\cf19 return} -1;\par
{\bkmkstart AAAAAAAAMU}{\bkmkend AAAAAAAAMU}
00062 \}\par
{\bkmkstart AAAAAAAAMV}{\bkmkend AAAAAAAAMV}
00063 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAAMW}{\bkmkend AAAAAAAAMW}
00064 \par
{\bkmkstart AAAAAAAAMX}{\bkmkend AAAAAAAAMX}
00065 {\cf18 void} client_main()\par
{\bkmkstart AAAAAAAAMY}{\bkmkend AAAAAAAAMY}
00066 \{\par
{\bkmkstart AAAAAAAAMZ}{\bkmkend AAAAAAAAMZ}
00067 \par
{\bkmkstart AAAAAAAANA}{\bkmkend AAAAAAAANA}
00068     {\cf18 byte} client_pak[BUFFER_SIZE + 1];\par
{\bkmkstart AAAAAAAANB}{\bkmkend AAAAAAAANB}
00069 \par
{\bkmkstart AAAAAAAANC}{\bkmkend AAAAAAAANC}
00070     {\cf18 byte} *pak_data_length = &client_pak[1];\par
{\bkmkstart AAAAAAAAND}{\bkmkend AAAAAAAAND}
00071     {\cf18 byte} *pak_data = &client_pak[2];\par
{\bkmkstart AAAAAAAANE}{\bkmkend AAAAAAAANE}
00072     {\cf18 byte} *pak_crc;\par
{\bkmkstart AAAAAAAANF}{\bkmkend AAAAAAAANF}
00073     {\cf18 byte} *pak_crc_byte;\par
{\bkmkstart AAAAAAAANG}{\bkmkend AAAAAAAANG}
00074     {\cf18 byte} *pak_end;\par
{\bkmkstart AAAAAAAANH}{\bkmkend AAAAAAAANH}
00075 \par
{\bkmkstart AAAAAAAANI}{\bkmkend AAAAAAAANI}
00076     {\cf18 int} i;\par
{\bkmkstart AAAAAAAANJ}{\bkmkend AAAAAAAANJ}
00077     {\cf18 unsigned} {\cf18 short} crcvalue;\par
{\bkmkstart AAAAAAAANK}{\bkmkend AAAAAAAANK}
00078 \par
{\bkmkstart AAAAAAAANL}{\bkmkend AAAAAAAANL}
00079     {\cf19 for}(; !flag_sender_ready || !flag_receiver_ready;)\par
{\bkmkstart AAAAAAAANM}{\bkmkend AAAAAAAANM}
00080         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAANN}{\bkmkend AAAAAAAANN}
00081     RC_flush_buffer();\par
{\bkmkstart AAAAAAAANO}{\bkmkend AAAAAAAANO}
00082     flag_client_ready = 1;\par
{\bkmkstart AAAAAAAANP}{\bkmkend AAAAAAAANP}
00083 \par
{\bkmkstart AAAAAAAANQ}{\bkmkend AAAAAAAANQ}
00084 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAANR}{\bkmkend AAAAAAAANR}
00085             printf({\cf22 "Client::client is ready\\n"});\par
{\bkmkstart AAAAAAAANS}{\bkmkend AAAAAAAANS}
00086 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAANT}{\bkmkend AAAAAAAANT}
00087 \par
{\bkmkstart AAAAAAAANU}{\bkmkend AAAAAAAANU}
00088     {\cf19 for}(;;)\par
{\bkmkstart AAAAAAAANV}{\bkmkend AAAAAAAANV}
00089     \{\par
{\bkmkstart AAAAAAAANW}{\bkmkend AAAAAAAANW}
00090         client_pak[0] = RC_buffer_get();\par
{\bkmkstart AAAAAAAANX}{\bkmkend AAAAAAAANX}
00091 \par
{\bkmkstart AAAAAAAANY}{\bkmkend AAAAAAAANY}
00092         {\cf19 if}(client_pak[0] == 0)    {\cf20 /* data packet */}\par
{\bkmkstart AAAAAAAANZ}{\bkmkend AAAAAAAANZ}
00093         \{\par
{\bkmkstart AAAAAAAAOA}{\bkmkend AAAAAAAAOA}
00094             flag_client_ready = 0;\par
{\bkmkstart AAAAAAAAOB}{\bkmkend AAAAAAAAOB}
00095 \par
{\bkmkstart AAAAAAAAOC}{\bkmkend AAAAAAAAOC}
00096 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAAOD}{\bkmkend AAAAAAAAOD}
00097             printf({\cf22 "Client::receiving packet...\\n"});\par
{\bkmkstart AAAAAAAAOE}{\bkmkend AAAAAAAAOE}
00098 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAAOF}{\bkmkend AAAAAAAAOF}
00099 \par
{\bkmkstart AAAAAAAAOG}{\bkmkend AAAAAAAAOG}
00100             *pak_data_length = RC_buffer_get();\par
{\bkmkstart AAAAAAAAOH}{\bkmkend AAAAAAAAOH}
00101             {\cf19 if}(*pak_data_length>MAX_MSG_LENGTH)\par
{\bkmkstart AAAAAAAAOI}{\bkmkend AAAAAAAAOI}
00102                 printf({\cf22 "Client::invalid packet length, aborted!\\n"});\par
{\bkmkstart AAAAAAAAOJ}{\bkmkend AAAAAAAAOJ}
00103 \par
{\bkmkstart AAAAAAAAOK}{\bkmkend AAAAAAAAOK}
00104             {\cf19 for}(i=0; i<*pak_data_length; i++)\par
{\bkmkstart AAAAAAAAOL}{\bkmkend AAAAAAAAOL}
00105                 pak_data[i] = RC_buffer_get();\par
{\bkmkstart AAAAAAAAOM}{\bkmkend AAAAAAAAOM}
00106 \par
{\bkmkstart AAAAAAAAON}{\bkmkend AAAAAAAAON}
00107             pak_crc_byte = &pak_data[i];\par
{\bkmkstart AAAAAAAAOO}{\bkmkend AAAAAAAAOO}
00108             pak_crc_byte[0] = RC_buffer_get();\par
{\bkmkstart AAAAAAAAOP}{\bkmkend AAAAAAAAOP}
00109             pak_crc_byte[1] = RC_buffer_get();\par
{\bkmkstart AAAAAAAAOQ}{\bkmkend AAAAAAAAOQ}
00110             pak_end = &pak_data[i+2];\par
{\bkmkstart AAAAAAAAOR}{\bkmkend AAAAAAAAOR}
00111             pak_end[0] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAAOS}{\bkmkend AAAAAAAAOS}
00112 \par
{\bkmkstart AAAAAAAAOT}{\bkmkend AAAAAAAAOT}
00113             CRC_Init(&crcvalue);\par
{\bkmkstart AAAAAAAAOU}{\bkmkend AAAAAAAAOU}
00114             {\cf19 for}(i=0; i<*pak_data_length; i++) {\cf20 /* crc16 CCITT_FALSE */}\par
{\bkmkstart AAAAAAAAOV}{\bkmkend AAAAAAAAOV}
00115                 CRC_ProcessByte(&crcvalue, pak_data[i]);\par
{\bkmkstart AAAAAAAAOW}{\bkmkend AAAAAAAAOW}
00116             crcvalue = CRC_Value(crcvalue);\par
{\bkmkstart AAAAAAAAOX}{\bkmkend AAAAAAAAOX}
00117             pak_crc = ({\cf18 byte} *) &crcvalue;\par
{\bkmkstart AAAAAAAAOY}{\bkmkend AAAAAAAAOY}
00118 \par
{\bkmkstart AAAAAAAAOZ}{\bkmkend AAAAAAAAOZ}
00119             {\cf19 if}((pak_crc[0] == pak_crc_byte[0] && pak_crc[1] == pak_crc_byte[1]) || (pak_crc[0] == pak_crc_byte[1] && pak_crc[1] == pak_crc_byte[0]))\par
{\bkmkstart AAAAAAAAPA}{\bkmkend AAAAAAAAPA}
00120             \{\par
{\bkmkstart AAAAAAAAPB}{\bkmkend AAAAAAAAPB}
00121 \par
{\bkmkstart AAAAAAAAPC}{\bkmkend AAAAAAAAPC}
00122 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAAPD}{\bkmkend AAAAAAAAPD}
00123                 printf({\cf22 "Client::packet received\\n"});\par
{\bkmkstart AAAAAAAAPE}{\bkmkend AAAAAAAAPE}
00124                 {\cf19 for}(i=0; i<*pak_data_length + 4; i++)\par
{\bkmkstart AAAAAAAAPF}{\bkmkend AAAAAAAAPF}
00125                 \{\par
{\bkmkstart AAAAAAAAPG}{\bkmkend AAAAAAAAPG}
00126                     printf({\cf22 "%d "}, client_pak[i]);\par
{\bkmkstart AAAAAAAAPH}{\bkmkend AAAAAAAAPH}
00127                 \}\par
{\bkmkstart AAAAAAAAPI}{\bkmkend AAAAAAAAPI}
00128                 printf({\cf22 "\\n"});\par
{\bkmkstart AAAAAAAAPJ}{\bkmkend AAAAAAAAPJ}
00129 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAAPK}{\bkmkend AAAAAAAAPK}
00130 \par
{\bkmkstart AAAAAAAAPL}{\bkmkend AAAAAAAAPL}
00131                 printf({\cf22 "Client::new message received:"});\par
{\bkmkstart AAAAAAAAPM}{\bkmkend AAAAAAAAPM}
00132                 {\cf19 for}(i=0; i<*pak_data_length; i++)\par
{\bkmkstart AAAAAAAAPN}{\bkmkend AAAAAAAAPN}
00133                 \{\par
{\bkmkstart AAAAAAAAPO}{\bkmkend AAAAAAAAPO}
00134                     client_msg_buffer[i] = pak_data[i];\par
{\bkmkstart AAAAAAAAPP}{\bkmkend AAAAAAAAPP}
00135                     {\cf20 /*printf("%c", pak_data[i]);*/}\par
{\bkmkstart AAAAAAAAPQ}{\bkmkend AAAAAAAAPQ}
00136                 \}\par
{\bkmkstart AAAAAAAAPR}{\bkmkend AAAAAAAAPR}
00137                 printf({\cf22 "%s\\n"}, client_msg_buffer);\par
{\bkmkstart AAAAAAAAPS}{\bkmkend AAAAAAAAPS}
00138 \par
{\bkmkstart AAAAAAAAPT}{\bkmkend AAAAAAAAPT}
00139                 {\cf19 for}(; flag_server_isdumping;)\par
{\bkmkstart AAAAAAAAPU}{\bkmkend AAAAAAAAPU}
00140                     delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAAPV}{\bkmkend AAAAAAAAPV}
00141 \par
{\bkmkstart AAAAAAAAPW}{\bkmkend AAAAAAAAPW}
00142                 flag_client_isdumping = 1;\par
{\bkmkstart AAAAAAAAPX}{\bkmkend AAAAAAAAPX}
00143                 SD_buffer_put(6);\par
{\bkmkstart AAAAAAAAPY}{\bkmkend AAAAAAAAPY}
00144                 SD_buffer_put(pak_crc_byte[0]);\par
{\bkmkstart AAAAAAAAPZ}{\bkmkend AAAAAAAAPZ}
00145                 SD_buffer_put(pak_crc_byte[1]);\par
{\bkmkstart AAAAAAAAQA}{\bkmkend AAAAAAAAQA}
00146                 flag_client_isdumping = 0;\par
{\bkmkstart AAAAAAAAQB}{\bkmkend AAAAAAAAQB}
00147 \par
{\bkmkstart AAAAAAAAQC}{\bkmkend AAAAAAAAQC}
00148             \}\par
{\bkmkstart AAAAAAAAQD}{\bkmkend AAAAAAAAQD}
00149             {\cf19 else}\par
{\bkmkstart AAAAAAAAQE}{\bkmkend AAAAAAAAQE}
00150                 printf({\cf22 "Client::data packet CRC16 failed, aborted!\\n"});\par
{\bkmkstart AAAAAAAAQF}{\bkmkend AAAAAAAAQF}
00151         \}\par
{\bkmkstart AAAAAAAAQG}{\bkmkend AAAAAAAAQG}
00152         {\cf19 else} {\cf19 if}(client_pak[0] == 6)    {\cf20 /* ACK packet */}\par
{\bkmkstart AAAAAAAAQH}{\bkmkend AAAAAAAAQH}
00153         \{\par
{\bkmkstart AAAAAAAAQI}{\bkmkend AAAAAAAAQI}
00154             client_crc16[0] = RC_buffer_get();\par
{\bkmkstart AAAAAAAAQJ}{\bkmkend AAAAAAAAQJ}
00155             client_crc16[1] = RC_buffer_get();\par
{\bkmkstart AAAAAAAAQK}{\bkmkend AAAAAAAAQK}
00156             flag_client_get_ack = 1;\par
{\bkmkstart AAAAAAAAQL}{\bkmkend AAAAAAAAQL}
00157 \par
{\bkmkstart AAAAAAAAQM}{\bkmkend AAAAAAAAQM}
00158 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAAQN}{\bkmkend AAAAAAAAQN}
00159             printf({\cf22 "Client::ACK to local server...\\n"});\par
{\bkmkstart AAAAAAAAQO}{\bkmkend AAAAAAAAQO}
00160 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAAQP}{\bkmkend AAAAAAAAQP}
00161 \par
{\bkmkstart AAAAAAAAQQ}{\bkmkend AAAAAAAAQQ}
00162         \}\par
{\bkmkstart AAAAAAAAQR}{\bkmkend AAAAAAAAQR}
00163 \par
{\bkmkstart AAAAAAAAQS}{\bkmkend AAAAAAAAQS}
00164         {\cf20 /*RC_flush_buffer();*/}\par
{\bkmkstart AAAAAAAAQT}{\bkmkend AAAAAAAAQT}
00165 \par
{\bkmkstart AAAAAAAAQU}{\bkmkend AAAAAAAAQU}
00166 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAAQV}{\bkmkend AAAAAAAAQV}
00167         printf({\cf22 "Client::client is ready\\n"});\par
{\bkmkstart AAAAAAAAQW}{\bkmkend AAAAAAAAQW}
00168 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAAQX}{\bkmkend AAAAAAAAQX}
00169 \par
{\bkmkstart AAAAAAAAQY}{\bkmkend AAAAAAAAQY}
00170         flag_client_ready = 1;\par
{\bkmkstart AAAAAAAAQZ}{\bkmkend AAAAAAAAQZ}
00171     \}\par
{\bkmkstart AAAAAAAARA}{\bkmkend AAAAAAAARA}
00172 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
client.h\par \pard\plain 
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAARC}{\bkmkend AAAAAAAARC}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAARD}{\bkmkend AAAAAAAARD}
00002 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAARE}{\bkmkend AAAAAAAARE}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAARF}{\bkmkend AAAAAAAARF}
00004 {\cf20 // Purpose:}\par
{\bkmkstart AAAAAAAARG}{\bkmkend AAAAAAAARG}
00005 {\cf20 //}\par
{\bkmkstart AAAAAAAARH}{\bkmkend AAAAAAAARH}
00006 {\cf20 // $NoKeywords: $}\par
{\bkmkstart AAAAAAAARI}{\bkmkend AAAAAAAARI}
00007 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAARJ}{\bkmkend AAAAAAAARJ}
00008 {\cf20 */}\par
{\bkmkstart AAAAAAAARK}{\bkmkend AAAAAAAARK}
00009 \par
{\bkmkstart AAAAAAAARL}{\bkmkend AAAAAAAARL}
00010 {\cf20 /*}\par
{\bkmkstart AAAAAAAARM}{\bkmkend AAAAAAAARM}
00011 {\cf20 }\par
{\bkmkstart AAAAAAAARN}{\bkmkend AAAAAAAARN}
00012 {\cf20 frame structure}\par
{\bkmkstart AAAAAAAARO}{\bkmkend AAAAAAAARO}
00013 {\cf20 |0|D0|D1|D2|D3|D4|D5|D6|D7|1|1|}\par
{\bkmkstart AAAAAAAARP}{\bkmkend AAAAAAAARP}
00014 {\cf20 data packet structure}\par
{\bkmkstart AAAAAAAARQ}{\bkmkend AAAAAAAARQ}
00015 {\cf20 |0|length of data|-data-|-|crc16byte0|crc16byte1|}\par
{\bkmkstart AAAAAAAARR}{\bkmkend AAAAAAAARR}
00016 {\cf20 ACK (acknowledge) packet structure}\par
{\bkmkstart AAAAAAAARS}{\bkmkend AAAAAAAARS}
00017 {\cf20 |6|crc16byte0|crc16byte1|}\par
{\bkmkstart AAAAAAAART}{\bkmkend AAAAAAAART}
00018 {\cf20 }\par
{\bkmkstart AAAAAAAARU}{\bkmkend AAAAAAAARU}
00019 {\cf20 */}\par
{\bkmkstart AAAAAAAARV}{\bkmkend AAAAAAAARV}
00020 \par
{\bkmkstart AAAAAAAARW}{\bkmkend AAAAAAAARW}
00021 \par
{\bkmkstart AAAAAAAARX}{\bkmkend AAAAAAAARX}
00022 {\cf21 #ifndef __CLIENT__}\par
{\bkmkstart AAAAAAAARY}{\bkmkend AAAAAAAARY}
00023 {\cf21 #define __CLIENT__}\par
{\bkmkstart AAAAAAAARZ}{\bkmkend AAAAAAAARZ}
00024 \par
{\bkmkstart AAAAAAAASA}{\bkmkend AAAAAAAASA}
00025 \par
{\bkmkstart AAAAAAAASB}{\bkmkend AAAAAAAASB}
00026 {\cf20 /*}\par
{\bkmkstart AAAAAAAASC}{\bkmkend AAAAAAAASC}
00027 {\cf20 // client.h}\par
{\bkmkstart AAAAAAAASD}{\bkmkend AAAAAAAASD}
00028 {\cf20 */}\par
{\bkmkstart AAAAAAAASE}{\bkmkend AAAAAAAASE}
00029 \par
{\bkmkstart AAAAAAAASF}{\bkmkend AAAAAAAASF}
00030 \par
{\bkmkstart AAAAAAAASG}{\bkmkend AAAAAAAASG}
00031 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAASH}{\bkmkend AAAAAAAASH}
00032 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAAASI}{\bkmkend AAAAAAAASI}
00033 \{\par
{\bkmkstart AAAAAAAASJ}{\bkmkend AAAAAAAASJ}
00034 {\cf21 #endif}\par
{\bkmkstart AAAAAAAASK}{\bkmkend AAAAAAAASK}
00035 \par
{\bkmkstart AAAAAAAASL}{\bkmkend AAAAAAAASL}
00036 {\cf17 extern} {\cf18 int} flag_client_ready;\par
{\bkmkstart AAAAAAAASM}{\bkmkend AAAAAAAASM}
00037 {\cf17 extern} {\cf18 int} flag_client_isdumping;\par
{\bkmkstart AAAAAAAASN}{\bkmkend AAAAAAAASN}
00038 \par
{\bkmkstart AAAAAAAASO}{\bkmkend AAAAAAAASO}
00039 {\cf17 extern} {\cf18 int} flag_client_get_ack;\par
{\bkmkstart AAAAAAAASP}{\bkmkend AAAAAAAASP}
00040 {\cf17 extern} {\cf18 byte} client_crc16[3];\par
{\bkmkstart AAAAAAAASQ}{\bkmkend AAAAAAAASQ}
00041 \par
{\bkmkstart AAAAAAAASR}{\bkmkend AAAAAAAASR}
00042 {\cf18 int} CL_get_msg ({\cf18 char} *msg);\par
{\bkmkstart AAAAAAAASS}{\bkmkend AAAAAAAASS}
00043 \par
{\bkmkstart AAAAAAAAST}{\bkmkend AAAAAAAAST}
00044 {\cf18 void} client_main();\par
{\bkmkstart AAAAAAAASU}{\bkmkend AAAAAAAASU}
00045 \par
{\bkmkstart AAAAAAAASV}{\bkmkend AAAAAAAASV}
00046 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAASW}{\bkmkend AAAAAAAASW}
00047 \}\par
{\bkmkstart AAAAAAAASX}{\bkmkend AAAAAAAASX}
00048 {\cf21 #endif}\par
{\bkmkstart AAAAAAAASY}{\bkmkend AAAAAAAASY}
00049 \par
{\bkmkstart AAAAAAAASZ}{\bkmkend AAAAAAAASZ}
00050 \par
{\bkmkstart AAAAAAAATA}{\bkmkend AAAAAAAATA}
00051 {\cf21 #endif  }{\cf20 /*__CLIENT__*/}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cmdlib.c\par \pard\plain 
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAATC}{\bkmkend AAAAAAAATC}
00001 {\cf20 /***}\par
{\bkmkstart AAAAAAAATD}{\bkmkend AAAAAAAATD}
00002 {\cf20 *}\par
{\bkmkstart AAAAAAAATE}{\bkmkend AAAAAAAATE}
00003 {\cf20 *       Copyright (c) 1996-2002, Valve LLC. All rights reserved.}\par
{\bkmkstart AAAAAAAATF}{\bkmkend AAAAAAAATF}
00004 {\cf20 *}\par
{\bkmkstart AAAAAAAATG}{\bkmkend AAAAAAAATG}
00005 {\cf20 *       This product contains software technology licensed from Id}\par
{\bkmkstart AAAAAAAATH}{\bkmkend AAAAAAAATH}
00006 {\cf20 *       Software, Inc. ("Id Technology").  Id Technology (c) 1996 Id Software, Inc.}\par
{\bkmkstart AAAAAAAATI}{\bkmkend AAAAAAAATI}
00007 {\cf20 *       All Rights Reserved.}\par
{\bkmkstart AAAAAAAATJ}{\bkmkend AAAAAAAATJ}
00008 {\cf20 *}\par
{\bkmkstart AAAAAAAATK}{\bkmkend AAAAAAAATK}
00009 {\cf20 ****/}\par
{\bkmkstart AAAAAAAATL}{\bkmkend AAAAAAAATL}
00010 \par
{\bkmkstart AAAAAAAATM}{\bkmkend AAAAAAAATM}
00011 {\cf20 /* cmdlib.c */}\par
{\bkmkstart AAAAAAAATN}{\bkmkend AAAAAAAATN}
00012 \par
{\bkmkstart AAAAAAAATO}{\bkmkend AAAAAAAATO}
00013 {\cf20 /*}\par
{\bkmkstart AAAAAAAATP}{\bkmkend AAAAAAAATP}
00014 {\cf20 =================}\par
{\bkmkstart AAAAAAAATQ}{\bkmkend AAAAAAAATQ}
00015 {\cf20 last modified:}\par
{\bkmkstart AAAAAAAATR}{\bkmkend AAAAAAAATR}
00016 {\cf20 =================}\par
{\bkmkstart AAAAAAAATS}{\bkmkend AAAAAAAATS}
00017 {\cf20 */}\par
{\bkmkstart AAAAAAAATT}{\bkmkend AAAAAAAATT}
00018 \par
{\bkmkstart AAAAAAAATU}{\bkmkend AAAAAAAATU}
00019 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAAATV}{\bkmkend AAAAAAAATV}
00020 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAAATW}{\bkmkend AAAAAAAATW}
00021 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAAATX}{\bkmkend AAAAAAAATX}
00022 {\cf21 #include <errno.h>}\par
{\bkmkstart AAAAAAAATY}{\bkmkend AAAAAAAATY}
00023 {\cf21 #include <ctype.h>}\par
{\bkmkstart AAAAAAAATZ}{\bkmkend AAAAAAAATZ}
00024 {\cf21 #include <time.h>}\par
{\bkmkstart AAAAAAAAUA}{\bkmkend AAAAAAAAUA}
00025 {\cf21 #include <stdarg.h>}\par
{\bkmkstart AAAAAAAAUB}{\bkmkend AAAAAAAAUB}
00026 \par
{\bkmkstart AAAAAAAAUC}{\bkmkend AAAAAAAAUC}
00027 {\cf21 #include "cmdlib.h"}\par
{\bkmkstart AAAAAAAAUD}{\bkmkend AAAAAAAAUD}
00028 {\cf21 #include <sys/types.h>}\par
{\bkmkstart AAAAAAAAUE}{\bkmkend AAAAAAAAUE}
00029 {\cf21 #include <sys/stat.h>}\par
{\bkmkstart AAAAAAAAUF}{\bkmkend AAAAAAAAUF}
00030 \par
{\bkmkstart AAAAAAAAUG}{\bkmkend AAAAAAAAUG}
00031 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAAAUH}{\bkmkend AAAAAAAAUH}
00032 {\cf21 #include <direct.h>}\par
{\bkmkstart AAAAAAAAUI}{\bkmkend AAAAAAAAUI}
00033 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAUJ}{\bkmkend AAAAAAAAUJ}
00034 \par
{\bkmkstart AAAAAAAAUK}{\bkmkend AAAAAAAAUK}
00035 {\cf21 #ifdef NeXT}\par
{\bkmkstart AAAAAAAAUL}{\bkmkend AAAAAAAAUL}
00036 {\cf21 #include <libc.h>}\par
{\bkmkstart AAAAAAAAUM}{\bkmkend AAAAAAAAUM}
00037 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAUN}{\bkmkend AAAAAAAAUN}
00038 \par
{\bkmkstart AAAAAAAAUO}{\bkmkend AAAAAAAAUO}
00039 {\cf21 #ifdef  WIN32}\par
{\bkmkstart AAAAAAAAUP}{\bkmkend AAAAAAAAUP}
00040 {\cf21 #define PATHSEPARATOR(c) ((c) == '\\\\' || (c) == '/')}\par
{\bkmkstart AAAAAAAAUQ}{\bkmkend AAAAAAAAUQ}
00041 {\cf21 #else   }{\cf20 /*WIN32*/}{\cf21 }\par
{\bkmkstart AAAAAAAAUR}{\bkmkend AAAAAAAAUR}
00042 {\cf21 #define PATHSEPARATOR(c) ((c) == '/')}\par
{\bkmkstart AAAAAAAAUS}{\bkmkend AAAAAAAAUS}
00043 {\cf21 #endif  }{\cf20 /*WIN32*/}{\cf21 }\par
{\bkmkstart AAAAAAAAUT}{\bkmkend AAAAAAAAUT}
00044 \par
{\bkmkstart AAAAAAAAUU}{\bkmkend AAAAAAAAUU}
00045 {\cf20 /* set these before calling CheckParm */}\par
{\bkmkstart AAAAAAAAUV}{\bkmkend AAAAAAAAUV}
00046 {\cf18 int} myargc;\par
{\bkmkstart AAAAAAAAUW}{\bkmkend AAAAAAAAUW}
00047 {\cf18 char} **myargv;\par
{\bkmkstart AAAAAAAAUX}{\bkmkend AAAAAAAAUX}
00048 \par
{\bkmkstart AAAAAAAAUY}{\bkmkend AAAAAAAAUY}
00049 {\cf18 char}            com_token[1024];\par
{\bkmkstart AAAAAAAAUZ}{\bkmkend AAAAAAAAUZ}
00050 qboolean        com_eof;\par
{\bkmkstart AAAAAAAAVA}{\bkmkend AAAAAAAAVA}
00051 \par
{\bkmkstart AAAAAAAAVB}{\bkmkend AAAAAAAAVB}
00052 qboolean                archive;\par
{\bkmkstart AAAAAAAAVC}{\bkmkend AAAAAAAAVC}
00053 {\cf18 char}                    archivedir[1024];\par
{\bkmkstart AAAAAAAAVD}{\bkmkend AAAAAAAAVD}
00054 \par
{\bkmkstart AAAAAAAAVE}{\bkmkend AAAAAAAAVE}
00055 \par
{\bkmkstart AAAAAAAAVF}{\bkmkend AAAAAAAAVF}
00056 {\cf18 void} COM_FixSlashes( {\cf18 char} *pname )\par
{\bkmkstart AAAAAAAAVG}{\bkmkend AAAAAAAAVG}
00057 \{\par
{\bkmkstart AAAAAAAAVH}{\bkmkend AAAAAAAAVH}
00058 {\cf21 #if 0}\par
{\bkmkstart AAAAAAAAVI}{\bkmkend AAAAAAAAVI}
00059         {\cf19 while} ( *pname ) \{\par
{\bkmkstart AAAAAAAAVJ}{\bkmkend AAAAAAAAVJ}
00060                 {\cf19 if} ( *pname == {\cf23 '/'} )\par
{\bkmkstart AAAAAAAAVK}{\bkmkend AAAAAAAAVK}
00061                         *pname = {\cf23 '\\\\'};\par
{\bkmkstart AAAAAAAAVL}{\bkmkend AAAAAAAAVL}
00062                 pname++;\par
{\bkmkstart AAAAAAAAVM}{\bkmkend AAAAAAAAVM}
00063         \}\par
{\bkmkstart AAAAAAAAVN}{\bkmkend AAAAAAAAVN}
00064 {\cf21 #else}\par
{\bkmkstart AAAAAAAAVO}{\bkmkend AAAAAAAAVO}
00065         {\cf19 while} ( *pname ) \{\par
{\bkmkstart AAAAAAAAVP}{\bkmkend AAAAAAAAVP}
00066                 {\cf19 if} ( *pname == {\cf23 '\\\\'} )\par
{\bkmkstart AAAAAAAAVQ}{\bkmkend AAAAAAAAVQ}
00067                         *pname = {\cf23 '/'};\par
{\bkmkstart AAAAAAAAVR}{\bkmkend AAAAAAAAVR}
00068                 pname++;\par
{\bkmkstart AAAAAAAAVS}{\bkmkend AAAAAAAAVS}
00069         \}\par
{\bkmkstart AAAAAAAAVT}{\bkmkend AAAAAAAAVT}
00070 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAVU}{\bkmkend AAAAAAAAVU}
00071 \}\par
{\bkmkstart AAAAAAAAVV}{\bkmkend AAAAAAAAVV}
00072 \par
{\bkmkstart AAAAAAAAVW}{\bkmkend AAAAAAAAVW}
00073 \par
{\bkmkstart AAAAAAAAVX}{\bkmkend AAAAAAAAVX}
00074 {\cf20 /*}\par
{\bkmkstart AAAAAAAAVY}{\bkmkend AAAAAAAAVY}
00075 {\cf20 =================}\par
{\bkmkstart AAAAAAAAVZ}{\bkmkend AAAAAAAAVZ}
00076 {\cf20 Error}\par
{\bkmkstart AAAAAAAAWA}{\bkmkend AAAAAAAAWA}
00077 {\cf20 }\par
{\bkmkstart AAAAAAAAWB}{\bkmkend AAAAAAAAWB}
00078 {\cf20 For abnormal program terminations}\par
{\bkmkstart AAAAAAAAWC}{\bkmkend AAAAAAAAWC}
00079 {\cf20 =================}\par
{\bkmkstart AAAAAAAAWD}{\bkmkend AAAAAAAAWD}
00080 {\cf20 */}\par
{\bkmkstart AAAAAAAAWE}{\bkmkend AAAAAAAAWE}
00081 {\cf18 void} Error ({\cf18 char} *error, ...)\par
{\bkmkstart AAAAAAAAWF}{\bkmkend AAAAAAAAWF}
00082 \{\par
{\bkmkstart AAAAAAAAWG}{\bkmkend AAAAAAAAWG}
00083         va_list argptr;\par
{\bkmkstart AAAAAAAAWH}{\bkmkend AAAAAAAAWH}
00084 \par
{\bkmkstart AAAAAAAAWI}{\bkmkend AAAAAAAAWI}
00085         printf ({\cf22 "\\n************ ERROR ************\\n"});\par
{\bkmkstart AAAAAAAAWJ}{\bkmkend AAAAAAAAWJ}
00086 \par
{\bkmkstart AAAAAAAAWK}{\bkmkend AAAAAAAAWK}
00087         va_start (argptr,error);\par
{\bkmkstart AAAAAAAAWL}{\bkmkend AAAAAAAAWL}
00088         vprintf (error,argptr);\par
{\bkmkstart AAAAAAAAWM}{\bkmkend AAAAAAAAWM}
00089         va_end (argptr);\par
{\bkmkstart AAAAAAAAWN}{\bkmkend AAAAAAAAWN}
00090         printf ({\cf22 "\\n"});\par
{\bkmkstart AAAAAAAAWO}{\bkmkend AAAAAAAAWO}
00091 \par
{\bkmkstart AAAAAAAAWP}{\bkmkend AAAAAAAAWP}
00092         exit (1);\par
{\bkmkstart AAAAAAAAWQ}{\bkmkend AAAAAAAAWQ}
00093 \}\par
{\bkmkstart AAAAAAAAWR}{\bkmkend AAAAAAAAWR}
00094 \par
{\bkmkstart AAAAAAAAWS}{\bkmkend AAAAAAAAWS}
00095 {\cf20 /* only printf if in verbose mode */}\par
{\bkmkstart AAAAAAAAWT}{\bkmkend AAAAAAAAWT}
00096 qboolean verbose = {\cf17 false};\par
{\bkmkstart AAAAAAAAWU}{\bkmkend AAAAAAAAWU}
00097 {\cf18 void} qprintf ({\cf18 char} *format, ...)\par
{\bkmkstart AAAAAAAAWV}{\bkmkend AAAAAAAAWV}
00098 \{\par
{\bkmkstart AAAAAAAAWW}{\bkmkend AAAAAAAAWW}
00099         va_list argptr;\par
{\bkmkstart AAAAAAAAWX}{\bkmkend AAAAAAAAWX}
00100 \par
{\bkmkstart AAAAAAAAWY}{\bkmkend AAAAAAAAWY}
00101         {\cf19 if} (!verbose)\par
{\bkmkstart AAAAAAAAWZ}{\bkmkend AAAAAAAAWZ}
00102                 {\cf19 return};\par
{\bkmkstart AAAAAAAAXA}{\bkmkend AAAAAAAAXA}
00103         va_start (argptr,format);\par
{\bkmkstart AAAAAAAAXB}{\bkmkend AAAAAAAAXB}
00104         vprintf (format,argptr);\par
{\bkmkstart AAAAAAAAXC}{\bkmkend AAAAAAAAXC}
00105         va_end (argptr);\par
{\bkmkstart AAAAAAAAXD}{\bkmkend AAAAAAAAXD}
00106 \}\par
{\bkmkstart AAAAAAAAXE}{\bkmkend AAAAAAAAXE}
00107 \par
{\bkmkstart AAAAAAAAXF}{\bkmkend AAAAAAAAXF}
00108 \par
{\bkmkstart AAAAAAAAXG}{\bkmkend AAAAAAAAXG}
00109 {\cf20 /*}\par
{\bkmkstart AAAAAAAAXH}{\bkmkend AAAAAAAAXH}
00110 {\cf20 }\par
{\bkmkstart AAAAAAAAXI}{\bkmkend AAAAAAAAXI}
00111 {\cf20 qdir will hold the path up to the quake directory, including the slash}\par
{\bkmkstart AAAAAAAAXJ}{\bkmkend AAAAAAAAXJ}
00112 {\cf20 }\par
{\bkmkstart AAAAAAAAXK}{\bkmkend AAAAAAAAXK}
00113 {\cf20   f:\\quake\\}\par
{\bkmkstart AAAAAAAAXL}{\bkmkend AAAAAAAAXL}
00114 {\cf20   /raid/quake/}\par
{\bkmkstart AAAAAAAAXM}{\bkmkend AAAAAAAAXM}
00115 {\cf20 }\par
{\bkmkstart AAAAAAAAXN}{\bkmkend AAAAAAAAXN}
00116 {\cf20 gamedir will hold qdir + the game directory (id1, id2, etc)}\par
{\bkmkstart AAAAAAAAXO}{\bkmkend AAAAAAAAXO}
00117 {\cf20 }\par
{\bkmkstart AAAAAAAAXP}{\bkmkend AAAAAAAAXP}
00118 {\cf20   */}\par
{\bkmkstart AAAAAAAAXQ}{\bkmkend AAAAAAAAXQ}
00119 \par
{\bkmkstart AAAAAAAAXR}{\bkmkend AAAAAAAAXR}
00120 {\cf18 char}            qproject[ 1024 ]=\{{\cf23 '\\0'}\};\par
{\bkmkstart AAAAAAAAXS}{\bkmkend AAAAAAAAXS}
00121 {\cf18 char}            qdir[1024]=\{{\cf23 '\\0'}\};\par
{\bkmkstart AAAAAAAAXT}{\bkmkend AAAAAAAAXT}
00122 {\cf18 char}            gamedir[1024]=\{{\cf23 '\\0'}\};\par
{\bkmkstart AAAAAAAAXU}{\bkmkend AAAAAAAAXU}
00123 \par
{\bkmkstart AAAAAAAAXV}{\bkmkend AAAAAAAAXV}
00124 {\cf18 void} SetQdirFromPath ({\cf18 char} *path)\par
{\bkmkstart AAAAAAAAXW}{\bkmkend AAAAAAAAXW}
00125 \{\par
{\bkmkstart AAAAAAAAXX}{\bkmkend AAAAAAAAXX}
00126 {\cf21 #ifndef OLD_BOGUS_PATH_CODE}\par
{\bkmkstart AAAAAAAAXY}{\bkmkend AAAAAAAAXY}
00127 \par
{\bkmkstart AAAAAAAAXZ}{\bkmkend AAAAAAAAXZ}
00128         {\cf19 if} ( qproject[0]=={\cf23 '\\0'} )\par
{\bkmkstart AAAAAAAAYA}{\bkmkend AAAAAAAAYA}
00129                 \{\par
{\bkmkstart AAAAAAAAYB}{\bkmkend AAAAAAAAYB}
00130                 {\cf19 if} ( getenv({\cf22 "QPROJECT"}) )\par
{\bkmkstart AAAAAAAAYC}{\bkmkend AAAAAAAAYC}
00131                 \{\par
{\bkmkstart AAAAAAAAYD}{\bkmkend AAAAAAAAYD}
00132                         {\cf18 char} c = qproject[ strlen(qproject)-1 ];\par
{\bkmkstart AAAAAAAAYE}{\bkmkend AAAAAAAAYE}
00133                         strcpy( qproject, getenv({\cf22 "QPROJECT"}) );\par
{\bkmkstart AAAAAAAAYF}{\bkmkend AAAAAAAAYF}
00134                         {\cf19 if} ( !PATHSEPARATOR( c ) )\par
{\bkmkstart AAAAAAAAYG}{\bkmkend AAAAAAAAYG}
00135                                 strcat( qproject, {\cf22 "\\\\"} );\par
{\bkmkstart AAAAAAAAYH}{\bkmkend AAAAAAAAYH}
00136                 \}\par
{\bkmkstart AAAAAAAAYI}{\bkmkend AAAAAAAAYI}
00137                 {\cf19 else}\par
{\bkmkstart AAAAAAAAYJ}{\bkmkend AAAAAAAAYJ}
00138                         strcpy( qproject, {\cf22 "quiver\\\\"} );\par
{\bkmkstart AAAAAAAAYK}{\bkmkend AAAAAAAAYK}
00139                 \}\par
{\bkmkstart AAAAAAAAYL}{\bkmkend AAAAAAAAYL}
00140         {\cf19 if} ( qproject[0] != {\cf23 '\\\\'} && qproject[0] != {\cf23 '/'} && qproject[1] != {\cf23 ':'} )\par
{\bkmkstart AAAAAAAAYM}{\bkmkend AAAAAAAAYM}
00141                 \{\par
{\bkmkstart AAAAAAAAYN}{\bkmkend AAAAAAAAYN}
00142                 strcpy( qdir, {\cf22 "\\\\"} );\par
{\bkmkstart AAAAAAAAYO}{\bkmkend AAAAAAAAYO}
00143                 \}\par
{\bkmkstart AAAAAAAAYP}{\bkmkend AAAAAAAAYP}
00144 \par
{\bkmkstart AAAAAAAAYQ}{\bkmkend AAAAAAAAYQ}
00145         strcat( qdir, qproject );\par
{\bkmkstart AAAAAAAAYR}{\bkmkend AAAAAAAAYR}
00146         strcpy( gamedir, qdir );\par
{\bkmkstart AAAAAAAAYS}{\bkmkend AAAAAAAAYS}
00147         strcat( gamedir, {\cf22 "\\\\valve\\\\"} );\par
{\bkmkstart AAAAAAAAYT}{\bkmkend AAAAAAAAYT}
00148 \par
{\bkmkstart AAAAAAAAYU}{\bkmkend AAAAAAAAYU}
00149 {\cf21 #else}\par
{\bkmkstart AAAAAAAAYV}{\bkmkend AAAAAAAAYV}
00150         {\cf18 char}    temp[1024];\par
{\bkmkstart AAAAAAAAYW}{\bkmkend AAAAAAAAYW}
00151         {\cf18 char}    *c;\par
{\bkmkstart AAAAAAAAYX}{\bkmkend AAAAAAAAYX}
00152 \par
{\bkmkstart AAAAAAAAYY}{\bkmkend AAAAAAAAYY}
00153         {\cf19 if} (!(path[0] == {\cf23 '/'} || path[0] == {\cf23 '\\\\'} || path[1] == {\cf23 ':'}))\par
{\bkmkstart AAAAAAAAYZ}{\bkmkend AAAAAAAAYZ}
00154         \{       {\cf20 // path is partial}\par
{\bkmkstart AAAAAAAAZA}{\bkmkend AAAAAAAAZA}
00155                 Q_getcwd (temp);\par
{\bkmkstart AAAAAAAAZB}{\bkmkend AAAAAAAAZB}
00156                 strcat (temp, path);\par
{\bkmkstart AAAAAAAAZC}{\bkmkend AAAAAAAAZC}
00157                 path = temp;\par
{\bkmkstart AAAAAAAAZD}{\bkmkend AAAAAAAAZD}
00158         \}\par
{\bkmkstart AAAAAAAAZE}{\bkmkend AAAAAAAAZE}
00159 \par
{\bkmkstart AAAAAAAAZF}{\bkmkend AAAAAAAAZF}
00160 {\cf20 // search for "quake" or quiver in path}\par
{\bkmkstart AAAAAAAAZG}{\bkmkend AAAAAAAAZG}
00161         {\cf19 if}( !qproject[0] ) \{\par
{\bkmkstart AAAAAAAAZH}{\bkmkend AAAAAAAAZH}
00162                 {\cf18 char} *pszProj;\par
{\bkmkstart AAAAAAAAZI}{\bkmkend AAAAAAAAZI}
00163 \par
{\bkmkstart AAAAAAAAZJ}{\bkmkend AAAAAAAAZJ}
00164                 pszProj = getenv({\cf22 "QPROJECT"});\par
{\bkmkstart AAAAAAAAZK}{\bkmkend AAAAAAAAZK}
00165 \par
{\bkmkstart AAAAAAAAZL}{\bkmkend AAAAAAAAZL}
00166                 {\cf19 if} (pszProj != NULL)\par
{\bkmkstart AAAAAAAAZM}{\bkmkend AAAAAAAAZM}
00167                         strcpy(qproject, pszProj);\par
{\bkmkstart AAAAAAAAZN}{\bkmkend AAAAAAAAZN}
00168                 {\cf19 else}\par
{\bkmkstart AAAAAAAAZO}{\bkmkend AAAAAAAAZO}
00169                         strcpy(qproject, {\cf22 "quiver"});\par
{\bkmkstart AAAAAAAAZP}{\bkmkend AAAAAAAAZP}
00170         \}\par
{\bkmkstart AAAAAAAAZQ}{\bkmkend AAAAAAAAZQ}
00171 \par
{\bkmkstart AAAAAAAAZR}{\bkmkend AAAAAAAAZR}
00172 try_again:\par
{\bkmkstart AAAAAAAAZS}{\bkmkend AAAAAAAAZS}
00173 \par
{\bkmkstart AAAAAAAAZT}{\bkmkend AAAAAAAAZT}
00174         {\cf19 for} (c=path ; *c ; c++)\par
{\bkmkstart AAAAAAAAZU}{\bkmkend AAAAAAAAZU}
00175         \{\par
{\bkmkstart AAAAAAAAZV}{\bkmkend AAAAAAAAZV}
00176                 {\cf18 int} iSize = 0;\par
{\bkmkstart AAAAAAAAZW}{\bkmkend AAAAAAAAZW}
00177 \par
{\bkmkstart AAAAAAAAZX}{\bkmkend AAAAAAAAZX}
00178                 {\cf19 if} (!Q_strncasecmp( c, qproject, strlen( qproject ) ) )\par
{\bkmkstart AAAAAAAAZY}{\bkmkend AAAAAAAAZY}
00179                         iSize = strlen( qproject ) + 1;\par
{\bkmkstart AAAAAAAAZZ}{\bkmkend AAAAAAAAZZ}
00180 \par
{\bkmkstart AAAAAAABAA}{\bkmkend AAAAAAABAA}
00181                 {\cf19 if} (iSize > 0)\par
{\bkmkstart AAAAAAABAB}{\bkmkend AAAAAAABAB}
00182                 \{\par
{\bkmkstart AAAAAAABAC}{\bkmkend AAAAAAABAC}
00183                         strncpy (qdir, path, c + iSize - path);\par
{\bkmkstart AAAAAAABAD}{\bkmkend AAAAAAABAD}
00184                         printf ({\cf22 "qdir: %s\\n"}, qdir);\par
{\bkmkstart AAAAAAABAE}{\bkmkend AAAAAAABAE}
00185                         c += iSize;\par
{\bkmkstart AAAAAAABAF}{\bkmkend AAAAAAABAF}
00186                         {\cf19 while} (*c)\par
{\bkmkstart AAAAAAABAG}{\bkmkend AAAAAAABAG}
00187                         \{\par
{\bkmkstart AAAAAAABAH}{\bkmkend AAAAAAABAH}
00188                                 {\cf19 if} (*c == {\cf23 '/'} || *c == {\cf23 '\\\\'})\par
{\bkmkstart AAAAAAABAI}{\bkmkend AAAAAAABAI}
00189                                 \{\par
{\bkmkstart AAAAAAABAJ}{\bkmkend AAAAAAABAJ}
00190                                         strncpy (gamedir, path, c+1-path);\par
{\bkmkstart AAAAAAABAK}{\bkmkend AAAAAAABAK}
00191                                         printf ({\cf22 "gamedir: %s\\n"}, gamedir);\par
{\bkmkstart AAAAAAABAL}{\bkmkend AAAAAAABAL}
00192                                         {\cf19 return};\par
{\bkmkstart AAAAAAABAM}{\bkmkend AAAAAAABAM}
00193                                 \}\par
{\bkmkstart AAAAAAABAN}{\bkmkend AAAAAAABAN}
00194                                 c++;\par
{\bkmkstart AAAAAAABAO}{\bkmkend AAAAAAABAO}
00195                         \}\par
{\bkmkstart AAAAAAABAP}{\bkmkend AAAAAAABAP}
00196                         Error ({\cf22 "No gamedir in %s"}, path);\par
{\bkmkstart AAAAAAABAQ}{\bkmkend AAAAAAABAQ}
00197                         {\cf19 return};\par
{\bkmkstart AAAAAAABAR}{\bkmkend AAAAAAABAR}
00198                 \}\par
{\bkmkstart AAAAAAABAS}{\bkmkend AAAAAAABAS}
00199         \}\par
{\bkmkstart AAAAAAABAT}{\bkmkend AAAAAAABAT}
00200 \par
{\bkmkstart AAAAAAABAU}{\bkmkend AAAAAAABAU}
00201         {\cf19 if} (!strcmp(qproject, {\cf22 "quiver"}))\par
{\bkmkstart AAAAAAABAV}{\bkmkend AAAAAAABAV}
00202         \{\par
{\bkmkstart AAAAAAABAW}{\bkmkend AAAAAAABAW}
00203                 strcpy(qproject, {\cf22 "prospero"});\par
{\bkmkstart AAAAAAABAX}{\bkmkend AAAAAAABAX}
00204                 {\cf19 goto} try_again;\par
{\bkmkstart AAAAAAABAY}{\bkmkend AAAAAAABAY}
00205         \}\par
{\bkmkstart AAAAAAABAZ}{\bkmkend AAAAAAABAZ}
00206 \par
{\bkmkstart AAAAAAABBA}{\bkmkend AAAAAAABBA}
00207         Error ({\cf22 "SetQdirFromPath: no '%s' in %s"}, qproject, path);\par
{\bkmkstart AAAAAAABBB}{\bkmkend AAAAAAABBB}
00208 {\cf21 #endif}\par
{\bkmkstart AAAAAAABBC}{\bkmkend AAAAAAABBC}
00209 \}\par
{\bkmkstart AAAAAAABBD}{\bkmkend AAAAAAABBD}
00210 \par
{\bkmkstart AAAAAAABBE}{\bkmkend AAAAAAABBE}
00211 \par
{\bkmkstart AAAAAAABBF}{\bkmkend AAAAAAABBF}
00212 {\cf18 char} *ExpandArg ({\cf18 char} *path)\par
{\bkmkstart AAAAAAABBG}{\bkmkend AAAAAAABBG}
00213 \{\par
{\bkmkstart AAAAAAABBH}{\bkmkend AAAAAAABBH}
00214         {\cf17 static} {\cf18 char} full[1024];\par
{\bkmkstart AAAAAAABBI}{\bkmkend AAAAAAABBI}
00215 \par
{\bkmkstart AAAAAAABBJ}{\bkmkend AAAAAAABBJ}
00216         {\cf19 if} (path[0] != {\cf23 '/'} && path[0] != {\cf23 '\\\\'} && path[1] != {\cf23 ':'})\par
{\bkmkstart AAAAAAABBK}{\bkmkend AAAAAAABBK}
00217         \{\par
{\bkmkstart AAAAAAABBL}{\bkmkend AAAAAAABBL}
00218                 Q_getwd (full);\par
{\bkmkstart AAAAAAABBM}{\bkmkend AAAAAAABBM}
00219                 strcat (full, path);\par
{\bkmkstart AAAAAAABBN}{\bkmkend AAAAAAABBN}
00220         \}\par
{\bkmkstart AAAAAAABBO}{\bkmkend AAAAAAABBO}
00221         {\cf19 else}\par
{\bkmkstart AAAAAAABBP}{\bkmkend AAAAAAABBP}
00222                 strcpy (full, path);\par
{\bkmkstart AAAAAAABBQ}{\bkmkend AAAAAAABBQ}
00223         {\cf19 return} full;\par
{\bkmkstart AAAAAAABBR}{\bkmkend AAAAAAABBR}
00224 \}\par
{\bkmkstart AAAAAAABBS}{\bkmkend AAAAAAABBS}
00225 \par
{\bkmkstart AAAAAAABBT}{\bkmkend AAAAAAABBT}
00226 {\cf18 char} *ExpandPath ({\cf18 char} *path)\par
{\bkmkstart AAAAAAABBU}{\bkmkend AAAAAAABBU}
00227 \{\par
{\bkmkstart AAAAAAABBV}{\bkmkend AAAAAAABBV}
00228         {\cf18 char} *psz;\par
{\bkmkstart AAAAAAABBW}{\bkmkend AAAAAAABBW}
00229         {\cf17 static} {\cf18 char} full[1024];\par
{\bkmkstart AAAAAAABBX}{\bkmkend AAAAAAABBX}
00230         {\cf19 if} (!qdir)\par
{\bkmkstart AAAAAAABBY}{\bkmkend AAAAAAABBY}
00231                 Error ({\cf22 "ExpandPath called without qdir set"});\par
{\bkmkstart AAAAAAABBZ}{\bkmkend AAAAAAABBZ}
00232         {\cf19 if} (path[0] == {\cf23 '/'} || path[0] == {\cf23 '\\\\'} || path[1] == {\cf23 ':'})\par
{\bkmkstart AAAAAAABCA}{\bkmkend AAAAAAABCA}
00233                 {\cf19 return} path;\par
{\bkmkstart AAAAAAABCB}{\bkmkend AAAAAAABCB}
00234         psz = strstr(path, qdir);\par
{\bkmkstart AAAAAAABCC}{\bkmkend AAAAAAABCC}
00235         {\cf19 if} (psz)\par
{\bkmkstart AAAAAAABCD}{\bkmkend AAAAAAABCD}
00236                 strcpy(full, path);\par
{\bkmkstart AAAAAAABCE}{\bkmkend AAAAAAABCE}
00237         {\cf19 else}\par
{\bkmkstart AAAAAAABCF}{\bkmkend AAAAAAABCF}
00238                 sprintf (full, {\cf22 "%s%s"}, qdir, path);\par
{\bkmkstart AAAAAAABCG}{\bkmkend AAAAAAABCG}
00239 \par
{\bkmkstart AAAAAAABCH}{\bkmkend AAAAAAABCH}
00240         {\cf19 return} full;\par
{\bkmkstart AAAAAAABCI}{\bkmkend AAAAAAABCI}
00241 \}\par
{\bkmkstart AAAAAAABCJ}{\bkmkend AAAAAAABCJ}
00242 \par
{\bkmkstart AAAAAAABCK}{\bkmkend AAAAAAABCK}
00243 {\cf18 char} *ExpandPathAndArchive ({\cf18 char} *path)\par
{\bkmkstart AAAAAAABCL}{\bkmkend AAAAAAABCL}
00244 \{\par
{\bkmkstart AAAAAAABCM}{\bkmkend AAAAAAABCM}
00245         {\cf18 char}    *expanded;\par
{\bkmkstart AAAAAAABCN}{\bkmkend AAAAAAABCN}
00246         {\cf18 char}    archivename[1024];\par
{\bkmkstart AAAAAAABCO}{\bkmkend AAAAAAABCO}
00247 \par
{\bkmkstart AAAAAAABCP}{\bkmkend AAAAAAABCP}
00248         expanded = ExpandPath (path);\par
{\bkmkstart AAAAAAABCQ}{\bkmkend AAAAAAABCQ}
00249 \par
{\bkmkstart AAAAAAABCR}{\bkmkend AAAAAAABCR}
00250         {\cf19 if} (archive)\par
{\bkmkstart AAAAAAABCS}{\bkmkend AAAAAAABCS}
00251         \{\par
{\bkmkstart AAAAAAABCT}{\bkmkend AAAAAAABCT}
00252                 sprintf (archivename, {\cf22 "%s/%s"}, archivedir, path);\par
{\bkmkstart AAAAAAABCU}{\bkmkend AAAAAAABCU}
00253                 QCopyFile (expanded, archivename);\par
{\bkmkstart AAAAAAABCV}{\bkmkend AAAAAAABCV}
00254         \}\par
{\bkmkstart AAAAAAABCW}{\bkmkend AAAAAAABCW}
00255         {\cf19 return} expanded;\par
{\bkmkstart AAAAAAABCX}{\bkmkend AAAAAAABCX}
00256 \}\par
{\bkmkstart AAAAAAABCY}{\bkmkend AAAAAAABCY}
00257 \par
{\bkmkstart AAAAAAABCZ}{\bkmkend AAAAAAABCZ}
00258 \par
{\bkmkstart AAAAAAABDA}{\bkmkend AAAAAAABDA}
00259 {\cf18 char} *copystring({\cf18 char} *s)\par
{\bkmkstart AAAAAAABDB}{\bkmkend AAAAAAABDB}
00260 \{\par
{\bkmkstart AAAAAAABDC}{\bkmkend AAAAAAABDC}
00261         {\cf18 char}    *b;\par
{\bkmkstart AAAAAAABDD}{\bkmkend AAAAAAABDD}
00262         b = malloc(strlen(s)+1);\par
{\bkmkstart AAAAAAABDE}{\bkmkend AAAAAAABDE}
00263         strcpy (b, s);\par
{\bkmkstart AAAAAAABDF}{\bkmkend AAAAAAABDF}
00264         {\cf19 return} b;\par
{\bkmkstart AAAAAAABDG}{\bkmkend AAAAAAABDG}
00265 \}\par
{\bkmkstart AAAAAAABDH}{\bkmkend AAAAAAABDH}
00266 \par
{\bkmkstart AAAAAAABDI}{\bkmkend AAAAAAABDI}
00267 \par
{\bkmkstart AAAAAAABDJ}{\bkmkend AAAAAAABDJ}
00268 \par
{\bkmkstart AAAAAAABDK}{\bkmkend AAAAAAABDK}
00269 {\cf20 /*}\par
{\bkmkstart AAAAAAABDL}{\bkmkend AAAAAAABDL}
00270 {\cf20 ================}\par
{\bkmkstart AAAAAAABDM}{\bkmkend AAAAAAABDM}
00271 {\cf20 I_FloatTime}\par
{\bkmkstart AAAAAAABDN}{\bkmkend AAAAAAABDN}
00272 {\cf20 ================}\par
{\bkmkstart AAAAAAABDO}{\bkmkend AAAAAAABDO}
00273 {\cf20 */}\par
{\bkmkstart AAAAAAABDP}{\bkmkend AAAAAAABDP}
00274 {\cf18 double} I_FloatTime ({\cf18 void})\par
{\bkmkstart AAAAAAABDQ}{\bkmkend AAAAAAABDQ}
00275 \{\par
{\bkmkstart AAAAAAABDR}{\bkmkend AAAAAAABDR}
00276         time_t  t;\par
{\bkmkstart AAAAAAABDS}{\bkmkend AAAAAAABDS}
00277 \par
{\bkmkstart AAAAAAABDT}{\bkmkend AAAAAAABDT}
00278         time (&t);\par
{\bkmkstart AAAAAAABDU}{\bkmkend AAAAAAABDU}
00279 \par
{\bkmkstart AAAAAAABDV}{\bkmkend AAAAAAABDV}
00280         {\cf19 return} t;\par
{\bkmkstart AAAAAAABDW}{\bkmkend AAAAAAABDW}
00281 {\cf21 #if 0}\par
{\bkmkstart AAAAAAABDX}{\bkmkend AAAAAAABDX}
00282 {\cf20 // more precise, less portable}\par
{\bkmkstart AAAAAAABDY}{\bkmkend AAAAAAABDY}
00283         {\cf17 struct }timeval tp;\par
{\bkmkstart AAAAAAABDZ}{\bkmkend AAAAAAABDZ}
00284         {\cf17 struct }timezone tzp;\par
{\bkmkstart AAAAAAABEA}{\bkmkend AAAAAAABEA}
00285         {\cf17 static} {\cf18 int}              secbase;\par
{\bkmkstart AAAAAAABEB}{\bkmkend AAAAAAABEB}
00286 \par
{\bkmkstart AAAAAAABEC}{\bkmkend AAAAAAABEC}
00287         gettimeofday(&tp, &tzp);\par
{\bkmkstart AAAAAAABED}{\bkmkend AAAAAAABED}
00288 \par
{\bkmkstart AAAAAAABEE}{\bkmkend AAAAAAABEE}
00289         {\cf19 if} (!secbase)\par
{\bkmkstart AAAAAAABEF}{\bkmkend AAAAAAABEF}
00290         \{\par
{\bkmkstart AAAAAAABEG}{\bkmkend AAAAAAABEG}
00291                 secbase = tp.tv_sec;\par
{\bkmkstart AAAAAAABEH}{\bkmkend AAAAAAABEH}
00292                 {\cf19 return} tp.tv_usec/1000000.0;\par
{\bkmkstart AAAAAAABEI}{\bkmkend AAAAAAABEI}
00293         \}\par
{\bkmkstart AAAAAAABEJ}{\bkmkend AAAAAAABEJ}
00294 \par
{\bkmkstart AAAAAAABEK}{\bkmkend AAAAAAABEK}
00295         {\cf19 return} (tp.tv_sec - secbase) + tp.tv_usec/1000000.0;\par
{\bkmkstart AAAAAAABEL}{\bkmkend AAAAAAABEL}
00296 {\cf21 #endif}\par
{\bkmkstart AAAAAAABEM}{\bkmkend AAAAAAABEM}
00297 \}\par
{\bkmkstart AAAAAAABEN}{\bkmkend AAAAAAABEN}
00298 \par
{\bkmkstart AAAAAAABEO}{\bkmkend AAAAAAABEO}
00299 {\cf18 void} Q_getwd ({\cf18 char} *out)\par
{\bkmkstart AAAAAAABEP}{\bkmkend AAAAAAABEP}
00300 \{\par
{\bkmkstart AAAAAAABEQ}{\bkmkend AAAAAAABEQ}
00301 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAABER}{\bkmkend AAAAAAABER}
00302    _getcwd (out, 256);\par
{\bkmkstart AAAAAAABES}{\bkmkend AAAAAAABES}
00303    strcat (out, {\cf22 "\\\\"});\par
{\bkmkstart AAAAAAABET}{\bkmkend AAAAAAABET}
00304 {\cf21 #else}\par
{\bkmkstart AAAAAAABEU}{\bkmkend AAAAAAABEU}
00305    getcwd (out);\par
{\bkmkstart AAAAAAABEV}{\bkmkend AAAAAAABEV}
00306 {\cf21 #endif}\par
{\bkmkstart AAAAAAABEW}{\bkmkend AAAAAAABEW}
00307 \}\par
{\bkmkstart AAAAAAABEX}{\bkmkend AAAAAAABEX}
00308 \par
{\bkmkstart AAAAAAABEY}{\bkmkend AAAAAAABEY}
00309 \par
{\bkmkstart AAAAAAABEZ}{\bkmkend AAAAAAABEZ}
00310 {\cf18 void} Q_mkdir ({\cf18 char} *path)\par
{\bkmkstart AAAAAAABFA}{\bkmkend AAAAAAABFA}
00311 \{\par
{\bkmkstart AAAAAAABFB}{\bkmkend AAAAAAABFB}
00312 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAABFC}{\bkmkend AAAAAAABFC}
00313         {\cf19 if} (_mkdir (path) != -1)\par
{\bkmkstart AAAAAAABFD}{\bkmkend AAAAAAABFD}
00314                 {\cf19 return};\par
{\bkmkstart AAAAAAABFE}{\bkmkend AAAAAAABFE}
00315 {\cf21 #else}\par
{\bkmkstart AAAAAAABFF}{\bkmkend AAAAAAABFF}
00316         {\cf19 if} (mkdir (path, 0777) != -1)\par
{\bkmkstart AAAAAAABFG}{\bkmkend AAAAAAABFG}
00317                 {\cf19 return};\par
{\bkmkstart AAAAAAABFH}{\bkmkend AAAAAAABFH}
00318 {\cf21 #endif}\par
{\bkmkstart AAAAAAABFI}{\bkmkend AAAAAAABFI}
00319         {\cf19 if} (errno != EEXIST)\par
{\bkmkstart AAAAAAABFJ}{\bkmkend AAAAAAABFJ}
00320                 Error ({\cf22 "mkdir %s: %s"},path, strerror(errno));\par
{\bkmkstart AAAAAAABFK}{\bkmkend AAAAAAABFK}
00321 \}\par
{\bkmkstart AAAAAAABFL}{\bkmkend AAAAAAABFL}
00322 \par
{\bkmkstart AAAAAAABFM}{\bkmkend AAAAAAABFM}
00323 {\cf20 /*}\par
{\bkmkstart AAAAAAABFN}{\bkmkend AAAAAAABFN}
00324 {\cf20 ============}\par
{\bkmkstart AAAAAAABFO}{\bkmkend AAAAAAABFO}
00325 {\cf20 FileTime}\par
{\bkmkstart AAAAAAABFP}{\bkmkend AAAAAAABFP}
00326 {\cf20 }\par
{\bkmkstart AAAAAAABFQ}{\bkmkend AAAAAAABFQ}
00327 {\cf20 returns -1 if not present}\par
{\bkmkstart AAAAAAABFR}{\bkmkend AAAAAAABFR}
00328 {\cf20 ============}\par
{\bkmkstart AAAAAAABFS}{\bkmkend AAAAAAABFS}
00329 {\cf20 */}\par
{\bkmkstart AAAAAAABFT}{\bkmkend AAAAAAABFT}
00330 {\cf18 int}     FileTime ({\cf18 char} *path)\par
{\bkmkstart AAAAAAABFU}{\bkmkend AAAAAAABFU}
00331 \{\par
{\bkmkstart AAAAAAABFV}{\bkmkend AAAAAAABFV}
00332         {\cf17 struct  }stat    buf;\par
{\bkmkstart AAAAAAABFW}{\bkmkend AAAAAAABFW}
00333 \par
{\bkmkstart AAAAAAABFX}{\bkmkend AAAAAAABFX}
00334         {\cf19 if} (stat (path,&buf) == -1)\par
{\bkmkstart AAAAAAABFY}{\bkmkend AAAAAAABFY}
00335                 {\cf19 return} -1;\par
{\bkmkstart AAAAAAABFZ}{\bkmkend AAAAAAABFZ}
00336 \par
{\bkmkstart AAAAAAABGA}{\bkmkend AAAAAAABGA}
00337         {\cf19 return} buf.st_mtime;\par
{\bkmkstart AAAAAAABGB}{\bkmkend AAAAAAABGB}
00338 \}\par
{\bkmkstart AAAAAAABGC}{\bkmkend AAAAAAABGC}
00339 \par
{\bkmkstart AAAAAAABGD}{\bkmkend AAAAAAABGD}
00340 \par
{\bkmkstart AAAAAAABGE}{\bkmkend AAAAAAABGE}
00341 \par
{\bkmkstart AAAAAAABGF}{\bkmkend AAAAAAABGF}
00342 {\cf20 /*}\par
{\bkmkstart AAAAAAABGG}{\bkmkend AAAAAAABGG}
00343 {\cf20 ==============}\par
{\bkmkstart AAAAAAABGH}{\bkmkend AAAAAAABGH}
00344 {\cf20 COM_Parse}\par
{\bkmkstart AAAAAAABGI}{\bkmkend AAAAAAABGI}
00345 {\cf20 }\par
{\bkmkstart AAAAAAABGJ}{\bkmkend AAAAAAABGJ}
00346 {\cf20   Parse a token out of a string (into global: char com_token[1024])}\par
{\bkmkstart AAAAAAABGK}{\bkmkend AAAAAAABGK}
00347 {\cf20 ==============}\par
{\bkmkstart AAAAAAABGL}{\bkmkend AAAAAAABGL}
00348 {\cf20 */}\par
{\bkmkstart AAAAAAABGM}{\bkmkend AAAAAAABGM}
00349 {\cf18 char} *COM_Parse ({\cf18 char} *data)\par
{\bkmkstart AAAAAAABGN}{\bkmkend AAAAAAABGN}
00350 \{\par
{\bkmkstart AAAAAAABGO}{\bkmkend AAAAAAABGO}
00351         {\cf18 int}             c;\par
{\bkmkstart AAAAAAABGP}{\bkmkend AAAAAAABGP}
00352         {\cf18 int}             len;\par
{\bkmkstart AAAAAAABGQ}{\bkmkend AAAAAAABGQ}
00353 \par
{\bkmkstart AAAAAAABGR}{\bkmkend AAAAAAABGR}
00354         len = 0;\par
{\bkmkstart AAAAAAABGS}{\bkmkend AAAAAAABGS}
00355         com_token[0] = 0;\par
{\bkmkstart AAAAAAABGT}{\bkmkend AAAAAAABGT}
00356 \par
{\bkmkstart AAAAAAABGU}{\bkmkend AAAAAAABGU}
00357         {\cf19 if} (!data)\par
{\bkmkstart AAAAAAABGV}{\bkmkend AAAAAAABGV}
00358                 {\cf19 return} NULL;\par
{\bkmkstart AAAAAAABGW}{\bkmkend AAAAAAABGW}
00359 \par
{\bkmkstart AAAAAAABGX}{\bkmkend AAAAAAABGX}
00360 {\cf20 /* skip whitespace */}\par
{\bkmkstart AAAAAAABGY}{\bkmkend AAAAAAABGY}
00361 skipwhite:\par
{\bkmkstart AAAAAAABGZ}{\bkmkend AAAAAAABGZ}
00362         {\cf19 while} ( (c = *data) <= {\cf23 ' '})\par
{\bkmkstart AAAAAAABHA}{\bkmkend AAAAAAABHA}
00363         \{\par
{\bkmkstart AAAAAAABHB}{\bkmkend AAAAAAABHB}
00364                 {\cf19 if} (c == 0)\par
{\bkmkstart AAAAAAABHC}{\bkmkend AAAAAAABHC}
00365                 \{\par
{\bkmkstart AAAAAAABHD}{\bkmkend AAAAAAABHD}
00366                         com_eof = {\cf17 true};\par
{\bkmkstart AAAAAAABHE}{\bkmkend AAAAAAABHE}
00367                         {\cf19 return} NULL;                    {\cf20 /* end of file; */}\par
{\bkmkstart AAAAAAABHF}{\bkmkend AAAAAAABHF}
00368                 \}\par
{\bkmkstart AAAAAAABHG}{\bkmkend AAAAAAABHG}
00369                 data++;\par
{\bkmkstart AAAAAAABHH}{\bkmkend AAAAAAABHH}
00370         \}\par
{\bkmkstart AAAAAAABHI}{\bkmkend AAAAAAABHI}
00371 \par
{\bkmkstart AAAAAAABHJ}{\bkmkend AAAAAAABHJ}
00372 {\cf20 /* skip // comments */}\par
{\bkmkstart AAAAAAABHK}{\bkmkend AAAAAAABHK}
00373         {\cf19 if} (c=={\cf23 '/'} && data[1] == {\cf23 '/'})\par
{\bkmkstart AAAAAAABHL}{\bkmkend AAAAAAABHL}
00374         \{\par
{\bkmkstart AAAAAAABHM}{\bkmkend AAAAAAABHM}
00375                 {\cf19 while} (*data && *data != {\cf23 '\\n'})\par
{\bkmkstart AAAAAAABHN}{\bkmkend AAAAAAABHN}
00376                         data++;\par
{\bkmkstart AAAAAAABHO}{\bkmkend AAAAAAABHO}
00377                 {\cf19 goto} skipwhite;\par
{\bkmkstart AAAAAAABHP}{\bkmkend AAAAAAABHP}
00378         \}\par
{\bkmkstart AAAAAAABHQ}{\bkmkend AAAAAAABHQ}
00379 \par
{\bkmkstart AAAAAAABHR}{\bkmkend AAAAAAABHR}
00380 \par
{\bkmkstart AAAAAAABHS}{\bkmkend AAAAAAABHS}
00381 {\cf20 /* handle quoted strings specially */}\par
{\bkmkstart AAAAAAABHT}{\bkmkend AAAAAAABHT}
00382         {\cf19 if} (c == {\cf23 '\\"'})\par
{\bkmkstart AAAAAAABHU}{\bkmkend AAAAAAABHU}
00383         \{\par
{\bkmkstart AAAAAAABHV}{\bkmkend AAAAAAABHV}
00384                 data++;\par
{\bkmkstart AAAAAAABHW}{\bkmkend AAAAAAABHW}
00385                 {\cf19 do}\par
{\bkmkstart AAAAAAABHX}{\bkmkend AAAAAAABHX}
00386                 \{\par
{\bkmkstart AAAAAAABHY}{\bkmkend AAAAAAABHY}
00387                         c = *data++;\par
{\bkmkstart AAAAAAABHZ}{\bkmkend AAAAAAABHZ}
00388                         {\cf19 if} (c=={\cf23 '\\"'})\par
{\bkmkstart AAAAAAABIA}{\bkmkend AAAAAAABIA}
00389                         \{\par
{\bkmkstart AAAAAAABIB}{\bkmkend AAAAAAABIB}
00390                                 com_token[len] = 0;\par
{\bkmkstart AAAAAAABIC}{\bkmkend AAAAAAABIC}
00391                                 {\cf19 return} data;\par
{\bkmkstart AAAAAAABID}{\bkmkend AAAAAAABID}
00392                         \}\par
{\bkmkstart AAAAAAABIE}{\bkmkend AAAAAAABIE}
00393                         com_token[len] = c;\par
{\bkmkstart AAAAAAABIF}{\bkmkend AAAAAAABIF}
00394                         len++;\par
{\bkmkstart AAAAAAABIG}{\bkmkend AAAAAAABIG}
00395                 \} {\cf19 while} (1);\par
{\bkmkstart AAAAAAABIH}{\bkmkend AAAAAAABIH}
00396         \}\par
{\bkmkstart AAAAAAABII}{\bkmkend AAAAAAABII}
00397 \par
{\bkmkstart AAAAAAABIJ}{\bkmkend AAAAAAABIJ}
00398 {\cf20 /* parse single characters */}\par
{\bkmkstart AAAAAAABIK}{\bkmkend AAAAAAABIK}
00399         {\cf19 if} (c=={\cf23 '\{'} || c=={\cf23 '\}'}|| c=={\cf23 ')'}|| c=={\cf23 '('} || c=={\cf23 '\\''} || c=={\cf23 ':'})\par
{\bkmkstart AAAAAAABIL}{\bkmkend AAAAAAABIL}
00400         \{\par
{\bkmkstart AAAAAAABIM}{\bkmkend AAAAAAABIM}
00401                 com_token[len] = c;\par
{\bkmkstart AAAAAAABIN}{\bkmkend AAAAAAABIN}
00402                 len++;\par
{\bkmkstart AAAAAAABIO}{\bkmkend AAAAAAABIO}
00403                 com_token[len] = 0;\par
{\bkmkstart AAAAAAABIP}{\bkmkend AAAAAAABIP}
00404                 {\cf19 return} data+1;\par
{\bkmkstart AAAAAAABIQ}{\bkmkend AAAAAAABIQ}
00405         \}\par
{\bkmkstart AAAAAAABIR}{\bkmkend AAAAAAABIR}
00406 \par
{\bkmkstart AAAAAAABIS}{\bkmkend AAAAAAABIS}
00407 {\cf20 /* parse a regular word */}\par
{\bkmkstart AAAAAAABIT}{\bkmkend AAAAAAABIT}
00408         {\cf19 do}\par
{\bkmkstart AAAAAAABIU}{\bkmkend AAAAAAABIU}
00409         \{\par
{\bkmkstart AAAAAAABIV}{\bkmkend AAAAAAABIV}
00410                 com_token[len] = c;\par
{\bkmkstart AAAAAAABIW}{\bkmkend AAAAAAABIW}
00411                 data++;\par
{\bkmkstart AAAAAAABIX}{\bkmkend AAAAAAABIX}
00412                 len++;\par
{\bkmkstart AAAAAAABIY}{\bkmkend AAAAAAABIY}
00413                 c = *data;\par
{\bkmkstart AAAAAAABIZ}{\bkmkend AAAAAAABIZ}
00414         {\cf19 if} (c=={\cf23 '\{'} || c=={\cf23 '\}'}|| c=={\cf23 ')'}|| c=={\cf23 '('} || c=={\cf23 '\\''} || c=={\cf23 ':'})\par
{\bkmkstart AAAAAAABJA}{\bkmkend AAAAAAABJA}
00415                         {\cf19 break};\par
{\bkmkstart AAAAAAABJB}{\bkmkend AAAAAAABJB}
00416         \} {\cf19 while} (c>32);\par
{\bkmkstart AAAAAAABJC}{\bkmkend AAAAAAABJC}
00417 \par
{\bkmkstart AAAAAAABJD}{\bkmkend AAAAAAABJD}
00418         com_token[len] = 0;\par
{\bkmkstart AAAAAAABJE}{\bkmkend AAAAAAABJE}
00419         {\cf19 return} data;\par
{\bkmkstart AAAAAAABJF}{\bkmkend AAAAAAABJF}
00420 \}\par
{\bkmkstart AAAAAAABJG}{\bkmkend AAAAAAABJG}
00421 \par
{\bkmkstart AAAAAAABJH}{\bkmkend AAAAAAABJH}
00422 \par
{\bkmkstart AAAAAAABJI}{\bkmkend AAAAAAABJI}
00423 {\cf18 int} Q_strncasecmp ({\cf18 char} *s1, {\cf18 char} *s2, {\cf18 int} n)\par
{\bkmkstart AAAAAAABJJ}{\bkmkend AAAAAAABJJ}
00424 \{\par
{\bkmkstart AAAAAAABJK}{\bkmkend AAAAAAABJK}
00425         {\cf18 int}             c1, c2;\par
{\bkmkstart AAAAAAABJL}{\bkmkend AAAAAAABJL}
00426 \par
{\bkmkstart AAAAAAABJM}{\bkmkend AAAAAAABJM}
00427         {\cf19 while} (1)\par
{\bkmkstart AAAAAAABJN}{\bkmkend AAAAAAABJN}
00428         \{\par
{\bkmkstart AAAAAAABJO}{\bkmkend AAAAAAABJO}
00429                 c1 = *s1++;\par
{\bkmkstart AAAAAAABJP}{\bkmkend AAAAAAABJP}
00430                 c2 = *s2++;\par
{\bkmkstart AAAAAAABJQ}{\bkmkend AAAAAAABJQ}
00431 \par
{\bkmkstart AAAAAAABJR}{\bkmkend AAAAAAABJR}
00432                 {\cf19 if} (!n--)\par
{\bkmkstart AAAAAAABJS}{\bkmkend AAAAAAABJS}
00433                         {\cf19 return} 0;               {\cf20 /* strings are equal until end point */}\par
{\bkmkstart AAAAAAABJT}{\bkmkend AAAAAAABJT}
00434 \par
{\bkmkstart AAAAAAABJU}{\bkmkend AAAAAAABJU}
00435                 {\cf19 if} (c1 != c2)\par
{\bkmkstart AAAAAAABJV}{\bkmkend AAAAAAABJV}
00436                 \{\par
{\bkmkstart AAAAAAABJW}{\bkmkend AAAAAAABJW}
00437                         {\cf19 if} (c1 >= {\cf23 'a'} && c1 <= {\cf23 'z'})\par
{\bkmkstart AAAAAAABJX}{\bkmkend AAAAAAABJX}
00438                                 c1 -= ({\cf23 'a'} - {\cf23 'A'});\par
{\bkmkstart AAAAAAABJY}{\bkmkend AAAAAAABJY}
00439                         {\cf19 if} (c2 >= {\cf23 'a'} && c2 <= {\cf23 'z'})\par
{\bkmkstart AAAAAAABJZ}{\bkmkend AAAAAAABJZ}
00440                                 c2 -= ({\cf23 'a'} - {\cf23 'A'});\par
{\bkmkstart AAAAAAABKA}{\bkmkend AAAAAAABKA}
00441                         {\cf19 if} (c1 != c2)\par
{\bkmkstart AAAAAAABKB}{\bkmkend AAAAAAABKB}
00442                                 {\cf19 return} -1;              {\cf20 /* strings not equal */}\par
{\bkmkstart AAAAAAABKC}{\bkmkend AAAAAAABKC}
00443                 \}\par
{\bkmkstart AAAAAAABKD}{\bkmkend AAAAAAABKD}
00444                 {\cf19 if} (!c1)\par
{\bkmkstart AAAAAAABKE}{\bkmkend AAAAAAABKE}
00445                         {\cf19 return} 0;               {\cf20 /* strings are equal */}\par
{\bkmkstart AAAAAAABKF}{\bkmkend AAAAAAABKF}
00446         \}\par
{\bkmkstart AAAAAAABKG}{\bkmkend AAAAAAABKG}
00447 \par
{\bkmkstart AAAAAAABKH}{\bkmkend AAAAAAABKH}
00448         {\cf19 return} -1;\par
{\bkmkstart AAAAAAABKI}{\bkmkend AAAAAAABKI}
00449 \}\par
{\bkmkstart AAAAAAABKJ}{\bkmkend AAAAAAABKJ}
00450 \par
{\bkmkstart AAAAAAABKK}{\bkmkend AAAAAAABKK}
00451 {\cf18 int} Q_strcasecmp ({\cf18 char} *s1, {\cf18 char} *s2)\par
{\bkmkstart AAAAAAABKL}{\bkmkend AAAAAAABKL}
00452 \{\par
{\bkmkstart AAAAAAABKM}{\bkmkend AAAAAAABKM}
00453         {\cf19 return} Q_strncasecmp (s1, s2, 99999);\par
{\bkmkstart AAAAAAABKN}{\bkmkend AAAAAAABKN}
00454 \}\par
{\bkmkstart AAAAAAABKO}{\bkmkend AAAAAAABKO}
00455 \par
{\bkmkstart AAAAAAABKP}{\bkmkend AAAAAAABKP}
00456 \par
{\bkmkstart AAAAAAABKQ}{\bkmkend AAAAAAABKQ}
00457 {\cf18 char} *strupr ({\cf18 char} *start)\par
{\bkmkstart AAAAAAABKR}{\bkmkend AAAAAAABKR}
00458 \{\par
{\bkmkstart AAAAAAABKS}{\bkmkend AAAAAAABKS}
00459         {\cf18 char}    *in;\par
{\bkmkstart AAAAAAABKT}{\bkmkend AAAAAAABKT}
00460         in = start;\par
{\bkmkstart AAAAAAABKU}{\bkmkend AAAAAAABKU}
00461         {\cf19 while} (*in)\par
{\bkmkstart AAAAAAABKV}{\bkmkend AAAAAAABKV}
00462         \{\par
{\bkmkstart AAAAAAABKW}{\bkmkend AAAAAAABKW}
00463                 *in = toupper(*in);\par
{\bkmkstart AAAAAAABKX}{\bkmkend AAAAAAABKX}
00464                 in++;\par
{\bkmkstart AAAAAAABKY}{\bkmkend AAAAAAABKY}
00465         \}\par
{\bkmkstart AAAAAAABKZ}{\bkmkend AAAAAAABKZ}
00466         {\cf19 return} start;\par
{\bkmkstart AAAAAAABLA}{\bkmkend AAAAAAABLA}
00467 \}\par
{\bkmkstart AAAAAAABLB}{\bkmkend AAAAAAABLB}
00468 \par
{\bkmkstart AAAAAAABLC}{\bkmkend AAAAAAABLC}
00469 {\cf18 char} *strlower ({\cf18 char} *start)\par
{\bkmkstart AAAAAAABLD}{\bkmkend AAAAAAABLD}
00470 \{\par
{\bkmkstart AAAAAAABLE}{\bkmkend AAAAAAABLE}
00471         {\cf18 char}    *in;\par
{\bkmkstart AAAAAAABLF}{\bkmkend AAAAAAABLF}
00472         in = start;\par
{\bkmkstart AAAAAAABLG}{\bkmkend AAAAAAABLG}
00473         {\cf19 while} (*in)\par
{\bkmkstart AAAAAAABLH}{\bkmkend AAAAAAABLH}
00474         \{\par
{\bkmkstart AAAAAAABLI}{\bkmkend AAAAAAABLI}
00475                 *in = tolower(*in);\par
{\bkmkstart AAAAAAABLJ}{\bkmkend AAAAAAABLJ}
00476                 in++;\par
{\bkmkstart AAAAAAABLK}{\bkmkend AAAAAAABLK}
00477         \}\par
{\bkmkstart AAAAAAABLL}{\bkmkend AAAAAAABLL}
00478         {\cf19 return} start;\par
{\bkmkstart AAAAAAABLM}{\bkmkend AAAAAAABLM}
00479 \}\par
{\bkmkstart AAAAAAABLN}{\bkmkend AAAAAAABLN}
00480 \par
{\bkmkstart AAAAAAABLO}{\bkmkend AAAAAAABLO}
00481 \par
{\bkmkstart AAAAAAABLP}{\bkmkend AAAAAAABLP}
00482 {\cf20 /*}\par
{\bkmkstart AAAAAAABLQ}{\bkmkend AAAAAAABLQ}
00483 {\cf20 =============================================================================}\par
{\bkmkstart AAAAAAABLR}{\bkmkend AAAAAAABLR}
00484 {\cf20 }\par
{\bkmkstart AAAAAAABLS}{\bkmkend AAAAAAABLS}
00485 {\cf20                                                 MISC FUNCTIONS}\par
{\bkmkstart AAAAAAABLT}{\bkmkend AAAAAAABLT}
00486 {\cf20 }\par
{\bkmkstart AAAAAAABLU}{\bkmkend AAAAAAABLU}
00487 {\cf20 =============================================================================}\par
{\bkmkstart AAAAAAABLV}{\bkmkend AAAAAAABLV}
00488 {\cf20 */}\par
{\bkmkstart AAAAAAABLW}{\bkmkend AAAAAAABLW}
00489 \par
{\bkmkstart AAAAAAABLX}{\bkmkend AAAAAAABLX}
00490 \par
{\bkmkstart AAAAAAABLY}{\bkmkend AAAAAAABLY}
00491 {\cf20 /*}\par
{\bkmkstart AAAAAAABLZ}{\bkmkend AAAAAAABLZ}
00492 {\cf20 =================}\par
{\bkmkstart AAAAAAABMA}{\bkmkend AAAAAAABMA}
00493 {\cf20 CheckParm}\par
{\bkmkstart AAAAAAABMB}{\bkmkend AAAAAAABMB}
00494 {\cf20 }\par
{\bkmkstart AAAAAAABMC}{\bkmkend AAAAAAABMC}
00495 {\cf20 Checks for the given parameter in the program's command line arguments}\par
{\bkmkstart AAAAAAABMD}{\bkmkend AAAAAAABMD}
00496 {\cf20 Returns the argument number (1 to argc-1) or 0 if not present}\par
{\bkmkstart AAAAAAABME}{\bkmkend AAAAAAABME}
00497 {\cf20 =================}\par
{\bkmkstart AAAAAAABMF}{\bkmkend AAAAAAABMF}
00498 {\cf20 */}\par
{\bkmkstart AAAAAAABMG}{\bkmkend AAAAAAABMG}
00499 {\cf18 int} CheckParm ({\cf18 char} *check)\par
{\bkmkstart AAAAAAABMH}{\bkmkend AAAAAAABMH}
00500 \{\par
{\bkmkstart AAAAAAABMI}{\bkmkend AAAAAAABMI}
00501         {\cf18 int}             i;\par
{\bkmkstart AAAAAAABMJ}{\bkmkend AAAAAAABMJ}
00502 \par
{\bkmkstart AAAAAAABMK}{\bkmkend AAAAAAABMK}
00503         {\cf19 for} (i = 1;i<myargc;i++)\par
{\bkmkstart AAAAAAABML}{\bkmkend AAAAAAABML}
00504         \{\par
{\bkmkstart AAAAAAABMM}{\bkmkend AAAAAAABMM}
00505                 {\cf19 if} ( !Q_strcasecmp(check, myargv[i]) )\par
{\bkmkstart AAAAAAABMN}{\bkmkend AAAAAAABMN}
00506                         {\cf19 return} i;\par
{\bkmkstart AAAAAAABMO}{\bkmkend AAAAAAABMO}
00507         \}\par
{\bkmkstart AAAAAAABMP}{\bkmkend AAAAAAABMP}
00508 \par
{\bkmkstart AAAAAAABMQ}{\bkmkend AAAAAAABMQ}
00509         {\cf19 return} 0;\par
{\bkmkstart AAAAAAABMR}{\bkmkend AAAAAAABMR}
00510 \}\par
{\bkmkstart AAAAAAABMS}{\bkmkend AAAAAAABMS}
00511 \par
{\bkmkstart AAAAAAABMT}{\bkmkend AAAAAAABMT}
00512 \par
{\bkmkstart AAAAAAABMU}{\bkmkend AAAAAAABMU}
00513 \par
{\bkmkstart AAAAAAABMV}{\bkmkend AAAAAAABMV}
00514 {\cf20 /*}\par
{\bkmkstart AAAAAAABMW}{\bkmkend AAAAAAABMW}
00515 {\cf20 ================}\par
{\bkmkstart AAAAAAABMX}{\bkmkend AAAAAAABMX}
00516 {\cf20 Q_filelength}\par
{\bkmkstart AAAAAAABMY}{\bkmkend AAAAAAABMY}
00517 {\cf20 ================}\par
{\bkmkstart AAAAAAABMZ}{\bkmkend AAAAAAABMZ}
00518 {\cf20 */}\par
{\bkmkstart AAAAAAABNA}{\bkmkend AAAAAAABNA}
00519 {\cf18 int} Q_filelength (FILE *f)\par
{\bkmkstart AAAAAAABNB}{\bkmkend AAAAAAABNB}
00520 \{\par
{\bkmkstart AAAAAAABNC}{\bkmkend AAAAAAABNC}
00521         {\cf18 int}             pos;\par
{\bkmkstart AAAAAAABND}{\bkmkend AAAAAAABND}
00522         {\cf18 int}             end;\par
{\bkmkstart AAAAAAABNE}{\bkmkend AAAAAAABNE}
00523 \par
{\bkmkstart AAAAAAABNF}{\bkmkend AAAAAAABNF}
00524         pos = ftell (f);\par
{\bkmkstart AAAAAAABNG}{\bkmkend AAAAAAABNG}
00525         fseek (f, 0, SEEK_END);\par
{\bkmkstart AAAAAAABNH}{\bkmkend AAAAAAABNH}
00526         end = ftell (f);\par
{\bkmkstart AAAAAAABNI}{\bkmkend AAAAAAABNI}
00527         fseek (f, pos, SEEK_SET);\par
{\bkmkstart AAAAAAABNJ}{\bkmkend AAAAAAABNJ}
00528 \par
{\bkmkstart AAAAAAABNK}{\bkmkend AAAAAAABNK}
00529         {\cf19 return} end;\par
{\bkmkstart AAAAAAABNL}{\bkmkend AAAAAAABNL}
00530 \}\par
{\bkmkstart AAAAAAABNM}{\bkmkend AAAAAAABNM}
00531 \par
{\bkmkstart AAAAAAABNN}{\bkmkend AAAAAAABNN}
00532 \par
{\bkmkstart AAAAAAABNO}{\bkmkend AAAAAAABNO}
00533 FILE *SafeOpenWrite ({\cf18 char} *filename)\par
{\bkmkstart AAAAAAABNP}{\bkmkend AAAAAAABNP}
00534 \{\par
{\bkmkstart AAAAAAABNQ}{\bkmkend AAAAAAABNQ}
00535         FILE    *f;\par
{\bkmkstart AAAAAAABNR}{\bkmkend AAAAAAABNR}
00536 \par
{\bkmkstart AAAAAAABNS}{\bkmkend AAAAAAABNS}
00537         f = fopen(filename, {\cf22 "wb"});\par
{\bkmkstart AAAAAAABNT}{\bkmkend AAAAAAABNT}
00538 \par
{\bkmkstart AAAAAAABNU}{\bkmkend AAAAAAABNU}
00539         {\cf19 if} (!f)\par
{\bkmkstart AAAAAAABNV}{\bkmkend AAAAAAABNV}
00540                 Error ({\cf22 "Error opening %s: %s"},filename,strerror(errno));\par
{\bkmkstart AAAAAAABNW}{\bkmkend AAAAAAABNW}
00541 \par
{\bkmkstart AAAAAAABNX}{\bkmkend AAAAAAABNX}
00542         {\cf19 return} f;\par
{\bkmkstart AAAAAAABNY}{\bkmkend AAAAAAABNY}
00543 \}\par
{\bkmkstart AAAAAAABNZ}{\bkmkend AAAAAAABNZ}
00544 \par
{\bkmkstart AAAAAAABOA}{\bkmkend AAAAAAABOA}
00545 FILE *SafeOpenRead ({\cf18 char} *filename)\par
{\bkmkstart AAAAAAABOB}{\bkmkend AAAAAAABOB}
00546 \{\par
{\bkmkstart AAAAAAABOC}{\bkmkend AAAAAAABOC}
00547         FILE    *f;\par
{\bkmkstart AAAAAAABOD}{\bkmkend AAAAAAABOD}
00548 \par
{\bkmkstart AAAAAAABOE}{\bkmkend AAAAAAABOE}
00549         f = fopen(filename, {\cf22 "rb"});\par
{\bkmkstart AAAAAAABOF}{\bkmkend AAAAAAABOF}
00550 \par
{\bkmkstart AAAAAAABOG}{\bkmkend AAAAAAABOG}
00551         {\cf19 if} (!f)\par
{\bkmkstart AAAAAAABOH}{\bkmkend AAAAAAABOH}
00552                 Error ({\cf22 "Error opening %s: %s"},filename,strerror(errno));\par
{\bkmkstart AAAAAAABOI}{\bkmkend AAAAAAABOI}
00553 \par
{\bkmkstart AAAAAAABOJ}{\bkmkend AAAAAAABOJ}
00554         {\cf19 return} f;\par
{\bkmkstart AAAAAAABOK}{\bkmkend AAAAAAABOK}
00555 \}\par
{\bkmkstart AAAAAAABOL}{\bkmkend AAAAAAABOL}
00556 \par
{\bkmkstart AAAAAAABOM}{\bkmkend AAAAAAABOM}
00557 \par
{\bkmkstart AAAAAAABON}{\bkmkend AAAAAAABON}
00558 {\cf18 void} SafeRead (FILE *f, {\cf18 void} *buffer, {\cf18 int} count)\par
{\bkmkstart AAAAAAABOO}{\bkmkend AAAAAAABOO}
00559 \{\par
{\bkmkstart AAAAAAABOP}{\bkmkend AAAAAAABOP}
00560         {\cf19 if} ( fread (buffer, 1, count, f) != ({\cf18 size_t})count)\par
{\bkmkstart AAAAAAABOQ}{\bkmkend AAAAAAABOQ}
00561                 Error ({\cf22 "File read failure"});\par
{\bkmkstart AAAAAAABOR}{\bkmkend AAAAAAABOR}
00562 \}\par
{\bkmkstart AAAAAAABOS}{\bkmkend AAAAAAABOS}
00563 \par
{\bkmkstart AAAAAAABOT}{\bkmkend AAAAAAABOT}
00564 \par
{\bkmkstart AAAAAAABOU}{\bkmkend AAAAAAABOU}
00565 {\cf18 void} SafeWrite (FILE *f, {\cf18 void} *buffer, {\cf18 int} count)\par
{\bkmkstart AAAAAAABOV}{\bkmkend AAAAAAABOV}
00566 \{\par
{\bkmkstart AAAAAAABOW}{\bkmkend AAAAAAABOW}
00567         {\cf19 if} (fwrite (buffer, 1, count, f) != ({\cf18 size_t})count)\par
{\bkmkstart AAAAAAABOX}{\bkmkend AAAAAAABOX}
00568                 Error ({\cf22 "File read failure"});\par
{\bkmkstart AAAAAAABOY}{\bkmkend AAAAAAABOY}
00569 \}\par
{\bkmkstart AAAAAAABOZ}{\bkmkend AAAAAAABOZ}
00570 \par
{\bkmkstart AAAAAAABPA}{\bkmkend AAAAAAABPA}
00571 \par
{\bkmkstart AAAAAAABPB}{\bkmkend AAAAAAABPB}
00572 \par
{\bkmkstart AAAAAAABPC}{\bkmkend AAAAAAABPC}
00573 {\cf20 /*}\par
{\bkmkstart AAAAAAABPD}{\bkmkend AAAAAAABPD}
00574 {\cf20 ==============}\par
{\bkmkstart AAAAAAABPE}{\bkmkend AAAAAAABPE}
00575 {\cf20 LoadFile}\par
{\bkmkstart AAAAAAABPF}{\bkmkend AAAAAAABPF}
00576 {\cf20 ==============}\par
{\bkmkstart AAAAAAABPG}{\bkmkend AAAAAAABPG}
00577 {\cf20 */}\par
{\bkmkstart AAAAAAABPH}{\bkmkend AAAAAAABPH}
00578 {\cf18 int}    LoadFile ({\cf18 char} *filename, {\cf18 void} **bufferptr)\par
{\bkmkstart AAAAAAABPI}{\bkmkend AAAAAAABPI}
00579 \{\par
{\bkmkstart AAAAAAABPJ}{\bkmkend AAAAAAABPJ}
00580         FILE    *f;\par
{\bkmkstart AAAAAAABPK}{\bkmkend AAAAAAABPK}
00581         {\cf18 int}    length;\par
{\bkmkstart AAAAAAABPL}{\bkmkend AAAAAAABPL}
00582         {\cf18 void}    *buffer;\par
{\bkmkstart AAAAAAABPM}{\bkmkend AAAAAAABPM}
00583 \par
{\bkmkstart AAAAAAABPN}{\bkmkend AAAAAAABPN}
00584         f = SafeOpenRead (filename);\par
{\bkmkstart AAAAAAABPO}{\bkmkend AAAAAAABPO}
00585         length = Q_filelength (f);\par
{\bkmkstart AAAAAAABPP}{\bkmkend AAAAAAABPP}
00586         buffer = malloc (length+1);\par
{\bkmkstart AAAAAAABPQ}{\bkmkend AAAAAAABPQ}
00587         (({\cf18 char} *)buffer)[length] = 0;\par
{\bkmkstart AAAAAAABPR}{\bkmkend AAAAAAABPR}
00588         SafeRead (f, buffer, length);\par
{\bkmkstart AAAAAAABPS}{\bkmkend AAAAAAABPS}
00589         fclose (f);\par
{\bkmkstart AAAAAAABPT}{\bkmkend AAAAAAABPT}
00590 \par
{\bkmkstart AAAAAAABPU}{\bkmkend AAAAAAABPU}
00591         *bufferptr = buffer;\par
{\bkmkstart AAAAAAABPV}{\bkmkend AAAAAAABPV}
00592         {\cf19 return} length;\par
{\bkmkstart AAAAAAABPW}{\bkmkend AAAAAAABPW}
00593 \}\par
{\bkmkstart AAAAAAABPX}{\bkmkend AAAAAAABPX}
00594 \par
{\bkmkstart AAAAAAABPY}{\bkmkend AAAAAAABPY}
00595 \par
{\bkmkstart AAAAAAABPZ}{\bkmkend AAAAAAABPZ}
00596 {\cf20 /*}\par
{\bkmkstart AAAAAAABQA}{\bkmkend AAAAAAABQA}
00597 {\cf20 ==============}\par
{\bkmkstart AAAAAAABQB}{\bkmkend AAAAAAABQB}
00598 {\cf20 SaveFile}\par
{\bkmkstart AAAAAAABQC}{\bkmkend AAAAAAABQC}
00599 {\cf20 ==============}\par
{\bkmkstart AAAAAAABQD}{\bkmkend AAAAAAABQD}
00600 {\cf20 */}\par
{\bkmkstart AAAAAAABQE}{\bkmkend AAAAAAABQE}
00601 {\cf18 void}    SaveFile ({\cf18 char} *filename, {\cf18 void} *buffer, {\cf18 int} count)\par
{\bkmkstart AAAAAAABQF}{\bkmkend AAAAAAABQF}
00602 \{\par
{\bkmkstart AAAAAAABQG}{\bkmkend AAAAAAABQG}
00603         FILE    *f;\par
{\bkmkstart AAAAAAABQH}{\bkmkend AAAAAAABQH}
00604 \par
{\bkmkstart AAAAAAABQI}{\bkmkend AAAAAAABQI}
00605         f = SafeOpenWrite (filename);\par
{\bkmkstart AAAAAAABQJ}{\bkmkend AAAAAAABQJ}
00606         SafeWrite (f, buffer, count);\par
{\bkmkstart AAAAAAABQK}{\bkmkend AAAAAAABQK}
00607         fclose (f);\par
{\bkmkstart AAAAAAABQL}{\bkmkend AAAAAAABQL}
00608 \}\par
{\bkmkstart AAAAAAABQM}{\bkmkend AAAAAAABQM}
00609 \par
{\bkmkstart AAAAAAABQN}{\bkmkend AAAAAAABQN}
00610 \par
{\bkmkstart AAAAAAABQO}{\bkmkend AAAAAAABQO}
00611 \par
{\bkmkstart AAAAAAABQP}{\bkmkend AAAAAAABQP}
00612 {\cf18 void} DefaultExtension ({\cf18 char} *path, {\cf18 char} *extension)\par
{\bkmkstart AAAAAAABQQ}{\bkmkend AAAAAAABQQ}
00613 \{\par
{\bkmkstart AAAAAAABQR}{\bkmkend AAAAAAABQR}
00614         {\cf18 char}    *src;\par
{\bkmkstart AAAAAAABQS}{\bkmkend AAAAAAABQS}
00615 {\cf20 /*}\par
{\bkmkstart AAAAAAABQT}{\bkmkend AAAAAAABQT}
00616 {\cf20 // if path doesn't have a .EXT, append extension}\par
{\bkmkstart AAAAAAABQU}{\bkmkend AAAAAAABQU}
00617 {\cf20 // (extension should include the .)}\par
{\bkmkstart AAAAAAABQV}{\bkmkend AAAAAAABQV}
00618 {\cf20 */}\par
{\bkmkstart AAAAAAABQW}{\bkmkend AAAAAAABQW}
00619         src = path + strlen(path) - 1;\par
{\bkmkstart AAAAAAABQX}{\bkmkend AAAAAAABQX}
00620 \par
{\bkmkstart AAAAAAABQY}{\bkmkend AAAAAAABQY}
00621         {\cf19 while} (!PATHSEPARATOR(*src) && src != path)\par
{\bkmkstart AAAAAAABQZ}{\bkmkend AAAAAAABQZ}
00622         \{\par
{\bkmkstart AAAAAAABRA}{\bkmkend AAAAAAABRA}
00623                 {\cf19 if} (*src == {\cf23 '.'})\par
{\bkmkstart AAAAAAABRB}{\bkmkend AAAAAAABRB}
00624                         {\cf19 return};                 {\cf20 /* it has an extension */}\par
{\bkmkstart AAAAAAABRC}{\bkmkend AAAAAAABRC}
00625                 src--;\par
{\bkmkstart AAAAAAABRD}{\bkmkend AAAAAAABRD}
00626         \}\par
{\bkmkstart AAAAAAABRE}{\bkmkend AAAAAAABRE}
00627 \par
{\bkmkstart AAAAAAABRF}{\bkmkend AAAAAAABRF}
00628         strcat (path, extension);\par
{\bkmkstart AAAAAAABRG}{\bkmkend AAAAAAABRG}
00629 \}\par
{\bkmkstart AAAAAAABRH}{\bkmkend AAAAAAABRH}
00630 \par
{\bkmkstart AAAAAAABRI}{\bkmkend AAAAAAABRI}
00631 \par
{\bkmkstart AAAAAAABRJ}{\bkmkend AAAAAAABRJ}
00632 {\cf18 void} DefaultPath ({\cf18 char} *path, {\cf18 char} *basepath)\par
{\bkmkstart AAAAAAABRK}{\bkmkend AAAAAAABRK}
00633 \{\par
{\bkmkstart AAAAAAABRL}{\bkmkend AAAAAAABRL}
00634         {\cf18 char}    temp[128];\par
{\bkmkstart AAAAAAABRM}{\bkmkend AAAAAAABRM}
00635 \par
{\bkmkstart AAAAAAABRN}{\bkmkend AAAAAAABRN}
00636         {\cf19 if} (PATHSEPARATOR(path[0]))\par
{\bkmkstart AAAAAAABRO}{\bkmkend AAAAAAABRO}
00637                 {\cf19 return};                   {\cf20 /* absolute path location */}\par
{\bkmkstart AAAAAAABRP}{\bkmkend AAAAAAABRP}
00638         strcpy (temp,path);\par
{\bkmkstart AAAAAAABRQ}{\bkmkend AAAAAAABRQ}
00639         strcpy (path,basepath);\par
{\bkmkstart AAAAAAABRR}{\bkmkend AAAAAAABRR}
00640         strcat (path,temp);\par
{\bkmkstart AAAAAAABRS}{\bkmkend AAAAAAABRS}
00641 \}\par
{\bkmkstart AAAAAAABRT}{\bkmkend AAAAAAABRT}
00642 \par
{\bkmkstart AAAAAAABRU}{\bkmkend AAAAAAABRU}
00643 \par
{\bkmkstart AAAAAAABRV}{\bkmkend AAAAAAABRV}
00644 {\cf18 void}    StripFilename ({\cf18 char} *path)\par
{\bkmkstart AAAAAAABRW}{\bkmkend AAAAAAABRW}
00645 \{\par
{\bkmkstart AAAAAAABRX}{\bkmkend AAAAAAABRX}
00646         {\cf18 int}             length;\par
{\bkmkstart AAAAAAABRY}{\bkmkend AAAAAAABRY}
00647 \par
{\bkmkstart AAAAAAABRZ}{\bkmkend AAAAAAABRZ}
00648         length = strlen(path)-1;\par
{\bkmkstart AAAAAAABSA}{\bkmkend AAAAAAABSA}
00649         {\cf19 while} (length > 0 && !PATHSEPARATOR(path[length]))\par
{\bkmkstart AAAAAAABSB}{\bkmkend AAAAAAABSB}
00650                 length--;\par
{\bkmkstart AAAAAAABSC}{\bkmkend AAAAAAABSC}
00651         path[length] = 0;\par
{\bkmkstart AAAAAAABSD}{\bkmkend AAAAAAABSD}
00652 \}\par
{\bkmkstart AAAAAAABSE}{\bkmkend AAAAAAABSE}
00653 \par
{\bkmkstart AAAAAAABSF}{\bkmkend AAAAAAABSF}
00654 {\cf18 void}    StripExtension ({\cf18 char} *path)\par
{\bkmkstart AAAAAAABSG}{\bkmkend AAAAAAABSG}
00655 \{\par
{\bkmkstart AAAAAAABSH}{\bkmkend AAAAAAABSH}
00656         {\cf18 int}             length;\par
{\bkmkstart AAAAAAABSI}{\bkmkend AAAAAAABSI}
00657 \par
{\bkmkstart AAAAAAABSJ}{\bkmkend AAAAAAABSJ}
00658         length = strlen(path)-1;\par
{\bkmkstart AAAAAAABSK}{\bkmkend AAAAAAABSK}
00659         {\cf19 while} (length > 0 && path[length] != {\cf23 '.'})\par
{\bkmkstart AAAAAAABSL}{\bkmkend AAAAAAABSL}
00660         \{\par
{\bkmkstart AAAAAAABSM}{\bkmkend AAAAAAABSM}
00661                 length--;\par
{\bkmkstart AAAAAAABSN}{\bkmkend AAAAAAABSN}
00662                 {\cf19 if} (path[length] == {\cf23 '/'})\par
{\bkmkstart AAAAAAABSO}{\bkmkend AAAAAAABSO}
00663                         {\cf19 return};         {\cf20 /* no extension */}\par
{\bkmkstart AAAAAAABSP}{\bkmkend AAAAAAABSP}
00664         \}\par
{\bkmkstart AAAAAAABSQ}{\bkmkend AAAAAAABSQ}
00665         {\cf19 if} (length)\par
{\bkmkstart AAAAAAABSR}{\bkmkend AAAAAAABSR}
00666                 path[length] = 0;\par
{\bkmkstart AAAAAAABSS}{\bkmkend AAAAAAABSS}
00667 \}\par
{\bkmkstart AAAAAAABST}{\bkmkend AAAAAAABST}
00668 \par
{\bkmkstart AAAAAAABSU}{\bkmkend AAAAAAABSU}
00669 \par
{\bkmkstart AAAAAAABSV}{\bkmkend AAAAAAABSV}
00670 {\cf20 /*}\par
{\bkmkstart AAAAAAABSW}{\bkmkend AAAAAAABSW}
00671 {\cf20 ====================}\par
{\bkmkstart AAAAAAABSX}{\bkmkend AAAAAAABSX}
00672 {\cf20 Extract file parts}\par
{\bkmkstart AAAAAAABSY}{\bkmkend AAAAAAABSY}
00673 {\cf20 ====================}\par
{\bkmkstart AAAAAAABSZ}{\bkmkend AAAAAAABSZ}
00674 {\cf20 */}\par
{\bkmkstart AAAAAAABTA}{\bkmkend AAAAAAABTA}
00675 {\cf18 void} ExtractFilePath ({\cf18 char} *path, {\cf18 char} *dest)\par
{\bkmkstart AAAAAAABTB}{\bkmkend AAAAAAABTB}
00676 \{\par
{\bkmkstart AAAAAAABTC}{\bkmkend AAAAAAABTC}
00677         {\cf18 char}    *src;\par
{\bkmkstart AAAAAAABTD}{\bkmkend AAAAAAABTD}
00678 \par
{\bkmkstart AAAAAAABTE}{\bkmkend AAAAAAABTE}
00679         src = path + strlen(path) - 1;\par
{\bkmkstart AAAAAAABTF}{\bkmkend AAAAAAABTF}
00680 \par
{\bkmkstart AAAAAAABTG}{\bkmkend AAAAAAABTG}
00681 {\cf20 /*}\par
{\bkmkstart AAAAAAABTH}{\bkmkend AAAAAAABTH}
00682 {\cf20 // back up until a \\ or the start}\par
{\bkmkstart AAAAAAABTI}{\bkmkend AAAAAAABTI}
00683 {\cf20 */}\par
{\bkmkstart AAAAAAABTJ}{\bkmkend AAAAAAABTJ}
00684         {\cf19 while} (src != path && !PATHSEPARATOR(*(src-1)))\par
{\bkmkstart AAAAAAABTK}{\bkmkend AAAAAAABTK}
00685                 src--;\par
{\bkmkstart AAAAAAABTL}{\bkmkend AAAAAAABTL}
00686 \par
{\bkmkstart AAAAAAABTM}{\bkmkend AAAAAAABTM}
00687         memcpy (dest, path, src-path);\par
{\bkmkstart AAAAAAABTN}{\bkmkend AAAAAAABTN}
00688         dest[src-path] = 0;\par
{\bkmkstart AAAAAAABTO}{\bkmkend AAAAAAABTO}
00689 \}\par
{\bkmkstart AAAAAAABTP}{\bkmkend AAAAAAABTP}
00690 \par
{\bkmkstart AAAAAAABTQ}{\bkmkend AAAAAAABTQ}
00691 {\cf18 void} ExtractFileBase ({\cf18 char} *path, {\cf18 char} *dest)\par
{\bkmkstart AAAAAAABTR}{\bkmkend AAAAAAABTR}
00692 \{\par
{\bkmkstart AAAAAAABTS}{\bkmkend AAAAAAABTS}
00693         {\cf18 char}    *src;\par
{\bkmkstart AAAAAAABTT}{\bkmkend AAAAAAABTT}
00694 \par
{\bkmkstart AAAAAAABTU}{\bkmkend AAAAAAABTU}
00695         src = path + strlen(path) - 1;\par
{\bkmkstart AAAAAAABTV}{\bkmkend AAAAAAABTV}
00696 \par
{\bkmkstart AAAAAAABTW}{\bkmkend AAAAAAABTW}
00697 {\cf20 /*}\par
{\bkmkstart AAAAAAABTX}{\bkmkend AAAAAAABTX}
00698 {\cf20 // back up until a \\ or the start}\par
{\bkmkstart AAAAAAABTY}{\bkmkend AAAAAAABTY}
00699 {\cf20 */}\par
{\bkmkstart AAAAAAABTZ}{\bkmkend AAAAAAABTZ}
00700         {\cf19 while} (src != path && !PATHSEPARATOR(*(src-1)))\par
{\bkmkstart AAAAAAABUA}{\bkmkend AAAAAAABUA}
00701                 src--;\par
{\bkmkstart AAAAAAABUB}{\bkmkend AAAAAAABUB}
00702 \par
{\bkmkstart AAAAAAABUC}{\bkmkend AAAAAAABUC}
00703         {\cf19 while} (*src && *src != {\cf23 '.'})\par
{\bkmkstart AAAAAAABUD}{\bkmkend AAAAAAABUD}
00704         \{\par
{\bkmkstart AAAAAAABUE}{\bkmkend AAAAAAABUE}
00705                 *dest++ = *src++;\par
{\bkmkstart AAAAAAABUF}{\bkmkend AAAAAAABUF}
00706         \}\par
{\bkmkstart AAAAAAABUG}{\bkmkend AAAAAAABUG}
00707         *dest = 0;\par
{\bkmkstart AAAAAAABUH}{\bkmkend AAAAAAABUH}
00708 \}\par
{\bkmkstart AAAAAAABUI}{\bkmkend AAAAAAABUI}
00709 \par
{\bkmkstart AAAAAAABUJ}{\bkmkend AAAAAAABUJ}
00710 {\cf18 void} ExtractFileExtension ({\cf18 char} *path, {\cf18 char} *dest)\par
{\bkmkstart AAAAAAABUK}{\bkmkend AAAAAAABUK}
00711 \{\par
{\bkmkstart AAAAAAABUL}{\bkmkend AAAAAAABUL}
00712         {\cf18 char}    *src;\par
{\bkmkstart AAAAAAABUM}{\bkmkend AAAAAAABUM}
00713 \par
{\bkmkstart AAAAAAABUN}{\bkmkend AAAAAAABUN}
00714         src = path + strlen(path) - 1;\par
{\bkmkstart AAAAAAABUO}{\bkmkend AAAAAAABUO}
00715 \par
{\bkmkstart AAAAAAABUP}{\bkmkend AAAAAAABUP}
00716 {\cf20 /*}\par
{\bkmkstart AAAAAAABUQ}{\bkmkend AAAAAAABUQ}
00717 {\cf20 // back up until a . or the start}\par
{\bkmkstart AAAAAAABUR}{\bkmkend AAAAAAABUR}
00718 {\cf20 */}\par
{\bkmkstart AAAAAAABUS}{\bkmkend AAAAAAABUS}
00719         {\cf19 while} (src != path && *(src-1) != {\cf23 '.'})\par
{\bkmkstart AAAAAAABUT}{\bkmkend AAAAAAABUT}
00720                 src--;\par
{\bkmkstart AAAAAAABUU}{\bkmkend AAAAAAABUU}
00721         {\cf19 if} (src == path)\par
{\bkmkstart AAAAAAABUV}{\bkmkend AAAAAAABUV}
00722         \{\par
{\bkmkstart AAAAAAABUW}{\bkmkend AAAAAAABUW}
00723                 *dest = 0;      {\cf20 /* no extension */}\par
{\bkmkstart AAAAAAABUX}{\bkmkend AAAAAAABUX}
00724                 {\cf19 return};\par
{\bkmkstart AAAAAAABUY}{\bkmkend AAAAAAABUY}
00725         \}\par
{\bkmkstart AAAAAAABUZ}{\bkmkend AAAAAAABUZ}
00726 \par
{\bkmkstart AAAAAAABVA}{\bkmkend AAAAAAABVA}
00727         strcpy (dest,src);\par
{\bkmkstart AAAAAAABVB}{\bkmkend AAAAAAABVB}
00728 \}\par
{\bkmkstart AAAAAAABVC}{\bkmkend AAAAAAABVC}
00729 \par
{\bkmkstart AAAAAAABVD}{\bkmkend AAAAAAABVD}
00730 \par
{\bkmkstart AAAAAAABVE}{\bkmkend AAAAAAABVE}
00731 {\cf20 /*}\par
{\bkmkstart AAAAAAABVF}{\bkmkend AAAAAAABVF}
00732 {\cf20 ==============}\par
{\bkmkstart AAAAAAABVG}{\bkmkend AAAAAAABVG}
00733 {\cf20 ParseNum / ParseHex}\par
{\bkmkstart AAAAAAABVH}{\bkmkend AAAAAAABVH}
00734 {\cf20 ==============}\par
{\bkmkstart AAAAAAABVI}{\bkmkend AAAAAAABVI}
00735 {\cf20 */}\par
{\bkmkstart AAAAAAABVJ}{\bkmkend AAAAAAABVJ}
00736 {\cf18 int} ParseHex ({\cf18 char} *hex)\par
{\bkmkstart AAAAAAABVK}{\bkmkend AAAAAAABVK}
00737 \{\par
{\bkmkstart AAAAAAABVL}{\bkmkend AAAAAAABVL}
00738         {\cf18 char}    *str;\par
{\bkmkstart AAAAAAABVM}{\bkmkend AAAAAAABVM}
00739         {\cf18 int}    num;\par
{\bkmkstart AAAAAAABVN}{\bkmkend AAAAAAABVN}
00740 \par
{\bkmkstart AAAAAAABVO}{\bkmkend AAAAAAABVO}
00741         num = 0;\par
{\bkmkstart AAAAAAABVP}{\bkmkend AAAAAAABVP}
00742         str = hex;\par
{\bkmkstart AAAAAAABVQ}{\bkmkend AAAAAAABVQ}
00743 \par
{\bkmkstart AAAAAAABVR}{\bkmkend AAAAAAABVR}
00744         {\cf19 while} (*str)\par
{\bkmkstart AAAAAAABVS}{\bkmkend AAAAAAABVS}
00745         \{\par
{\bkmkstart AAAAAAABVT}{\bkmkend AAAAAAABVT}
00746                 num <<= 4;\par
{\bkmkstart AAAAAAABVU}{\bkmkend AAAAAAABVU}
00747                 {\cf19 if} (*str >= {\cf23 '0'} && *str <= {\cf23 '9'})\par
{\bkmkstart AAAAAAABVV}{\bkmkend AAAAAAABVV}
00748                         num += *str-{\cf23 '0'};\par
{\bkmkstart AAAAAAABVW}{\bkmkend AAAAAAABVW}
00749                 {\cf19 else} {\cf19 if} (*str >= {\cf23 'a'} && *str <= {\cf23 'f'})\par
{\bkmkstart AAAAAAABVX}{\bkmkend AAAAAAABVX}
00750                         num += 10 + *str-{\cf23 'a'};\par
{\bkmkstart AAAAAAABVY}{\bkmkend AAAAAAABVY}
00751                 {\cf19 else} {\cf19 if} (*str >= {\cf23 'A'} && *str <= {\cf23 'F'})\par
{\bkmkstart AAAAAAABVZ}{\bkmkend AAAAAAABVZ}
00752                         num += 10 + *str-{\cf23 'A'};\par
{\bkmkstart AAAAAAABWA}{\bkmkend AAAAAAABWA}
00753                 {\cf19 else}\par
{\bkmkstart AAAAAAABWB}{\bkmkend AAAAAAABWB}
00754                         Error ({\cf22 "Bad hex number: %s"},hex);\par
{\bkmkstart AAAAAAABWC}{\bkmkend AAAAAAABWC}
00755                 str++;\par
{\bkmkstart AAAAAAABWD}{\bkmkend AAAAAAABWD}
00756         \}\par
{\bkmkstart AAAAAAABWE}{\bkmkend AAAAAAABWE}
00757 \par
{\bkmkstart AAAAAAABWF}{\bkmkend AAAAAAABWF}
00758         {\cf19 return} num;\par
{\bkmkstart AAAAAAABWG}{\bkmkend AAAAAAABWG}
00759 \}\par
{\bkmkstart AAAAAAABWH}{\bkmkend AAAAAAABWH}
00760 \par
{\bkmkstart AAAAAAABWI}{\bkmkend AAAAAAABWI}
00761 \par
{\bkmkstart AAAAAAABWJ}{\bkmkend AAAAAAABWJ}
00762 {\cf18 int} ParseNum ({\cf18 char} *str)\par
{\bkmkstart AAAAAAABWK}{\bkmkend AAAAAAABWK}
00763 \{\par
{\bkmkstart AAAAAAABWL}{\bkmkend AAAAAAABWL}
00764         {\cf19 if} (str[0] == {\cf23 '$'})\par
{\bkmkstart AAAAAAABWM}{\bkmkend AAAAAAABWM}
00765                 {\cf19 return} ParseHex (str+1);\par
{\bkmkstart AAAAAAABWN}{\bkmkend AAAAAAABWN}
00766         {\cf19 if} (str[0] == {\cf23 '0'} && str[1] == {\cf23 'x'})\par
{\bkmkstart AAAAAAABWO}{\bkmkend AAAAAAABWO}
00767                 {\cf19 return} ParseHex (str+2);\par
{\bkmkstart AAAAAAABWP}{\bkmkend AAAAAAABWP}
00768         {\cf19 return} atol (str);\par
{\bkmkstart AAAAAAABWQ}{\bkmkend AAAAAAABWQ}
00769 \}\par
{\bkmkstart AAAAAAABWR}{\bkmkend AAAAAAABWR}
00770 \par
{\bkmkstart AAAAAAABWS}{\bkmkend AAAAAAABWS}
00771 \par
{\bkmkstart AAAAAAABWT}{\bkmkend AAAAAAABWT}
00772 \par
{\bkmkstart AAAAAAABWU}{\bkmkend AAAAAAABWU}
00773 {\cf20 /*}\par
{\bkmkstart AAAAAAABWV}{\bkmkend AAAAAAABWV}
00774 {\cf20 ============================================================================}\par
{\bkmkstart AAAAAAABWW}{\bkmkend AAAAAAABWW}
00775 {\cf20 }\par
{\bkmkstart AAAAAAABWX}{\bkmkend AAAAAAABWX}
00776 {\cf20                                         BYTE ORDER FUNCTIONS}\par
{\bkmkstart AAAAAAABWY}{\bkmkend AAAAAAABWY}
00777 {\cf20 }\par
{\bkmkstart AAAAAAABWZ}{\bkmkend AAAAAAABWZ}
00778 {\cf20 ============================================================================}\par
{\bkmkstart AAAAAAABXA}{\bkmkend AAAAAAABXA}
00779 {\cf20 */}\par
{\bkmkstart AAAAAAABXB}{\bkmkend AAAAAAABXB}
00780 \par
{\bkmkstart AAAAAAABXC}{\bkmkend AAAAAAABXC}
00781 {\cf21 #ifdef _SGI_SOURCE}\par
{\bkmkstart AAAAAAABXD}{\bkmkend AAAAAAABXD}
00782 {\cf21 #define __BIG_ENDIAN__}\par
{\bkmkstart AAAAAAABXE}{\bkmkend AAAAAAABXE}
00783 {\cf21 #endif}\par
{\bkmkstart AAAAAAABXF}{\bkmkend AAAAAAABXF}
00784 \par
{\bkmkstart AAAAAAABXG}{\bkmkend AAAAAAABXG}
00785 {\cf21 #ifdef __BIG_ENDIAN__}\par
{\bkmkstart AAAAAAABXH}{\bkmkend AAAAAAABXH}
00786 \par
{\bkmkstart AAAAAAABXI}{\bkmkend AAAAAAABXI}
00787 {\cf18 short}   LittleShort ({\cf18 short} l)\par
{\bkmkstart AAAAAAABXJ}{\bkmkend AAAAAAABXJ}
00788 \{\par
{\bkmkstart AAAAAAABXK}{\bkmkend AAAAAAABXK}
00789         {\cf18 byte}    b1,b2;\par
{\bkmkstart AAAAAAABXL}{\bkmkend AAAAAAABXL}
00790 \par
{\bkmkstart AAAAAAABXM}{\bkmkend AAAAAAABXM}
00791         b1 = l&255;\par
{\bkmkstart AAAAAAABXN}{\bkmkend AAAAAAABXN}
00792         b2 = (l>>8)&255;\par
{\bkmkstart AAAAAAABXO}{\bkmkend AAAAAAABXO}
00793 \par
{\bkmkstart AAAAAAABXP}{\bkmkend AAAAAAABXP}
00794         {\cf19 return} (b1<<8) + b2;\par
{\bkmkstart AAAAAAABXQ}{\bkmkend AAAAAAABXQ}
00795 \}\par
{\bkmkstart AAAAAAABXR}{\bkmkend AAAAAAABXR}
00796 \par
{\bkmkstart AAAAAAABXS}{\bkmkend AAAAAAABXS}
00797 {\cf18 short}   BigShort ({\cf18 short} l)\par
{\bkmkstart AAAAAAABXT}{\bkmkend AAAAAAABXT}
00798 \{\par
{\bkmkstart AAAAAAABXU}{\bkmkend AAAAAAABXU}
00799         {\cf19 return} l;\par
{\bkmkstart AAAAAAABXV}{\bkmkend AAAAAAABXV}
00800 \}\par
{\bkmkstart AAAAAAABXW}{\bkmkend AAAAAAABXW}
00801 \par
{\bkmkstart AAAAAAABXX}{\bkmkend AAAAAAABXX}
00802 \par
{\bkmkstart AAAAAAABXY}{\bkmkend AAAAAAABXY}
00803 {\cf18 int}    LittleLong ({\cf18 int} l)\par
{\bkmkstart AAAAAAABXZ}{\bkmkend AAAAAAABXZ}
00804 \{\par
{\bkmkstart AAAAAAABYA}{\bkmkend AAAAAAABYA}
00805         {\cf18 byte}    b1,b2,b3,b4;\par
{\bkmkstart AAAAAAABYB}{\bkmkend AAAAAAABYB}
00806 \par
{\bkmkstart AAAAAAABYC}{\bkmkend AAAAAAABYC}
00807         b1 = l&255;\par
{\bkmkstart AAAAAAABYD}{\bkmkend AAAAAAABYD}
00808         b2 = (l>>8)&255;\par
{\bkmkstart AAAAAAABYE}{\bkmkend AAAAAAABYE}
00809         b3 = (l>>16)&255;\par
{\bkmkstart AAAAAAABYF}{\bkmkend AAAAAAABYF}
00810         b4 = (l>>24)&255;\par
{\bkmkstart AAAAAAABYG}{\bkmkend AAAAAAABYG}
00811 \par
{\bkmkstart AAAAAAABYH}{\bkmkend AAAAAAABYH}
00812         {\cf19 return} (({\cf18 int})b1<<24) + (({\cf18 int})b2<<16) + (({\cf18 int})b3<<8) + b4;\par
{\bkmkstart AAAAAAABYI}{\bkmkend AAAAAAABYI}
00813 \}\par
{\bkmkstart AAAAAAABYJ}{\bkmkend AAAAAAABYJ}
00814 \par
{\bkmkstart AAAAAAABYK}{\bkmkend AAAAAAABYK}
00815 {\cf18 int}    BigLong ({\cf18 int} l)\par
{\bkmkstart AAAAAAABYL}{\bkmkend AAAAAAABYL}
00816 \{\par
{\bkmkstart AAAAAAABYM}{\bkmkend AAAAAAABYM}
00817         {\cf19 return} l;\par
{\bkmkstart AAAAAAABYN}{\bkmkend AAAAAAABYN}
00818 \}\par
{\bkmkstart AAAAAAABYO}{\bkmkend AAAAAAABYO}
00819 \par
{\bkmkstart AAAAAAABYP}{\bkmkend AAAAAAABYP}
00820 \par
{\bkmkstart AAAAAAABYQ}{\bkmkend AAAAAAABYQ}
00821 {\cf18 float}   LittleFloat ({\cf18 float} l)\par
{\bkmkstart AAAAAAABYR}{\bkmkend AAAAAAABYR}
00822 \{\par
{\bkmkstart AAAAAAABYS}{\bkmkend AAAAAAABYS}
00823         {\cf17 union }\{{\cf18 byte} b[4]; {\cf18 float} f;\} in, out;\par
{\bkmkstart AAAAAAABYT}{\bkmkend AAAAAAABYT}
00824 \par
{\bkmkstart AAAAAAABYU}{\bkmkend AAAAAAABYU}
00825         in.f = l;\par
{\bkmkstart AAAAAAABYV}{\bkmkend AAAAAAABYV}
00826         out.b[0] = in.b[3];\par
{\bkmkstart AAAAAAABYW}{\bkmkend AAAAAAABYW}
00827         out.b[1] = in.b[2];\par
{\bkmkstart AAAAAAABYX}{\bkmkend AAAAAAABYX}
00828         out.b[2] = in.b[1];\par
{\bkmkstart AAAAAAABYY}{\bkmkend AAAAAAABYY}
00829         out.b[3] = in.b[0];\par
{\bkmkstart AAAAAAABYZ}{\bkmkend AAAAAAABYZ}
00830 \par
{\bkmkstart AAAAAAABZA}{\bkmkend AAAAAAABZA}
00831         {\cf19 return} out.f;\par
{\bkmkstart AAAAAAABZB}{\bkmkend AAAAAAABZB}
00832 \}\par
{\bkmkstart AAAAAAABZC}{\bkmkend AAAAAAABZC}
00833 \par
{\bkmkstart AAAAAAABZD}{\bkmkend AAAAAAABZD}
00834 {\cf18 float}   BigFloat ({\cf18 float} l)\par
{\bkmkstart AAAAAAABZE}{\bkmkend AAAAAAABZE}
00835 \{\par
{\bkmkstart AAAAAAABZF}{\bkmkend AAAAAAABZF}
00836         {\cf19 return} l;\par
{\bkmkstart AAAAAAABZG}{\bkmkend AAAAAAABZG}
00837 \}\par
{\bkmkstart AAAAAAABZH}{\bkmkend AAAAAAABZH}
00838 \par
{\bkmkstart AAAAAAABZI}{\bkmkend AAAAAAABZI}
00839 \par
{\bkmkstart AAAAAAABZJ}{\bkmkend AAAAAAABZJ}
00840 {\cf21 #else}\par
{\bkmkstart AAAAAAABZK}{\bkmkend AAAAAAABZK}
00841 \par
{\bkmkstart AAAAAAABZL}{\bkmkend AAAAAAABZL}
00842 \par
{\bkmkstart AAAAAAABZM}{\bkmkend AAAAAAABZM}
00843 {\cf18 short}   BigShort ({\cf18 short} l)\par
{\bkmkstart AAAAAAABZN}{\bkmkend AAAAAAABZN}
00844 \{\par
{\bkmkstart AAAAAAABZO}{\bkmkend AAAAAAABZO}
00845         {\cf18 byte}    b1,b2;\par
{\bkmkstart AAAAAAABZP}{\bkmkend AAAAAAABZP}
00846 \par
{\bkmkstart AAAAAAABZQ}{\bkmkend AAAAAAABZQ}
00847         b1 = l&255;\par
{\bkmkstart AAAAAAABZR}{\bkmkend AAAAAAABZR}
00848         b2 = (l>>8)&255;\par
{\bkmkstart AAAAAAABZS}{\bkmkend AAAAAAABZS}
00849 \par
{\bkmkstart AAAAAAABZT}{\bkmkend AAAAAAABZT}
00850         {\cf19 return} (b1<<8) + b2;\par
{\bkmkstart AAAAAAABZU}{\bkmkend AAAAAAABZU}
00851 \}\par
{\bkmkstart AAAAAAABZV}{\bkmkend AAAAAAABZV}
00852 \par
{\bkmkstart AAAAAAABZW}{\bkmkend AAAAAAABZW}
00853 {\cf18 short}   LittleShort ({\cf18 short} l)\par
{\bkmkstart AAAAAAABZX}{\bkmkend AAAAAAABZX}
00854 \{\par
{\bkmkstart AAAAAAABZY}{\bkmkend AAAAAAABZY}
00855         {\cf19 return} l;\par
{\bkmkstart AAAAAAABZZ}{\bkmkend AAAAAAABZZ}
00856 \}\par
{\bkmkstart AAAAAAACAA}{\bkmkend AAAAAAACAA}
00857 \par
{\bkmkstart AAAAAAACAB}{\bkmkend AAAAAAACAB}
00858 \par
{\bkmkstart AAAAAAACAC}{\bkmkend AAAAAAACAC}
00859 {\cf18 int}    BigLong ({\cf18 int} l)\par
{\bkmkstart AAAAAAACAD}{\bkmkend AAAAAAACAD}
00860 \{\par
{\bkmkstart AAAAAAACAE}{\bkmkend AAAAAAACAE}
00861         {\cf18 byte}    b1,b2,b3,b4;\par
{\bkmkstart AAAAAAACAF}{\bkmkend AAAAAAACAF}
00862 \par
{\bkmkstart AAAAAAACAG}{\bkmkend AAAAAAACAG}
00863         b1 = l&255;\par
{\bkmkstart AAAAAAACAH}{\bkmkend AAAAAAACAH}
00864         b2 = (l>>8)&255;\par
{\bkmkstart AAAAAAACAI}{\bkmkend AAAAAAACAI}
00865         b3 = (l>>16)&255;\par
{\bkmkstart AAAAAAACAJ}{\bkmkend AAAAAAACAJ}
00866         b4 = (l>>24)&255;\par
{\bkmkstart AAAAAAACAK}{\bkmkend AAAAAAACAK}
00867 \par
{\bkmkstart AAAAAAACAL}{\bkmkend AAAAAAACAL}
00868         {\cf19 return} (({\cf18 int})b1<<24) + (({\cf18 int})b2<<16) + (({\cf18 int})b3<<8) + b4;\par
{\bkmkstart AAAAAAACAM}{\bkmkend AAAAAAACAM}
00869 \}\par
{\bkmkstart AAAAAAACAN}{\bkmkend AAAAAAACAN}
00870 \par
{\bkmkstart AAAAAAACAO}{\bkmkend AAAAAAACAO}
00871 {\cf18 int}    LittleLong ({\cf18 int} l)\par
{\bkmkstart AAAAAAACAP}{\bkmkend AAAAAAACAP}
00872 \{\par
{\bkmkstart AAAAAAACAQ}{\bkmkend AAAAAAACAQ}
00873         {\cf19 return} l;\par
{\bkmkstart AAAAAAACAR}{\bkmkend AAAAAAACAR}
00874 \}\par
{\bkmkstart AAAAAAACAS}{\bkmkend AAAAAAACAS}
00875 \par
{\bkmkstart AAAAAAACAT}{\bkmkend AAAAAAACAT}
00876 {\cf18 float}   BigFloat ({\cf18 float} l)\par
{\bkmkstart AAAAAAACAU}{\bkmkend AAAAAAACAU}
00877 \{\par
{\bkmkstart AAAAAAACAV}{\bkmkend AAAAAAACAV}
00878         {\cf17 union }\{{\cf18 byte} b[4]; {\cf18 float} f;\} in, out;\par
{\bkmkstart AAAAAAACAW}{\bkmkend AAAAAAACAW}
00879 \par
{\bkmkstart AAAAAAACAX}{\bkmkend AAAAAAACAX}
00880         in.f = l;\par
{\bkmkstart AAAAAAACAY}{\bkmkend AAAAAAACAY}
00881         out.b[0] = in.b[3];\par
{\bkmkstart AAAAAAACAZ}{\bkmkend AAAAAAACAZ}
00882         out.b[1] = in.b[2];\par
{\bkmkstart AAAAAAACBA}{\bkmkend AAAAAAACBA}
00883         out.b[2] = in.b[1];\par
{\bkmkstart AAAAAAACBB}{\bkmkend AAAAAAACBB}
00884         out.b[3] = in.b[0];\par
{\bkmkstart AAAAAAACBC}{\bkmkend AAAAAAACBC}
00885 \par
{\bkmkstart AAAAAAACBD}{\bkmkend AAAAAAACBD}
00886         {\cf19 return} out.f;\par
{\bkmkstart AAAAAAACBE}{\bkmkend AAAAAAACBE}
00887 \}\par
{\bkmkstart AAAAAAACBF}{\bkmkend AAAAAAACBF}
00888 \par
{\bkmkstart AAAAAAACBG}{\bkmkend AAAAAAACBG}
00889 {\cf18 float}   LittleFloat ({\cf18 float} l)\par
{\bkmkstart AAAAAAACBH}{\bkmkend AAAAAAACBH}
00890 \{\par
{\bkmkstart AAAAAAACBI}{\bkmkend AAAAAAACBI}
00891         {\cf19 return} l;\par
{\bkmkstart AAAAAAACBJ}{\bkmkend AAAAAAACBJ}
00892 \}\par
{\bkmkstart AAAAAAACBK}{\bkmkend AAAAAAACBK}
00893 \par
{\bkmkstart AAAAAAACBL}{\bkmkend AAAAAAACBL}
00894 \par
{\bkmkstart AAAAAAACBM}{\bkmkend AAAAAAACBM}
00895 {\cf21 #endif}\par
{\bkmkstart AAAAAAACBN}{\bkmkend AAAAAAACBN}
00896 \par
{\bkmkstart AAAAAAACBO}{\bkmkend AAAAAAACBO}
00897 {\cf20 /*}\par
{\bkmkstart AAAAAAACBP}{\bkmkend AAAAAAACBP}
00898 {\cf20 //=======================================================}\par
{\bkmkstart AAAAAAACBQ}{\bkmkend AAAAAAACBQ}
00899 {\cf20 }\par
{\bkmkstart AAAAAAACBR}{\bkmkend AAAAAAACBR}
00900 {\cf20 }\par
{\bkmkstart AAAAAAACBS}{\bkmkend AAAAAAACBS}
00901 {\cf20 // FIXME: byte swap?}\par
{\bkmkstart AAAAAAACBT}{\bkmkend AAAAAAACBT}
00902 {\cf20 }\par
{\bkmkstart AAAAAAACBU}{\bkmkend AAAAAAACBU}
00903 {\cf20 // this is a 16 bit, non-reflected CRC using the polynomial 0x1021}\par
{\bkmkstart AAAAAAACBV}{\bkmkend AAAAAAACBV}
00904 {\cf20 // and the initial and final xor values shown below...  in other words, the}\par
{\bkmkstart AAAAAAACBW}{\bkmkend AAAAAAACBW}
00905 {\cf20 // CCITT standard CRC used by XMODEM}\par
{\bkmkstart AAAAAAACBX}{\bkmkend AAAAAAACBX}
00906 {\cf20 */}\par
{\bkmkstart AAAAAAACBY}{\bkmkend AAAAAAACBY}
00907 \par
{\bkmkstart AAAAAAACBZ}{\bkmkend AAAAAAACBZ}
00908 {\cf21 #define CRC_INIT_VALUE  0xffff}\par
{\bkmkstart AAAAAAACCA}{\bkmkend AAAAAAACCA}
00909 {\cf21 #define CRC_XOR_VALUE   0x0000}\par
{\bkmkstart AAAAAAACCB}{\bkmkend AAAAAAACCB}
00910 \par
{\bkmkstart AAAAAAACCC}{\bkmkend AAAAAAACCC}
00911 {\cf17 static} {\cf18 unsigned} {\cf18 short} crctable[256] =\par
{\bkmkstart AAAAAAACCD}{\bkmkend AAAAAAACCD}
00912 \{\par
{\bkmkstart AAAAAAACCE}{\bkmkend AAAAAAACCE}
00913         0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7,\par
{\bkmkstart AAAAAAACCF}{\bkmkend AAAAAAACCF}
00914         0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef,\par
{\bkmkstart AAAAAAACCG}{\bkmkend AAAAAAACCG}
00915         0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\par
{\bkmkstart AAAAAAACCH}{\bkmkend AAAAAAACCH}
00916         0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de,\par
{\bkmkstart AAAAAAACCI}{\bkmkend AAAAAAACCI}
00917         0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485,\par
{\bkmkstart AAAAAAACCJ}{\bkmkend AAAAAAACCJ}
00918         0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\par
{\bkmkstart AAAAAAACCK}{\bkmkend AAAAAAACCK}
00919         0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4,\par
{\bkmkstart AAAAAAACCL}{\bkmkend AAAAAAACCL}
00920         0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc,\par
{\bkmkstart AAAAAAACCM}{\bkmkend AAAAAAACCM}
00921         0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\par
{\bkmkstart AAAAAAACCN}{\bkmkend AAAAAAACCN}
00922         0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b,\par
{\bkmkstart AAAAAAACCO}{\bkmkend AAAAAAACCO}
00923         0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12,\par
{\bkmkstart AAAAAAACCP}{\bkmkend AAAAAAACCP}
00924         0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\par
{\bkmkstart AAAAAAACCQ}{\bkmkend AAAAAAACCQ}
00925         0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41,\par
{\bkmkstart AAAAAAACCR}{\bkmkend AAAAAAACCR}
00926         0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49,\par
{\bkmkstart AAAAAAACCS}{\bkmkend AAAAAAACCS}
00927         0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\par
{\bkmkstart AAAAAAACCT}{\bkmkend AAAAAAACCT}
00928         0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78,\par
{\bkmkstart AAAAAAACCU}{\bkmkend AAAAAAACCU}
00929         0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f,\par
{\bkmkstart AAAAAAACCV}{\bkmkend AAAAAAACCV}
00930         0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\par
{\bkmkstart AAAAAAACCW}{\bkmkend AAAAAAACCW}
00931         0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e,\par
{\bkmkstart AAAAAAACCX}{\bkmkend AAAAAAACCX}
00932         0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256,\par
{\bkmkstart AAAAAAACCY}{\bkmkend AAAAAAACCY}
00933         0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\par
{\bkmkstart AAAAAAACCZ}{\bkmkend AAAAAAACCZ}
00934         0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,\par
{\bkmkstart AAAAAAACDA}{\bkmkend AAAAAAACDA}
00935         0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c,\par
{\bkmkstart AAAAAAACDB}{\bkmkend AAAAAAACDB}
00936         0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\par
{\bkmkstart AAAAAAACDC}{\bkmkend AAAAAAACDC}
00937         0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab,\par
{\bkmkstart AAAAAAACDD}{\bkmkend AAAAAAACDD}
00938         0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3,\par
{\bkmkstart AAAAAAACDE}{\bkmkend AAAAAAACDE}
00939         0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\par
{\bkmkstart AAAAAAACDF}{\bkmkend AAAAAAACDF}
00940         0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92,\par
{\bkmkstart AAAAAAACDG}{\bkmkend AAAAAAACDG}
00941         0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9,\par
{\bkmkstart AAAAAAACDH}{\bkmkend AAAAAAACDH}
00942         0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\par
{\bkmkstart AAAAAAACDI}{\bkmkend AAAAAAACDI}
00943         0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8,\par
{\bkmkstart AAAAAAACDJ}{\bkmkend AAAAAAACDJ}
00944         0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0\par
{\bkmkstart AAAAAAACDK}{\bkmkend AAAAAAACDK}
00945 \};\par
{\bkmkstart AAAAAAACDL}{\bkmkend AAAAAAACDL}
00946 \par
{\bkmkstart AAAAAAACDM}{\bkmkend AAAAAAACDM}
00947 {\cf18 void} CRC_Init({\cf18 unsigned} {\cf18 short} *crcvalue)\par
{\bkmkstart AAAAAAACDN}{\bkmkend AAAAAAACDN}
00948 \{\par
{\bkmkstart AAAAAAACDO}{\bkmkend AAAAAAACDO}
00949         *crcvalue = CRC_INIT_VALUE;\par
{\bkmkstart AAAAAAACDP}{\bkmkend AAAAAAACDP}
00950 \}\par
{\bkmkstart AAAAAAACDQ}{\bkmkend AAAAAAACDQ}
00951 \par
{\bkmkstart AAAAAAACDR}{\bkmkend AAAAAAACDR}
00952 {\cf18 void} CRC_ProcessByte({\cf18 unsigned} {\cf18 short} *crcvalue, {\cf18 byte} data)\par
{\bkmkstart AAAAAAACDS}{\bkmkend AAAAAAACDS}
00953 \{\par
{\bkmkstart AAAAAAACDT}{\bkmkend AAAAAAACDT}
00954         *crcvalue = (*crcvalue << 8) ^ crctable[(*crcvalue >> 8) ^ data];\par
{\bkmkstart AAAAAAACDU}{\bkmkend AAAAAAACDU}
00955 \}\par
{\bkmkstart AAAAAAACDV}{\bkmkend AAAAAAACDV}
00956 \par
{\bkmkstart AAAAAAACDW}{\bkmkend AAAAAAACDW}
00957 {\cf18 unsigned} {\cf18 short} CRC_Value({\cf18 unsigned} {\cf18 short} crcvalue)\par
{\bkmkstart AAAAAAACDX}{\bkmkend AAAAAAACDX}
00958 \{\par
{\bkmkstart AAAAAAACDY}{\bkmkend AAAAAAACDY}
00959         {\cf19 return} crcvalue ^ CRC_XOR_VALUE;\par
{\bkmkstart AAAAAAACDZ}{\bkmkend AAAAAAACDZ}
00960 \}\par
{\bkmkstart AAAAAAACEA}{\bkmkend AAAAAAACEA}
00961 \par
{\bkmkstart AAAAAAACEB}{\bkmkend AAAAAAACEB}
00962 {\cf20 /*}\par
{\bkmkstart AAAAAAACEC}{\bkmkend AAAAAAACEC}
00963 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAACED}{\bkmkend AAAAAAACED}
00964 {\cf20 */}\par
{\bkmkstart AAAAAAACEE}{\bkmkend AAAAAAACEE}
00965 \par
{\bkmkstart AAAAAAACEF}{\bkmkend AAAAAAACEF}
00966 {\cf20 /*}\par
{\bkmkstart AAAAAAACEG}{\bkmkend AAAAAAACEG}
00967 {\cf20 ============}\par
{\bkmkstart AAAAAAACEH}{\bkmkend AAAAAAACEH}
00968 {\cf20 CreatePath}\par
{\bkmkstart AAAAAAACEI}{\bkmkend AAAAAAACEI}
00969 {\cf20 ============}\par
{\bkmkstart AAAAAAACEJ}{\bkmkend AAAAAAACEJ}
00970 {\cf20 */}\par
{\bkmkstart AAAAAAACEK}{\bkmkend AAAAAAACEK}
00971 {\cf18 void}    CreatePath ({\cf18 char} *path)\par
{\bkmkstart AAAAAAACEL}{\bkmkend AAAAAAACEL}
00972 \{\par
{\bkmkstart AAAAAAACEM}{\bkmkend AAAAAAACEM}
00973         {\cf18 char}    *ofs, c;\par
{\bkmkstart AAAAAAACEN}{\bkmkend AAAAAAACEN}
00974 \par
{\bkmkstart AAAAAAACEO}{\bkmkend AAAAAAACEO}
00975         {\cf19 for} (ofs = path+1 ; *ofs ; ofs++)\par
{\bkmkstart AAAAAAACEP}{\bkmkend AAAAAAACEP}
00976         \{\par
{\bkmkstart AAAAAAACEQ}{\bkmkend AAAAAAACEQ}
00977                 c = *ofs;\par
{\bkmkstart AAAAAAACER}{\bkmkend AAAAAAACER}
00978                 {\cf19 if} (c == {\cf23 '/'} || c == {\cf23 '\\\\'})\par
{\bkmkstart AAAAAAACES}{\bkmkend AAAAAAACES}
00979                 \{       {\cf20 /* create the directory */}\par
{\bkmkstart AAAAAAACET}{\bkmkend AAAAAAACET}
00980                         *ofs = 0;\par
{\bkmkstart AAAAAAACEU}{\bkmkend AAAAAAACEU}
00981                         Q_mkdir (path);\par
{\bkmkstart AAAAAAACEV}{\bkmkend AAAAAAACEV}
00982                         *ofs = c;\par
{\bkmkstart AAAAAAACEW}{\bkmkend AAAAAAACEW}
00983                 \}\par
{\bkmkstart AAAAAAACEX}{\bkmkend AAAAAAACEX}
00984         \}\par
{\bkmkstart AAAAAAACEY}{\bkmkend AAAAAAACEY}
00985 \}\par
{\bkmkstart AAAAAAACEZ}{\bkmkend AAAAAAACEZ}
00986 \par
{\bkmkstart AAAAAAACFA}{\bkmkend AAAAAAACFA}
00987 \par
{\bkmkstart AAAAAAACFB}{\bkmkend AAAAAAACFB}
00988 {\cf20 /*}\par
{\bkmkstart AAAAAAACFC}{\bkmkend AAAAAAACFC}
00989 {\cf20 ============}\par
{\bkmkstart AAAAAAACFD}{\bkmkend AAAAAAACFD}
00990 {\cf20 QCopyFile}\par
{\bkmkstart AAAAAAACFE}{\bkmkend AAAAAAACFE}
00991 {\cf20 }\par
{\bkmkstart AAAAAAACFF}{\bkmkend AAAAAAACFF}
00992 {\cf20   Used to archive source files}\par
{\bkmkstart AAAAAAACFG}{\bkmkend AAAAAAACFG}
00993 {\cf20 ============}\par
{\bkmkstart AAAAAAACFH}{\bkmkend AAAAAAACFH}
00994 {\cf20 */}\par
{\bkmkstart AAAAAAACFI}{\bkmkend AAAAAAACFI}
00995 {\cf18 void} QCopyFile ({\cf18 char} *from, {\cf18 char} *to)\par
{\bkmkstart AAAAAAACFJ}{\bkmkend AAAAAAACFJ}
00996 \{\par
{\bkmkstart AAAAAAACFK}{\bkmkend AAAAAAACFK}
00997         {\cf18 void}    *buffer;\par
{\bkmkstart AAAAAAACFL}{\bkmkend AAAAAAACFL}
00998         {\cf18 int}             length;\par
{\bkmkstart AAAAAAACFM}{\bkmkend AAAAAAACFM}
00999 \par
{\bkmkstart AAAAAAACFN}{\bkmkend AAAAAAACFN}
01000         length = LoadFile (from, &buffer);\par
{\bkmkstart AAAAAAACFO}{\bkmkend AAAAAAACFO}
01001         CreatePath (to);\par
{\bkmkstart AAAAAAACFP}{\bkmkend AAAAAAACFP}
01002         SaveFile (to, buffer, length);\par
{\bkmkstart AAAAAAACFQ}{\bkmkend AAAAAAACFQ}
01003         free (buffer);\par
{\bkmkstart AAAAAAACFR}{\bkmkend AAAAAAACFR}
01004 \}\par
{\bkmkstart AAAAAAACFS}{\bkmkend AAAAAAACFS}
01005 \par
{\bkmkstart AAAAAAACFT}{\bkmkend AAAAAAACFT}
01006 \par
{\bkmkstart AAAAAAACFU}{\bkmkend AAAAAAACFU}
01007 {\cf20 /*}\par
{\bkmkstart AAAAAAACFV}{\bkmkend AAAAAAACFV}
01008 {\cf20 ============}\par
{\bkmkstart AAAAAAACFW}{\bkmkend AAAAAAACFW}
01009 {\cf20 ListPak}\par
{\bkmkstart AAAAAAACFX}{\bkmkend AAAAAAACFX}
01010 {\cf20 }\par
{\bkmkstart AAAAAAACFY}{\bkmkend AAAAAAACFY}
01011 {\cf20  Prints the contents of the specified pak file to stdout}\par
{\bkmkstart AAAAAAACFZ}{\bkmkend AAAAAAACFZ}
01012 {\cf20 ============}\par
{\bkmkstart AAAAAAACGA}{\bkmkend AAAAAAACGA}
01013 {\cf20 */}\par
{\bkmkstart AAAAAAACGB}{\bkmkend AAAAAAACGB}
01014 \par
{\bkmkstart AAAAAAACGC}{\bkmkend AAAAAAACGC}
01015 {\cf18 void} ListPak({\cf18 char}* pakname)\par
{\bkmkstart AAAAAAACGD}{\bkmkend AAAAAAACGD}
01016 \{\par
{\bkmkstart AAAAAAACGE}{\bkmkend AAAAAAACGE}
01017         FILE* f = SafeOpenRead(pakname);\par
{\bkmkstart AAAAAAACGF}{\bkmkend AAAAAAACGF}
01018         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 packheader_t}}}
 head;\par
{\bkmkstart AAAAAAACGH}{\bkmkend AAAAAAACGH}
01019         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 packfile_t}}}
* pdir;\par
{\bkmkstart AAAAAAACGJ}{\bkmkend AAAAAAACGJ}
01020         {\cf18 long} i=0,imax=0;\par
{\bkmkstart AAAAAAACGK}{\bkmkend AAAAAAACGK}
01021         {\cf18 long} totlen=0;\par
{\bkmkstart AAAAAAACGL}{\bkmkend AAAAAAACGL}
01022 \par
{\bkmkstart AAAAAAACGM}{\bkmkend AAAAAAACGM}
01023         SafeRead(f,&head,{\cf17 sizeof}({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 packheader_t}}}
));\par
{\bkmkstart AAAAAAACGN}{\bkmkend AAAAAAACGN}
01024         pdir=malloc(head.dirlen);\par
{\bkmkstart AAAAAAACGO}{\bkmkend AAAAAAACGO}
01025 \par
{\bkmkstart AAAAAAACGP}{\bkmkend AAAAAAACGP}
01026         fseek(f,head.dirofs,SEEK_SET);\par
{\bkmkstart AAAAAAACGQ}{\bkmkend AAAAAAACGQ}
01027         SafeRead(f,pdir,head.dirlen);\par
{\bkmkstart AAAAAAACGR}{\bkmkend AAAAAAACGR}
01028 \par
{\bkmkstart AAAAAAACGS}{\bkmkend AAAAAAACGS}
01029         fseek(f,0,SEEK_END);\par
{\bkmkstart AAAAAAACGT}{\bkmkend AAAAAAACGT}
01030         totlen=ftell(f);\par
{\bkmkstart AAAAAAACGU}{\bkmkend AAAAAAACGU}
01031 \par
{\bkmkstart AAAAAAACGV}{\bkmkend AAAAAAACGV}
01032         fclose(f);\par
{\bkmkstart AAAAAAACGW}{\bkmkend AAAAAAACGW}
01033 \par
{\bkmkstart AAAAAAACGX}{\bkmkend AAAAAAACGX}
01034         imax=head.dirlen/{\cf17 sizeof}({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 packfile_t}}}
);\par
{\bkmkstart AAAAAAACGY}{\bkmkend AAAAAAACGY}
01035 \par
{\bkmkstart AAAAAAACGZ}{\bkmkend AAAAAAACGZ}
01036         {\cf19 for}(i;i<imax;i++)\par
{\bkmkstart AAAAAAACHA}{\bkmkend AAAAAAACHA}
01037         \{\par
{\bkmkstart AAAAAAACHB}{\bkmkend AAAAAAACHB}
01038                 printf ({\cf22 "%64s : %7i\\n"}, pdir[i].name,pdir[i].filelen);\par
{\bkmkstart AAAAAAACHC}{\bkmkend AAAAAAACHC}
01039         \}\par
{\bkmkstart AAAAAAACHD}{\bkmkend AAAAAAACHD}
01040 \par
{\bkmkstart AAAAAAACHE}{\bkmkend AAAAAAACHE}
01041         printf({\cf22 "Total Length: %li bytes\\n"},totlen);\par
{\bkmkstart AAAAAAACHF}{\bkmkend AAAAAAACHF}
01042 \}\par
{\bkmkstart AAAAAAACHG}{\bkmkend AAAAAAACHG}
01043 \par
{\bkmkstart AAAAAAACHH}{\bkmkend AAAAAAACHH}
01044 \par
{\bkmkstart AAAAAAACHI}{\bkmkend AAAAAAACHI}
01045 \par
{\bkmkstart AAAAAAACHJ}{\bkmkend AAAAAAACHJ}
01046 {\cf18 long} flen(FILE* f)\par
{\bkmkstart AAAAAAACHK}{\bkmkend AAAAAAACHK}
01047 \{\par
{\bkmkstart AAAAAAACHL}{\bkmkend AAAAAAACHL}
01048         {\cf18 long} savepos=ftell(f);\par
{\bkmkstart AAAAAAACHM}{\bkmkend AAAAAAACHM}
01049         {\cf18 long} filelen=0;\par
{\bkmkstart AAAAAAACHN}{\bkmkend AAAAAAACHN}
01050 \par
{\bkmkstart AAAAAAACHO}{\bkmkend AAAAAAACHO}
01051         fseek(f,0,SEEK_END);\par
{\bkmkstart AAAAAAACHP}{\bkmkend AAAAAAACHP}
01052         filelen=ftell(f);\par
{\bkmkstart AAAAAAACHQ}{\bkmkend AAAAAAACHQ}
01053 \par
{\bkmkstart AAAAAAACHR}{\bkmkend AAAAAAACHR}
01054         fseek(f,savepos,SEEK_SET);\par
{\bkmkstart AAAAAAACHS}{\bkmkend AAAAAAACHS}
01055         {\cf19 return} filelen;\par
{\bkmkstart AAAAAAACHT}{\bkmkend AAAAAAACHT}
01056 \}\par
{\bkmkstart AAAAAAACHU}{\bkmkend AAAAAAACHU}
01057 \par
{\bkmkstart AAAAAAACHV}{\bkmkend AAAAAAACHV}
01058 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cmdlib.h\par \pard\plain 
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAACHX}{\bkmkend AAAAAAACHX}
00001 {\cf20 /***}\par
{\bkmkstart AAAAAAACHY}{\bkmkend AAAAAAACHY}
00002 {\cf20 *}\par
{\bkmkstart AAAAAAACHZ}{\bkmkend AAAAAAACHZ}
00003 {\cf20 *       Copyright (c) 1996-2002, Valve LLC. All rights reserved.}\par
{\bkmkstart AAAAAAACIA}{\bkmkend AAAAAAACIA}
00004 {\cf20 *}\par
{\bkmkstart AAAAAAACIB}{\bkmkend AAAAAAACIB}
00005 {\cf20 *       This product contains software technology licensed from Id}\par
{\bkmkstart AAAAAAACIC}{\bkmkend AAAAAAACIC}
00006 {\cf20 *       Software, Inc. ("Id Technology").  Id Technology (c) 1996 Id Software, Inc.}\par
{\bkmkstart AAAAAAACID}{\bkmkend AAAAAAACID}
00007 {\cf20 *       All Rights Reserved.}\par
{\bkmkstart AAAAAAACIE}{\bkmkend AAAAAAACIE}
00008 {\cf20 *}\par
{\bkmkstart AAAAAAACIF}{\bkmkend AAAAAAACIF}
00009 {\cf20 ****/}\par
{\bkmkstart AAAAAAACIG}{\bkmkend AAAAAAACIG}
00010 \par
{\bkmkstart AAAAAAACIH}{\bkmkend AAAAAAACIH}
00011 {\cf20 /* cmdlib.h */}\par
{\bkmkstart AAAAAAACII}{\bkmkend AAAAAAACII}
00012 \par
{\bkmkstart AAAAAAACIJ}{\bkmkend AAAAAAACIJ}
00013 {\cf20 /*}\par
{\bkmkstart AAAAAAACIK}{\bkmkend AAAAAAACIK}
00014 {\cf20 =================}\par
{\bkmkstart AAAAAAACIL}{\bkmkend AAAAAAACIL}
00015 {\cf20 last modified: 2023/3/25}\par
{\bkmkstart AAAAAAACIM}{\bkmkend AAAAAAACIM}
00016 {\cf20 =================}\par
{\bkmkstart AAAAAAACIN}{\bkmkend AAAAAAACIN}
00017 {\cf20 */}\par
{\bkmkstart AAAAAAACIO}{\bkmkend AAAAAAACIO}
00018 \par
{\bkmkstart AAAAAAACIP}{\bkmkend AAAAAAACIP}
00019 {\cf21 #ifndef __CMDLIB__}\par
{\bkmkstart AAAAAAACIQ}{\bkmkend AAAAAAACIQ}
00020 {\cf21 #define __CMDLIB__}\par
{\bkmkstart AAAAAAACIR}{\bkmkend AAAAAAACIR}
00021 \par
{\bkmkstart AAAAAAACIS}{\bkmkend AAAAAAACIS}
00022 \par
{\bkmkstart AAAAAAACIT}{\bkmkend AAAAAAACIT}
00023 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAACIU}{\bkmkend AAAAAAACIU}
00024 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAACIV}{\bkmkend AAAAAAACIV}
00025 \{\par
{\bkmkstart AAAAAAACIW}{\bkmkend AAAAAAACIW}
00026 {\cf21 #endif}\par
{\bkmkstart AAAAAAACIX}{\bkmkend AAAAAAACIX}
00027 \par
{\bkmkstart AAAAAAACIY}{\bkmkend AAAAAAACIY}
00028 \par
{\bkmkstart AAAAAAACIZ}{\bkmkend AAAAAAACIZ}
00029 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAACJA}{\bkmkend AAAAAAACJA}
00030 \par
{\bkmkstart AAAAAAACJB}{\bkmkend AAAAAAACJB}
00031 \par
{\bkmkstart AAAAAAACJC}{\bkmkend AAAAAAACJC}
00032 {\cf21 #ifndef __CMDUTIL__}\par
{\bkmkstart AAAAAAACJD}{\bkmkend AAAAAAACJD}
00033 {\cf21 #define __CMDUTIL__}\par
{\bkmkstart AAAAAAACJE}{\bkmkend AAAAAAACJE}
00034 {\cf21 #ifndef _NOENUMQBOOL}\par
{\bkmkstart AAAAAAACJF}{\bkmkend AAAAAAACJF}
00035 {\cf17 typedef} {\cf17 enum} \{{\cf17 false}, {\cf17 true}\} qboolean;\par
{\bkmkstart AAAAAAACJG}{\bkmkend AAAAAAACJG}
00036 {\cf21 #else}\par
{\bkmkstart AAAAAAACJH}{\bkmkend AAAAAAACJH}
00037 {\cf17 typedef} {\cf18 int} qboolean;\par
{\bkmkstart AAAAAAACJI}{\bkmkend AAAAAAACJI}
00038 {\cf21 #undef true}\par
{\bkmkstart AAAAAAACJJ}{\bkmkend AAAAAAACJJ}
00039 {\cf21 #undef false}\par
{\bkmkstart AAAAAAACJK}{\bkmkend AAAAAAACJK}
00040 {\cf21 #define true 1}\par
{\bkmkstart AAAAAAACJL}{\bkmkend AAAAAAACJL}
00041 {\cf21 #define false 0}\par
{\bkmkstart AAAAAAACJM}{\bkmkend AAAAAAACJM}
00042 {\cf21 #endif}\par
{\bkmkstart AAAAAAACJN}{\bkmkend AAAAAAACJN}
00043 \par
{\bkmkstart AAAAAAACJO}{\bkmkend AAAAAAACJO}
00044 {\cf17 typedef} {\cf18 unsigned} {\cf18 char} byte;\par
{\bkmkstart AAAAAAACJP}{\bkmkend AAAAAAACJP}
00045 {\cf21 #endif}\par
{\bkmkstart AAAAAAACJQ}{\bkmkend AAAAAAACJQ}
00046 \par
{\bkmkstart AAAAAAACJR}{\bkmkend AAAAAAACJR}
00047 {\cf20 /* the dec offsetof macro doesn't work very well... */}\par
{\bkmkstart AAAAAAACJS}{\bkmkend AAAAAAACJS}
00048 {\cf21 #define myoffsetof(type,identifier) ((size_t)&((type *)0)->identifier)}\par
{\bkmkstart AAAAAAACJT}{\bkmkend AAAAAAACJT}
00049 \par
{\bkmkstart AAAAAAACJU}{\bkmkend AAAAAAACJU}
00050 \par
{\bkmkstart AAAAAAACJV}{\bkmkend AAAAAAACJV}
00051 {\cf20 /* set these before calling CheckParm */}\par
{\bkmkstart AAAAAAACJW}{\bkmkend AAAAAAACJW}
00052 {\cf17 extern} {\cf18 int} myargc;\par
{\bkmkstart AAAAAAACJX}{\bkmkend AAAAAAACJX}
00053 {\cf17 extern} {\cf18 char} **myargv;\par
{\bkmkstart AAAAAAACJY}{\bkmkend AAAAAAACJY}
00054 \par
{\bkmkstart AAAAAAACJZ}{\bkmkend AAAAAAACJZ}
00055 {\cf18 void} COM_FixSlashes( {\cf18 char} *pname );\par
{\bkmkstart AAAAAAACKA}{\bkmkend AAAAAAACKA}
00056 {\cf18 char} *strupr ({\cf18 char} *in);\par
{\bkmkstart AAAAAAACKB}{\bkmkend AAAAAAACKB}
00057 {\cf18 char} *strlower ({\cf18 char} *in);\par
{\bkmkstart AAAAAAACKC}{\bkmkend AAAAAAACKC}
00058 {\cf18 int} Q_strncasecmp ({\cf18 char} *s1, {\cf18 char} *s2, {\cf18 int} n);\par
{\bkmkstart AAAAAAACKD}{\bkmkend AAAAAAACKD}
00059 {\cf18 int} Q_strcasecmp ({\cf18 char} *s1, {\cf18 char} *s2);\par
{\bkmkstart AAAAAAACKE}{\bkmkend AAAAAAACKE}
00060 {\cf18 void} Q_getwd ({\cf18 char} *out);\par
{\bkmkstart AAAAAAACKF}{\bkmkend AAAAAAACKF}
00061 \par
{\bkmkstart AAAAAAACKG}{\bkmkend AAAAAAACKG}
00062 {\cf18 int} Q_filelength (FILE *f);\par
{\bkmkstart AAAAAAACKH}{\bkmkend AAAAAAACKH}
00063 {\cf18 int}     FileTime ({\cf18 char} *path);\par
{\bkmkstart AAAAAAACKI}{\bkmkend AAAAAAACKI}
00064 \par
{\bkmkstart AAAAAAACKJ}{\bkmkend AAAAAAACKJ}
00065 {\cf18 void}    Q_mkdir ({\cf18 char} *path);\par
{\bkmkstart AAAAAAACKK}{\bkmkend AAAAAAACKK}
00066 \par
{\bkmkstart AAAAAAACKL}{\bkmkend AAAAAAACKL}
00067 {\cf17 extern}  {\cf18 char}            qdir[1024];\par
{\bkmkstart AAAAAAACKM}{\bkmkend AAAAAAACKM}
00068 {\cf17 extern}  {\cf18 char}            gamedir[1024];\par
{\bkmkstart AAAAAAACKN}{\bkmkend AAAAAAACKN}
00069 {\cf18 void} SetQdirFromPath ({\cf18 char} *path);\par
{\bkmkstart AAAAAAACKO}{\bkmkend AAAAAAACKO}
00070 {\cf18 char} *ExpandArg ({\cf18 char} *path);   {\cf20 /* from cmd line */}\par
{\bkmkstart AAAAAAACKP}{\bkmkend AAAAAAACKP}
00071 {\cf18 char} *ExpandPath ({\cf18 char} *path);  {\cf20 /* from scripts  */}\par
{\bkmkstart AAAAAAACKQ}{\bkmkend AAAAAAACKQ}
00072 {\cf18 char} *ExpandPathAndArchive ({\cf18 char} *path);\par
{\bkmkstart AAAAAAACKR}{\bkmkend AAAAAAACKR}
00073 \par
{\bkmkstart AAAAAAACKS}{\bkmkend AAAAAAACKS}
00074 \par
{\bkmkstart AAAAAAACKT}{\bkmkend AAAAAAACKT}
00075 {\cf18 double} I_FloatTime ({\cf18 void});\par
{\bkmkstart AAAAAAACKU}{\bkmkend AAAAAAACKU}
00076 \par
{\bkmkstart AAAAAAACKV}{\bkmkend AAAAAAACKV}
00077 {\cf18 void}    Error ({\cf18 char} *error, ...);\par
{\bkmkstart AAAAAAACKW}{\bkmkend AAAAAAACKW}
00078 {\cf18 int}             CheckParm ({\cf18 char} *check);\par
{\bkmkstart AAAAAAACKX}{\bkmkend AAAAAAACKX}
00079 \par
{\bkmkstart AAAAAAACKY}{\bkmkend AAAAAAACKY}
00080 FILE    *SafeOpenWrite ({\cf18 char} *filename);\par
{\bkmkstart AAAAAAACKZ}{\bkmkend AAAAAAACKZ}
00081 FILE    *SafeOpenRead ({\cf18 char} *filename);\par
{\bkmkstart AAAAAAACLA}{\bkmkend AAAAAAACLA}
00082 {\cf18 void}    SafeRead (FILE *f, {\cf18 void} *buffer, {\cf18 int} count);\par
{\bkmkstart AAAAAAACLB}{\bkmkend AAAAAAACLB}
00083 {\cf18 void}    SafeWrite (FILE *f, {\cf18 void} *buffer, {\cf18 int} count);\par
{\bkmkstart AAAAAAACLC}{\bkmkend AAAAAAACLC}
00084 \par
{\bkmkstart AAAAAAACLD}{\bkmkend AAAAAAACLD}
00085 {\cf18 int}             LoadFile ({\cf18 char} *filename, {\cf18 void} **bufferptr);\par
{\bkmkstart AAAAAAACLE}{\bkmkend AAAAAAACLE}
00086 {\cf18 void}    SaveFile ({\cf18 char} *filename, {\cf18 void} *buffer, {\cf18 int} count);\par
{\bkmkstart AAAAAAACLF}{\bkmkend AAAAAAACLF}
00087 \par
{\bkmkstart AAAAAAACLG}{\bkmkend AAAAAAACLG}
00088 {\cf18 void}    DefaultExtension ({\cf18 char} *path, {\cf18 char} *extension);\par
{\bkmkstart AAAAAAACLH}{\bkmkend AAAAAAACLH}
00089 {\cf18 void}    DefaultPath ({\cf18 char} *path, {\cf18 char} *basepath);\par
{\bkmkstart AAAAAAACLI}{\bkmkend AAAAAAACLI}
00090 {\cf18 void}    StripFilename ({\cf18 char} *path);\par
{\bkmkstart AAAAAAACLJ}{\bkmkend AAAAAAACLJ}
00091 {\cf18 void}    StripExtension ({\cf18 char} *path);\par
{\bkmkstart AAAAAAACLK}{\bkmkend AAAAAAACLK}
00092 \par
{\bkmkstart AAAAAAACLL}{\bkmkend AAAAAAACLL}
00093 {\cf18 void}    ExtractFilePath ({\cf18 char} *path, {\cf18 char} *dest);\par
{\bkmkstart AAAAAAACLM}{\bkmkend AAAAAAACLM}
00094 {\cf18 void}    ExtractFileBase ({\cf18 char} *path, {\cf18 char} *dest);\par
{\bkmkstart AAAAAAACLN}{\bkmkend AAAAAAACLN}
00095 {\cf18 void}    ExtractFileExtension ({\cf18 char} *path, {\cf18 char} *dest);\par
{\bkmkstart AAAAAAACLO}{\bkmkend AAAAAAACLO}
00096 \par
{\bkmkstart AAAAAAACLP}{\bkmkend AAAAAAACLP}
00097 {\cf18 int}     ParseNum ({\cf18 char} *str);\par
{\bkmkstart AAAAAAACLQ}{\bkmkend AAAAAAACLQ}
00098 \par
{\bkmkstart AAAAAAACLR}{\bkmkend AAAAAAACLR}
00099 {\cf18 short}   BigShort ({\cf18 short} l);\par
{\bkmkstart AAAAAAACLS}{\bkmkend AAAAAAACLS}
00100 {\cf18 short}   LittleShort ({\cf18 short} l);\par
{\bkmkstart AAAAAAACLT}{\bkmkend AAAAAAACLT}
00101 {\cf18 int}             BigLong ({\cf18 int} l);\par
{\bkmkstart AAAAAAACLU}{\bkmkend AAAAAAACLU}
00102 {\cf18 int}             LittleLong ({\cf18 int} l);\par
{\bkmkstart AAAAAAACLV}{\bkmkend AAAAAAACLV}
00103 {\cf18 float}   BigFloat ({\cf18 float} l);\par
{\bkmkstart AAAAAAACLW}{\bkmkend AAAAAAACLW}
00104 {\cf18 float}   LittleFloat ({\cf18 float} l);\par
{\bkmkstart AAAAAAACLX}{\bkmkend AAAAAAACLX}
00105 \par
{\bkmkstart AAAAAAACLY}{\bkmkend AAAAAAACLY}
00106 {\cf18 long} flen(FILE* f);\par
{\bkmkstart AAAAAAACLZ}{\bkmkend AAAAAAACLZ}
00107 \par
{\bkmkstart AAAAAAACMA}{\bkmkend AAAAAAACMA}
00108 \par
{\bkmkstart AAAAAAACMB}{\bkmkend AAAAAAACMB}
00109 \par
{\bkmkstart AAAAAAACMC}{\bkmkend AAAAAAACMC}
00110 {\cf18 char} *COM_Parse ({\cf18 char} *data);\par
{\bkmkstart AAAAAAACMD}{\bkmkend AAAAAAACMD}
00111 \par
{\bkmkstart AAAAAAACME}{\bkmkend AAAAAAACME}
00112 {\cf17 extern}  {\cf18 char}            com_token[1024];\par
{\bkmkstart AAAAAAACMF}{\bkmkend AAAAAAACMF}
00113 {\cf17 extern}  qboolean        com_eof;\par
{\bkmkstart AAAAAAACMG}{\bkmkend AAAAAAACMG}
00114 \par
{\bkmkstart AAAAAAACMH}{\bkmkend AAAAAAACMH}
00115 {\cf18 char} *copystring({\cf18 char} *s);\par
{\bkmkstart AAAAAAACMI}{\bkmkend AAAAAAACMI}
00116 \par
{\bkmkstart AAAAAAACMJ}{\bkmkend AAAAAAACMJ}
00117 \par
{\bkmkstart AAAAAAACMK}{\bkmkend AAAAAAACMK}
00118 {\cf18 void} CRC_Init({\cf18 unsigned} {\cf18 short} *crcvalue);\par
{\bkmkstart AAAAAAACML}{\bkmkend AAAAAAACML}
00119 {\cf18 void} CRC_ProcessByte({\cf18 unsigned} {\cf18 short} *crcvalue, {\cf18 byte} data);\par
{\bkmkstart AAAAAAACMM}{\bkmkend AAAAAAACMM}
00120 {\cf18 unsigned} {\cf18 short} CRC_Value({\cf18 unsigned} {\cf18 short} crcvalue);\par
{\bkmkstart AAAAAAACMN}{\bkmkend AAAAAAACMN}
00121 \par
{\bkmkstart AAAAAAACMO}{\bkmkend AAAAAAACMO}
00122 {\cf18 void}    CreatePath ({\cf18 char} *path);\par
{\bkmkstart AAAAAAACMP}{\bkmkend AAAAAAACMP}
00123 {\cf18 void}    QCopyFile ({\cf18 char} *from, {\cf18 char} *to);\par
{\bkmkstart AAAAAAACMQ}{\bkmkend AAAAAAACMQ}
00124 \par
{\bkmkstart AAAAAAACMR}{\bkmkend AAAAAAACMR}
00125 {\cf17 extern}  qboolean                archive;\par
{\bkmkstart AAAAAAACMS}{\bkmkend AAAAAAACMS}
00126 {\cf17 extern}  {\cf18 char}                    archivedir[1024];\par
{\bkmkstart AAAAAAACMT}{\bkmkend AAAAAAACMT}
00127 \par
{\bkmkstart AAAAAAACMU}{\bkmkend AAAAAAACMU}
00128 \par
{\bkmkstart AAAAAAACMV}{\bkmkend AAAAAAACMV}
00129 {\cf17 extern}  qboolean verbose;\par
{\bkmkstart AAAAAAACMW}{\bkmkend AAAAAAACMW}
00130 {\cf18 void} qprintf ({\cf18 char} *format, ...);\par
{\bkmkstart AAAAAAACMX}{\bkmkend AAAAAAACMX}
00131 \par
{\bkmkstart AAAAAAACMY}{\bkmkend AAAAAAACMY}
00132 \par
{\bkmkstart AAAAAAACMZ}{\bkmkend AAAAAAACMZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 00133}}}
 {\cf17 typedef} {\cf17 struct}\par
{\bkmkstart AAAAAAACNA}{\bkmkend AAAAAAACNA}
00134 \{\par
{\bkmkstart AAAAAAACNB}{\bkmkend AAAAAAACNB}
00135     {\cf18 char}        name[56];\par
{\bkmkstart AAAAAAACNC}{\bkmkend AAAAAAACNC}
00136     {\cf18 int}         filepos, filelen;\par
{\bkmkstart AAAAAAACND}{\bkmkend AAAAAAACND}
00137 \} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 packfile_t}}}
;\par
{\bkmkstart AAAAAAACNE}{\bkmkend AAAAAAACNE}
00138 \par
{\bkmkstart AAAAAAACNF}{\bkmkend AAAAAAACNF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 00139}}}
 {\cf17 typedef} {\cf17 struct}\par
{\bkmkstart AAAAAAACNG}{\bkmkend AAAAAAACNG}
00140 \{\par
{\bkmkstart AAAAAAACNH}{\bkmkend AAAAAAACNH}
00141     {\cf18 char}        {\cf18 id}[4];\par
{\bkmkstart AAAAAAACNI}{\bkmkend AAAAAAACNI}
00142     {\cf18 int}         dirofs;\par
{\bkmkstart AAAAAAACNJ}{\bkmkend AAAAAAACNJ}
00143     {\cf18 int}         dirlen;\par
{\bkmkstart AAAAAAACNK}{\bkmkend AAAAAAACNK}
00144 \} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 packheader_t}}}
;\par
{\bkmkstart AAAAAAACNL}{\bkmkend AAAAAAACNL}
00145 \par
{\bkmkstart AAAAAAACNM}{\bkmkend AAAAAAACNM}
00146 \par
{\bkmkstart AAAAAAACNN}{\bkmkend AAAAAAACNN}
00147 {\cf18 void} ListPak({\cf18 char}* pakname);\par
{\bkmkstart AAAAAAACNO}{\bkmkend AAAAAAACNO}
00148 \par
{\bkmkstart AAAAAAACNP}{\bkmkend AAAAAAACNP}
00149 \par
{\bkmkstart AAAAAAACNQ}{\bkmkend AAAAAAACNQ}
00150 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAACNR}{\bkmkend AAAAAAACNR}
00151 \}\par
{\bkmkstart AAAAAAACNS}{\bkmkend AAAAAAACNS}
00152 {\cf21 #endif}\par
{\bkmkstart AAAAAAACNT}{\bkmkend AAAAAAACNT}
00153 \par
{\bkmkstart AAAAAAACNU}{\bkmkend AAAAAAACNU}
00154 {\cf21 #endif }{\cf20 /*__CMDLIB__*/}{\cf21 }\par
{\bkmkstart AAAAAAACNV}{\bkmkend AAAAAAACNV}
00155 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CmdLine.h\par \pard\plain 
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAACNX}{\bkmkend AAAAAAACNX}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAACNY}{\bkmkend AAAAAAACNY}
00002 {\cf20 //}\par
{\bkmkstart AAAAAAACNZ}{\bkmkend AAAAAAACNZ}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAACOA}{\bkmkend AAAAAAACOA}
00004 {\cf20 //}\par
{\bkmkstart AAAAAAACOB}{\bkmkend AAAAAAACOB}
00005 {\cf20 // file: CmdLine.h}\par
{\bkmkstart AAAAAAACOC}{\bkmkend AAAAAAACOC}
00006 {\cf20 // last modified:}\par
{\bkmkstart AAAAAAACOD}{\bkmkend AAAAAAACOD}
00007 {\cf20 // copyright:}\par
{\bkmkstart AAAAAAACOE}{\bkmkend AAAAAAACOE}
00008 {\cf20 // version:}\par
{\bkmkstart AAAAAAACOF}{\bkmkend AAAAAAACOF}
00009 {\cf20 //}\par
{\bkmkstart AAAAAAACOG}{\bkmkend AAAAAAACOG}
00010 {\cf20 // email:}\par
{\bkmkstart AAAAAAACOH}{\bkmkend AAAAAAACOH}
00011 {\cf20 // web:}\par
{\bkmkstart AAAAAAACOI}{\bkmkend AAAAAAACOI}
00012 {\cf20 //}\par
{\bkmkstart AAAAAAACOJ}{\bkmkend AAAAAAACOJ}
00013 {\cf20 */}\par
{\bkmkstart AAAAAAACOK}{\bkmkend AAAAAAACOK}
00014 \par
{\bkmkstart AAAAAAACOL}{\bkmkend AAAAAAACOL}
00015 {\cf21 #ifndef INCLUDED_CMDLINE}\par
{\bkmkstart AAAAAAACOM}{\bkmkend AAAAAAACOM}
00016 {\cf21 #define INCLUDED_CMDLINE}\par
{\bkmkstart AAAAAAACON}{\bkmkend AAAAAAACON}
00017 \par
{\bkmkstart AAAAAAACOO}{\bkmkend AAAAAAACOO}
00018 {\cf21 #include <cstdio>}\par
{\bkmkstart AAAAAAACOP}{\bkmkend AAAAAAACOP}
00019 {\cf21 #include <vector>}\par
{\bkmkstart AAAAAAACOQ}{\bkmkend AAAAAAACOQ}
00020 {\cf21 #include <iterator>}\par
{\bkmkstart AAAAAAACOR}{\bkmkend AAAAAAACOR}
00021 \par
{\bkmkstart AAAAAAACOS}{\bkmkend AAAAAAACOS}
00022 \par
{\bkmkstart AAAAAAACOT}{\bkmkend AAAAAAACOT}
00023 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAACOU}{\bkmkend AAAAAAACOU}
00024 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAACOV}{\bkmkend AAAAAAACOV}
00025 \{\par
{\bkmkstart AAAAAAACOW}{\bkmkend AAAAAAACOW}
00026 {\cf21 #endif}\par
{\bkmkstart AAAAAAACOX}{\bkmkend AAAAAAACOX}
00027 \par
{\bkmkstart AAAAAAACOY}{\bkmkend AAAAAAACOY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 00028}}}
 {\cf17 typedef} {\cf17 struct}\par
{\bkmkstart AAAAAAACPA}{\bkmkend AAAAAAACPA}
00029 \{\par
{\bkmkstart AAAAAAACPB}{\bkmkend AAAAAAACPB}
00030     {\cf18 unsigned} {\cf18 char} x0;\par
{\bkmkstart AAAAAAACPC}{\bkmkend AAAAAAACPC}
00031     {\cf18 unsigned} {\cf18 char} y0;\par
{\bkmkstart AAAAAAACPD}{\bkmkend AAAAAAACPD}
00032     {\cf18 unsigned} {\cf18 char} x1;\par
{\bkmkstart AAAAAAACPE}{\bkmkend AAAAAAACPE}
00033     {\cf18 unsigned} {\cf18 char} y1;\par
{\bkmkstart AAAAAAACPF}{\bkmkend AAAAAAACPF}
00034 \} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
;\par
{\bkmkstart AAAAAAACPG}{\bkmkend AAAAAAACPG}
00035 \par
{\bkmkstart AAAAAAACPH}{\bkmkend AAAAAAACPH}
00036 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAACPI}{\bkmkend AAAAAAACPI}
00037 \}\par
{\bkmkstart AAAAAAACPJ}{\bkmkend AAAAAAACPJ}
00038 {\cf21 #endif}\par
{\bkmkstart AAAAAAACPK}{\bkmkend AAAAAAACPK}
00039 \par
{\bkmkstart AAAAAAACPL}{\bkmkend AAAAAAACPL}
00040 {\cf17 typedef} std::vector<line_t> drawlines_t;\par
{\bkmkstart AAAAAAACPM}{\bkmkend AAAAAAACPM}
00041 \par
{\bkmkstart AAAAAAACPN}{\bkmkend AAAAAAACPN}
00042 \par
{\bkmkstart AAAAAAACPO}{\bkmkend AAAAAAACPO}
00043 {\cf21 #endif }{\cf20 // INCLUDED_CMDLINE}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxBmp.cpp\par \pard\plain 
{\tc\tcl2 \v mxBmp.cpp}
{\xe \v mxBmp.cpp}
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAACPQ}{\bkmkend AAAAAAACPQ}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAACPR}{\bkmkend AAAAAAACPR}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAACPS}{\bkmkend AAAAAAACPS}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAACPT}{\bkmkend AAAAAAACPT}
00004 {\cf20 // file:           mxBmp.cpp}\par
{\bkmkstart AAAAAAACPU}{\bkmkend AAAAAAACPU}
00005 {\cf20 // implementation: all}\par
{\bkmkstart AAAAAAACPV}{\bkmkend AAAAAAACPV}
00006 {\cf20 // last modified:  Apr 15 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAACPW}{\bkmkend AAAAAAACPW}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAACPX}{\bkmkend AAAAAAACPX}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAACPY}{\bkmkend AAAAAAACPY}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAACPZ}{\bkmkend AAAAAAACPZ}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAACQA}{\bkmkend AAAAAAACQA}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAACQB}{\bkmkend AAAAAAACQB}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAACQC}{\bkmkend AAAAAAACQC}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAACQD}{\bkmkend AAAAAAACQD}
00014 {\cf20 /***}\par
{\bkmkstart AAAAAAACQE}{\bkmkend AAAAAAACQE}
00015 {\cf20 *}\par
{\bkmkstart AAAAAAACQF}{\bkmkend AAAAAAACQF}
00016 {\cf20 *       Copyright (c) 1998, Valve LLC. All rights reserved.}\par
{\bkmkstart AAAAAAACQG}{\bkmkend AAAAAAACQG}
00017 {\cf20 *       }\par
{\bkmkstart AAAAAAACQH}{\bkmkend AAAAAAACQH}
00018 {\cf20 *       This product contains software technology licensed from Id }\par
{\bkmkstart AAAAAAACQI}{\bkmkend AAAAAAACQI}
00019 {\cf20 *       Software, Inc. ("Id Technology").  Id Technology (c) 1996 Id Software, Inc. }\par
{\bkmkstart AAAAAAACQJ}{\bkmkend AAAAAAACQJ}
00020 {\cf20 *       All Rights Reserved.}\par
{\bkmkstart AAAAAAACQK}{\bkmkend AAAAAAACQK}
00021 {\cf20 *}\par
{\bkmkstart AAAAAAACQL}{\bkmkend AAAAAAACQL}
00022 {\cf20 ****/}\par
{\bkmkstart AAAAAAACQM}{\bkmkend AAAAAAACQM}
00023 \par
{\bkmkstart AAAAAAACQN}{\bkmkend AAAAAAACQN}
00024 {\cf20 // lbmlib.c}\par
{\bkmkstart AAAAAAACQO}{\bkmkend AAAAAAACQO}
00025 \par
{\bkmkstart AAAAAAACQP}{\bkmkend AAAAAAACQP}
00026 {\cf21 #include <mx/mxBmp.h>}\par
{\bkmkstart AAAAAAACQQ}{\bkmkend AAAAAAACQQ}
00027 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAACQR}{\bkmkend AAAAAAACQR}
00028 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAACQS}{\bkmkend AAAAAAACQS}
00029 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAACQT}{\bkmkend AAAAAAACQT}
00030 \par
{\bkmkstart AAAAAAACQU}{\bkmkend AAAAAAACQU}
00031 \par
{\bkmkstart AAAAAAACQV}{\bkmkend AAAAAAACQV}
00032 \par
{\bkmkstart AAAAAAACQW}{\bkmkend AAAAAAACQW}
00033 mxImage *\par
{\bkmkstart AAAAAAACQX}{\bkmkend AAAAAAACQX}
00034 mxBmpRead ({\cf17 const} {\cf18 char} *filename)\par
{\bkmkstart AAAAAAACQY}{\bkmkend AAAAAAACQY}
00035 \{\par
{\bkmkstart AAAAAAACQZ}{\bkmkend AAAAAAACQZ}
00036         {\cf18 int} i;\par
{\bkmkstart AAAAAAACRA}{\bkmkend AAAAAAACRA}
00037         FILE *pfile = 0;\par
{\bkmkstart AAAAAAACRB}{\bkmkend AAAAAAACRB}
00038         mxBitmapFileHeader bmfh;\par
{\bkmkstart AAAAAAACRC}{\bkmkend AAAAAAACRC}
00039         mxBitmapInfoHeader bmih;\par
{\bkmkstart AAAAAAACRD}{\bkmkend AAAAAAACRD}
00040         mxBitmapRGBQuad rgrgbPalette[256];\par
{\bkmkstart AAAAAAACRE}{\bkmkend AAAAAAACRE}
00041         {\cf18 int} cbBmpBits;\par
{\bkmkstart AAAAAAACRF}{\bkmkend AAAAAAACRF}
00042         {\cf18 byte} *pbBmpBits;\par
{\bkmkstart AAAAAAACRG}{\bkmkend AAAAAAACRG}
00043         {\cf18 byte} *pb, *pbHold;\par
{\bkmkstart AAAAAAACRH}{\bkmkend AAAAAAACRH}
00044         {\cf18 int} cbPalBytes;\par
{\bkmkstart AAAAAAACRI}{\bkmkend AAAAAAACRI}
00045         {\cf18 int} biTrueWidth;\par
{\bkmkstart AAAAAAACRJ}{\bkmkend AAAAAAACRJ}
00046         mxImage *image = 0;\par
{\bkmkstart AAAAAAACRK}{\bkmkend AAAAAAACRK}
00047 \par
{\bkmkstart AAAAAAACRL}{\bkmkend AAAAAAACRL}
00048         {\cf20 // File exists?}\par
{\bkmkstart AAAAAAACRM}{\bkmkend AAAAAAACRM}
00049         {\cf19 if} ((pfile = fopen (filename, {\cf22 "rb"})) == 0)\par
{\bkmkstart AAAAAAACRN}{\bkmkend AAAAAAACRN}
00050                 {\cf19 return} 0;\par
{\bkmkstart AAAAAAACRO}{\bkmkend AAAAAAACRO}
00051         \par
{\bkmkstart AAAAAAACRP}{\bkmkend AAAAAAACRP}
00052         {\cf20 // Read file header}\par
{\bkmkstart AAAAAAACRQ}{\bkmkend AAAAAAACRQ}
00053         {\cf19 if} (fread (&bmfh, {\cf17 sizeof} bmfh, 1{\cf20 /*count*/}, pfile) != 1)\par
{\bkmkstart AAAAAAACRR}{\bkmkend AAAAAAACRR}
00054                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACRS}{\bkmkend AAAAAAACRS}
00055 \par
{\bkmkstart AAAAAAACRT}{\bkmkend AAAAAAACRT}
00056         {\cf20 // Bogus file header check}\par
{\bkmkstart AAAAAAACRU}{\bkmkend AAAAAAACRU}
00057         {\cf19 if} (!(bmfh.bfReserved1 == 0 && bmfh.bfReserved2 == 0))\par
{\bkmkstart AAAAAAACRV}{\bkmkend AAAAAAACRV}
00058                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACRW}{\bkmkend AAAAAAACRW}
00059 \par
{\bkmkstart AAAAAAACRX}{\bkmkend AAAAAAACRX}
00060         {\cf20 // Read info header}\par
{\bkmkstart AAAAAAACRY}{\bkmkend AAAAAAACRY}
00061         {\cf19 if} (fread (&bmih, {\cf17 sizeof} bmih, 1{\cf20 /*count*/}, pfile) != 1)\par
{\bkmkstart AAAAAAACRZ}{\bkmkend AAAAAAACRZ}
00062                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACSA}{\bkmkend AAAAAAACSA}
00063 \par
{\bkmkstart AAAAAAACSB}{\bkmkend AAAAAAACSB}
00064         {\cf20 // Bogus info header check}\par
{\bkmkstart AAAAAAACSC}{\bkmkend AAAAAAACSC}
00065         {\cf19 if} (!(bmih.biSize == {\cf17 sizeof} bmih && bmih.biPlanes == 1))\par
{\bkmkstart AAAAAAACSD}{\bkmkend AAAAAAACSD}
00066                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACSE}{\bkmkend AAAAAAACSE}
00067 \par
{\bkmkstart AAAAAAACSF}{\bkmkend AAAAAAACSF}
00068         {\cf20 // Bogus bit depth?  Only 8-bit supported.}\par
{\bkmkstart AAAAAAACSG}{\bkmkend AAAAAAACSG}
00069         {\cf19 if} (bmih.biBitCount != 8)\par
{\bkmkstart AAAAAAACSH}{\bkmkend AAAAAAACSH}
00070                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACSI}{\bkmkend AAAAAAACSI}
00071 \par
{\bkmkstart AAAAAAACSJ}{\bkmkend AAAAAAACSJ}
00072         {\cf20 // Bogus compression?  Only non-compressed supported.}\par
{\bkmkstart AAAAAAACSK}{\bkmkend AAAAAAACSK}
00073         {\cf19 if} (bmih.biCompression != 0) {\cf20 //BI_RGB)}\par
{\bkmkstart AAAAAAACSL}{\bkmkend AAAAAAACSL}
00074                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACSM}{\bkmkend AAAAAAACSM}
00075 \par
{\bkmkstart AAAAAAACSN}{\bkmkend AAAAAAACSN}
00076         {\cf20 // Figure out how many entires are actually in the table}\par
{\bkmkstart AAAAAAACSO}{\bkmkend AAAAAAACSO}
00077         {\cf19 if} (bmih.biClrUsed == 0)\par
{\bkmkstart AAAAAAACSP}{\bkmkend AAAAAAACSP}
00078         \{\par
{\bkmkstart AAAAAAACSQ}{\bkmkend AAAAAAACSQ}
00079                 bmih.biClrUsed = 256;\par
{\bkmkstart AAAAAAACSR}{\bkmkend AAAAAAACSR}
00080                 cbPalBytes = (1 << bmih.biBitCount) * {\cf17 sizeof} (mxBitmapRGBQuad);\par
{\bkmkstart AAAAAAACSS}{\bkmkend AAAAAAACSS}
00081         \}\par
{\bkmkstart AAAAAAACST}{\bkmkend AAAAAAACST}
00082         {\cf19 else} \par
{\bkmkstart AAAAAAACSU}{\bkmkend AAAAAAACSU}
00083         \{\par
{\bkmkstart AAAAAAACSV}{\bkmkend AAAAAAACSV}
00084                 cbPalBytes = bmih.biClrUsed * {\cf17 sizeof} (mxBitmapRGBQuad);\par
{\bkmkstart AAAAAAACSW}{\bkmkend AAAAAAACSW}
00085         \}\par
{\bkmkstart AAAAAAACSX}{\bkmkend AAAAAAACSX}
00086 \par
{\bkmkstart AAAAAAACSY}{\bkmkend AAAAAAACSY}
00087         {\cf20 // Read palette (bmih.biClrUsed entries)}\par
{\bkmkstart AAAAAAACSZ}{\bkmkend AAAAAAACSZ}
00088         {\cf19 if} (fread (rgrgbPalette, cbPalBytes, 1{\cf20 /*count*/}, pfile) != 1)\par
{\bkmkstart AAAAAAACTA}{\bkmkend AAAAAAACTA}
00089                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACTB}{\bkmkend AAAAAAACTB}
00090 \par
{\bkmkstart AAAAAAACTC}{\bkmkend AAAAAAACTC}
00091         image = {\cf17 new} mxImage ();\par
{\bkmkstart AAAAAAACTD}{\bkmkend AAAAAAACTD}
00092         {\cf19 if} (!image)\par
{\bkmkstart AAAAAAACTE}{\bkmkend AAAAAAACTE}
00093                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACTF}{\bkmkend AAAAAAACTF}
00094 \par
{\bkmkstart AAAAAAACTG}{\bkmkend AAAAAAACTG}
00095         {\cf19 if} (!image->create (bmih.biWidth, bmih.biHeight, 8))\par
{\bkmkstart AAAAAAACTH}{\bkmkend AAAAAAACTH}
00096         \{\par
{\bkmkstart AAAAAAACTI}{\bkmkend AAAAAAACTI}
00097                 {\cf17 delete} image;\par
{\bkmkstart AAAAAAACTJ}{\bkmkend AAAAAAACTJ}
00098                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACTK}{\bkmkend AAAAAAACTK}
00099         \}\par
{\bkmkstart AAAAAAACTL}{\bkmkend AAAAAAACTL}
00100 \par
{\bkmkstart AAAAAAACTM}{\bkmkend AAAAAAACTM}
00101         pb = ({\cf18 byte} *) image->palette;\par
{\bkmkstart AAAAAAACTN}{\bkmkend AAAAAAACTN}
00102 \par
{\bkmkstart AAAAAAACTO}{\bkmkend AAAAAAACTO}
00103         {\cf20 // Copy over used entries}\par
{\bkmkstart AAAAAAACTP}{\bkmkend AAAAAAACTP}
00104         for (i = 0; i < (int) bmih.biClrUsed; i++)\par
{\bkmkstart AAAAAAACTQ}{\bkmkend AAAAAAACTQ}
00105         \{\par
{\bkmkstart AAAAAAACTR}{\bkmkend AAAAAAACTR}
00106                 *pb++ = rgrgbPalette[i].rgbRed;\par
{\bkmkstart AAAAAAACTS}{\bkmkend AAAAAAACTS}
00107                 *pb++ = rgrgbPalette[i].rgbGreen;\par
{\bkmkstart AAAAAAACTT}{\bkmkend AAAAAAACTT}
00108                 *pb++ = rgrgbPalette[i].rgbBlue;\par
{\bkmkstart AAAAAAACTU}{\bkmkend AAAAAAACTU}
00109         \}\par
{\bkmkstart AAAAAAACTV}{\bkmkend AAAAAAACTV}
00110 \par
{\bkmkstart AAAAAAACTW}{\bkmkend AAAAAAACTW}
00111         {\cf20 // Fill in unused entires will 0,0,0}\par
{\bkmkstart AAAAAAACTX}{\bkmkend AAAAAAACTX}
00112         {\cf19 for} (i = bmih.biClrUsed; i < 256; i++) \par
{\bkmkstart AAAAAAACTY}{\bkmkend AAAAAAACTY}
00113         \{\par
{\bkmkstart AAAAAAACTZ}{\bkmkend AAAAAAACTZ}
00114                 *pb++ = 0;\par
{\bkmkstart AAAAAAACUA}{\bkmkend AAAAAAACUA}
00115                 *pb++ = 0;\par
{\bkmkstart AAAAAAACUB}{\bkmkend AAAAAAACUB}
00116                 *pb++ = 0;\par
{\bkmkstart AAAAAAACUC}{\bkmkend AAAAAAACUC}
00117         \}\par
{\bkmkstart AAAAAAACUD}{\bkmkend AAAAAAACUD}
00118 \par
{\bkmkstart AAAAAAACUE}{\bkmkend AAAAAAACUE}
00119         {\cf20 // Read bitmap bits (remainder of file)}\par
{\bkmkstart AAAAAAACUF}{\bkmkend AAAAAAACUF}
00120         cbBmpBits = bmfh.bfSize - ftell (pfile);\par
{\bkmkstart AAAAAAACUG}{\bkmkend AAAAAAACUG}
00121 \par
{\bkmkstart AAAAAAACUH}{\bkmkend AAAAAAACUH}
00122         pbHold = pb = ({\cf18 byte} *) malloc (cbBmpBits * {\cf17 sizeof} ({\cf18 byte}));\par
{\bkmkstart AAAAAAACUI}{\bkmkend AAAAAAACUI}
00123         {\cf19 if} (pb == 0)\par
{\bkmkstart AAAAAAACUJ}{\bkmkend AAAAAAACUJ}
00124         \{\par
{\bkmkstart AAAAAAACUK}{\bkmkend AAAAAAACUK}
00125                 {\cf17 delete} image;\par
{\bkmkstart AAAAAAACUL}{\bkmkend AAAAAAACUL}
00126                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACUM}{\bkmkend AAAAAAACUM}
00127         \}\par
{\bkmkstart AAAAAAACUN}{\bkmkend AAAAAAACUN}
00128 \par
{\bkmkstart AAAAAAACUO}{\bkmkend AAAAAAACUO}
00129         {\cf19 if} (fread (pb, cbBmpBits, 1{\cf20 /*count*/}, pfile) != 1)\par
{\bkmkstart AAAAAAACUP}{\bkmkend AAAAAAACUP}
00130         \{\par
{\bkmkstart AAAAAAACUQ}{\bkmkend AAAAAAACUQ}
00131                 free (pbHold);\par
{\bkmkstart AAAAAAACUR}{\bkmkend AAAAAAACUR}
00132                 {\cf17 delete} image;\par
{\bkmkstart AAAAAAACUS}{\bkmkend AAAAAAACUS}
00133                 {\cf19 goto} GetOut;\par
{\bkmkstart AAAAAAACUT}{\bkmkend AAAAAAACUT}
00134         \}\par
{\bkmkstart AAAAAAACUU}{\bkmkend AAAAAAACUU}
00135 {\cf20 /*}\par
{\bkmkstart AAAAAAACUV}{\bkmkend AAAAAAACUV}
00136 {\cf20         pbBmpBits = malloc(cbBmpBits);}\par
{\bkmkstart AAAAAAACUW}{\bkmkend AAAAAAACUW}
00137 {\cf20         if (pbBmpBits == 0)}\par
{\bkmkstart AAAAAAACUX}{\bkmkend AAAAAAACUX}
00138 {\cf20         \{}\par
{\bkmkstart AAAAAAACUY}{\bkmkend AAAAAAACUY}
00139 {\cf20                 free (pb);}\par
{\bkmkstart AAAAAAACUZ}{\bkmkend AAAAAAACUZ}
00140 {\cf20                 free (pbPal);}\par
{\bkmkstart AAAAAAACVA}{\bkmkend AAAAAAACVA}
00141 {\cf20                 goto GetOut;}\par
{\bkmkstart AAAAAAACVB}{\bkmkend AAAAAAACVB}
00142 {\cf20         \}}\par
{\bkmkstart AAAAAAACVC}{\bkmkend AAAAAAACVC}
00143 {\cf20 */}\par
{\bkmkstart AAAAAAACVD}{\bkmkend AAAAAAACVD}
00144         pbBmpBits = ({\cf18 byte} *) image->data;\par
{\bkmkstart AAAAAAACVE}{\bkmkend AAAAAAACVE}
00145 \par
{\bkmkstart AAAAAAACVF}{\bkmkend AAAAAAACVF}
00146         {\cf20 // data is actually stored with the width being rounded up to a multiple of 4}\par
{\bkmkstart AAAAAAACVG}{\bkmkend AAAAAAACVG}
00147         biTrueWidth = (bmih.biWidth + 3) & ~3;\par
{\bkmkstart AAAAAAACVH}{\bkmkend AAAAAAACVH}
00148 \par
{\bkmkstart AAAAAAACVI}{\bkmkend AAAAAAACVI}
00149         {\cf20 // reverse the order of the data.}\par
{\bkmkstart AAAAAAACVJ}{\bkmkend AAAAAAACVJ}
00150         pb += (bmih.biHeight - 1) * biTrueWidth;\par
{\bkmkstart AAAAAAACVK}{\bkmkend AAAAAAACVK}
00151         {\cf19 for}(i = 0; i < bmih.biHeight; i++)\par
{\bkmkstart AAAAAAACVL}{\bkmkend AAAAAAACVL}
00152         \{\par
{\bkmkstart AAAAAAACVM}{\bkmkend AAAAAAACVM}
00153                 memmove (&pbBmpBits[bmih.biWidth * i], pb, bmih.biWidth);\par
{\bkmkstart AAAAAAACVN}{\bkmkend AAAAAAACVN}
00154                 pb -= biTrueWidth;\par
{\bkmkstart AAAAAAACVO}{\bkmkend AAAAAAACVO}
00155         \}\par
{\bkmkstart AAAAAAACVP}{\bkmkend AAAAAAACVP}
00156 \par
{\bkmkstart AAAAAAACVQ}{\bkmkend AAAAAAACVQ}
00157         {\cf20 //pb += biTrueWidth;}\par
{\bkmkstart AAAAAAACVR}{\bkmkend AAAAAAACVR}
00158         free (pbHold);\par
{\bkmkstart AAAAAAACVS}{\bkmkend AAAAAAACVS}
00159 \par
{\bkmkstart AAAAAAACVT}{\bkmkend AAAAAAACVT}
00160 GetOut:\par
{\bkmkstart AAAAAAACVU}{\bkmkend AAAAAAACVU}
00161 \par
{\bkmkstart AAAAAAACVV}{\bkmkend AAAAAAACVV}
00162         {\cf19 if} (pfile) \par
{\bkmkstart AAAAAAACVW}{\bkmkend AAAAAAACVW}
00163                 fclose (pfile);\par
{\bkmkstart AAAAAAACVX}{\bkmkend AAAAAAACVX}
00164 \par
{\bkmkstart AAAAAAACVY}{\bkmkend AAAAAAACVY}
00165         {\cf19 return} image;\par
{\bkmkstart AAAAAAACVZ}{\bkmkend AAAAAAACVZ}
00166 \}\par
{\bkmkstart AAAAAAACWA}{\bkmkend AAAAAAACWA}
00167 \par
{\bkmkstart AAAAAAACWB}{\bkmkend AAAAAAACWB}
00168 \par
{\bkmkstart AAAAAAACWC}{\bkmkend AAAAAAACWC}
00169 \par
{\bkmkstart AAAAAAACWD}{\bkmkend AAAAAAACWD}
00170 {\cf18 bool} mxBmpWrite( {\cf17 const} {\cf18 char} *filename, mxImage *image )\par
{\bkmkstart AAAAAAACWE}{\bkmkend AAAAAAACWE}
00171 \{\par
{\bkmkstart AAAAAAACWF}{\bkmkend AAAAAAACWF}
00172         {\cf18 int} i, x, y;\par
{\bkmkstart AAAAAAACWG}{\bkmkend AAAAAAACWG}
00173         FILE *pfile = 0;\par
{\bkmkstart AAAAAAACWH}{\bkmkend AAAAAAACWH}
00174         mxBitmapFileHeader bmfh;\par
{\bkmkstart AAAAAAACWI}{\bkmkend AAAAAAACWI}
00175         mxBitmapInfoHeader bmih;\par
{\bkmkstart AAAAAAACWJ}{\bkmkend AAAAAAACWJ}
00176         mxBitmapRGBQuad rgrgbPalette[256];\par
{\bkmkstart AAAAAAACWK}{\bkmkend AAAAAAACWK}
00177         {\cf18 int} cbBmpBits;\par
{\bkmkstart AAAAAAACWL}{\bkmkend AAAAAAACWL}
00178         {\cf18 byte} *pbBmpBits;\par
{\bkmkstart AAAAAAACWM}{\bkmkend AAAAAAACWM}
00179         {\cf18 byte} *pb;\par
{\bkmkstart AAAAAAACWN}{\bkmkend AAAAAAACWN}
00180         {\cf18 int} cbPalBytes = 0;\par
{\bkmkstart AAAAAAACWO}{\bkmkend AAAAAAACWO}
00181         {\cf18 int} biTrueWidth;\par
{\bkmkstart AAAAAAACWP}{\bkmkend AAAAAAACWP}
00182         {\cf18 int} pixel_size;\par
{\bkmkstart AAAAAAACWQ}{\bkmkend AAAAAAACWQ}
00183 \par
{\bkmkstart AAAAAAACWR}{\bkmkend AAAAAAACWR}
00184         {\cf19 if}( !image || !image->data )\par
{\bkmkstart AAAAAAACWS}{\bkmkend AAAAAAACWS}
00185                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAACWT}{\bkmkend AAAAAAACWT}
00186 \par
{\bkmkstart AAAAAAACWU}{\bkmkend AAAAAAACWU}
00187         {\cf20 // File exists?}\par
{\bkmkstart AAAAAAACWV}{\bkmkend AAAAAAACWV}
00188         {\cf19 if}(( pfile = fopen( filename, {\cf22 "wb"} )) == 0 )\par
{\bkmkstart AAAAAAACWW}{\bkmkend AAAAAAACWW}
00189                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAACWX}{\bkmkend AAAAAAACWX}
00190 \par
{\bkmkstart AAAAAAACWY}{\bkmkend AAAAAAACWY}
00191         {\cf19 if}( image->bpp == 8 )\par
{\bkmkstart AAAAAAACWZ}{\bkmkend AAAAAAACWZ}
00192                 pixel_size = 1;\par
{\bkmkstart AAAAAAACXA}{\bkmkend AAAAAAACXA}
00193         {\cf19 else} {\cf19 if}( image->bpp == 24 )\par
{\bkmkstart AAAAAAACXB}{\bkmkend AAAAAAACXB}
00194                 pixel_size = 3;\par
{\bkmkstart AAAAAAACXC}{\bkmkend AAAAAAACXC}
00195         {\cf19 else} {\cf19 if}( image->bpp == 32 )\par
{\bkmkstart AAAAAAACXD}{\bkmkend AAAAAAACXD}
00196                 pixel_size = 4;\par
{\bkmkstart AAAAAAACXE}{\bkmkend AAAAAAACXE}
00197         {\cf19 else} {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAACXF}{\bkmkend AAAAAAACXF}
00198 \par
{\bkmkstart AAAAAAACXG}{\bkmkend AAAAAAACXG}
00199         biTrueWidth = ((image->width + 3) & ~3);\par
{\bkmkstart AAAAAAACXH}{\bkmkend AAAAAAACXH}
00200         cbBmpBits = biTrueWidth * image->height * pixel_size;\par
{\bkmkstart AAAAAAACXI}{\bkmkend AAAAAAACXI}
00201         {\cf19 if}( pixel_size == 1 ) cbPalBytes = 256 * {\cf17 sizeof} (mxBitmapRGBQuad);\par
{\bkmkstart AAAAAAACXJ}{\bkmkend AAAAAAACXJ}
00202 \par
{\bkmkstart AAAAAAACXK}{\bkmkend AAAAAAACXK}
00203         {\cf20 // Bogus file header check}\par
{\bkmkstart AAAAAAACXL}{\bkmkend AAAAAAACXL}
00204         bmfh.bfType = (word) (({\cf23 'M'} << 8) | {\cf23 'B'});\par
{\bkmkstart AAAAAAACXM}{\bkmkend AAAAAAACXM}
00205         bmfh.bfSize = {\cf17 sizeof} bmfh + {\cf17 sizeof} bmih + cbBmpBits + cbPalBytes;\par
{\bkmkstart AAAAAAACXN}{\bkmkend AAAAAAACXN}
00206         bmfh.bfOffBits = {\cf17 sizeof} bmfh + {\cf17 sizeof} bmih + cbPalBytes;\par
{\bkmkstart AAAAAAACXO}{\bkmkend AAAAAAACXO}
00207         bmfh.bfReserved1 = bmfh.bfReserved2 = 0;\par
{\bkmkstart AAAAAAACXP}{\bkmkend AAAAAAACXP}
00208 \par
{\bkmkstart AAAAAAACXQ}{\bkmkend AAAAAAACXQ}
00209         {\cf20 // write file header}\par
{\bkmkstart AAAAAAACXR}{\bkmkend AAAAAAACXR}
00210         {\cf19 if}( fwrite( &bmfh, {\cf17 sizeof} bmfh, 1, pfile ) != 1 )\par
{\bkmkstart AAAAAAACXS}{\bkmkend AAAAAAACXS}
00211         \{\par
{\bkmkstart AAAAAAACXT}{\bkmkend AAAAAAACXT}
00212                 fclose( pfile );\par
{\bkmkstart AAAAAAACXU}{\bkmkend AAAAAAACXU}
00213                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAACXV}{\bkmkend AAAAAAACXV}
00214         \}\par
{\bkmkstart AAAAAAACXW}{\bkmkend AAAAAAACXW}
00215 \par
{\bkmkstart AAAAAAACXX}{\bkmkend AAAAAAACXX}
00216         bmih.biSize = {\cf17 sizeof} bmih;\par
{\bkmkstart AAAAAAACXY}{\bkmkend AAAAAAACXY}
00217         bmih.biWidth = biTrueWidth;\par
{\bkmkstart AAAAAAACXZ}{\bkmkend AAAAAAACXZ}
00218         bmih.biHeight = image->height;\par
{\bkmkstart AAAAAAACYA}{\bkmkend AAAAAAACYA}
00219         bmih.biPlanes = 1;\par
{\bkmkstart AAAAAAACYB}{\bkmkend AAAAAAACYB}
00220         bmih.biBitCount = pixel_size * 8;\par
{\bkmkstart AAAAAAACYC}{\bkmkend AAAAAAACYC}
00221         bmih.biCompression = 0; {\cf20 //BI_RGB;}\par
{\bkmkstart AAAAAAACYD}{\bkmkend AAAAAAACYD}
00222         bmih.biSizeImage = cbBmpBits;\par
{\bkmkstart AAAAAAACYE}{\bkmkend AAAAAAACYE}
00223         bmih.biXPelsPerMeter = 0;\par
{\bkmkstart AAAAAAACYF}{\bkmkend AAAAAAACYF}
00224         bmih.biYPelsPerMeter = 0;\par
{\bkmkstart AAAAAAACYG}{\bkmkend AAAAAAACYG}
00225         bmih.biClrUsed = ( pixel_size == 1 ) ? 256 : 0;\par
{\bkmkstart AAAAAAACYH}{\bkmkend AAAAAAACYH}
00226         bmih.biClrImportant = 0;\par
{\bkmkstart AAAAAAACYI}{\bkmkend AAAAAAACYI}
00227         \par
{\bkmkstart AAAAAAACYJ}{\bkmkend AAAAAAACYJ}
00228         {\cf20 // Write info header}\par
{\bkmkstart AAAAAAACYK}{\bkmkend AAAAAAACYK}
00229         {\cf19 if}( fwrite( &bmih, {\cf17 sizeof} bmih, 1, pfile ) != 1 )\par
{\bkmkstart AAAAAAACYL}{\bkmkend AAAAAAACYL}
00230         \{\par
{\bkmkstart AAAAAAACYM}{\bkmkend AAAAAAACYM}
00231                 fclose (pfile);\par
{\bkmkstart AAAAAAACYN}{\bkmkend AAAAAAACYN}
00232                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAACYO}{\bkmkend AAAAAAACYO}
00233         \}\par
{\bkmkstart AAAAAAACYP}{\bkmkend AAAAAAACYP}
00234 \par
{\bkmkstart AAAAAAACYQ}{\bkmkend AAAAAAACYQ}
00235         {\cf19 if}( pixel_size == 1 )\par
{\bkmkstart AAAAAAACYR}{\bkmkend AAAAAAACYR}
00236         \{\par
{\bkmkstart AAAAAAACYS}{\bkmkend AAAAAAACYS}
00237                 {\cf20 // convert to expanded palette}\par
{\bkmkstart AAAAAAACYT}{\bkmkend AAAAAAACYT}
00238                 pb = ({\cf18 byte} *)image->palette;\par
{\bkmkstart AAAAAAACYU}{\bkmkend AAAAAAACYU}
00239 \par
{\bkmkstart AAAAAAACYV}{\bkmkend AAAAAAACYV}
00240                 {\cf20 // Copy over used entries}\par
{\bkmkstart AAAAAAACYW}{\bkmkend AAAAAAACYW}
00241                 for (i = 0; i < (int) bmih.biClrUsed; i++)\par
{\bkmkstart AAAAAAACYX}{\bkmkend AAAAAAACYX}
00242                 \{\par
{\bkmkstart AAAAAAACYY}{\bkmkend AAAAAAACYY}
00243                         rgrgbPalette[i].rgbRed   = *pb++;\par
{\bkmkstart AAAAAAACYZ}{\bkmkend AAAAAAACYZ}
00244                         rgrgbPalette[i].rgbGreen = *pb++;\par
{\bkmkstart AAAAAAACZA}{\bkmkend AAAAAAACZA}
00245                         rgrgbPalette[i].rgbBlue  = *pb++;\par
{\bkmkstart AAAAAAACZB}{\bkmkend AAAAAAACZB}
00246                         rgrgbPalette[i].rgbReserved = 0;\par
{\bkmkstart AAAAAAACZC}{\bkmkend AAAAAAACZC}
00247                 \}\par
{\bkmkstart AAAAAAACZD}{\bkmkend AAAAAAACZD}
00248 \par
{\bkmkstart AAAAAAACZE}{\bkmkend AAAAAAACZE}
00249                 {\cf20 // Write palette (bmih.biClrUsed entries)}\par
{\bkmkstart AAAAAAACZF}{\bkmkend AAAAAAACZF}
00250                 cbPalBytes = bmih.biClrUsed * {\cf17 sizeof} (mxBitmapRGBQuad);\par
{\bkmkstart AAAAAAACZG}{\bkmkend AAAAAAACZG}
00251 \par
{\bkmkstart AAAAAAACZH}{\bkmkend AAAAAAACZH}
00252                 {\cf19 if}( fwrite( rgrgbPalette, cbPalBytes, 1, pfile ) != 1 )\par
{\bkmkstart AAAAAAACZI}{\bkmkend AAAAAAACZI}
00253                 \{\par
{\bkmkstart AAAAAAACZJ}{\bkmkend AAAAAAACZJ}
00254                         fclose (pfile);\par
{\bkmkstart AAAAAAACZK}{\bkmkend AAAAAAACZK}
00255                         {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAACZL}{\bkmkend AAAAAAACZL}
00256                 \}\par
{\bkmkstart AAAAAAACZM}{\bkmkend AAAAAAACZM}
00257         \}\par
{\bkmkstart AAAAAAACZN}{\bkmkend AAAAAAACZN}
00258 \par
{\bkmkstart AAAAAAACZO}{\bkmkend AAAAAAACZO}
00259         pbBmpBits = ({\cf18 byte} *)malloc( cbBmpBits * {\cf17 sizeof}( {\cf18 byte} ));\par
{\bkmkstart AAAAAAACZP}{\bkmkend AAAAAAACZP}
00260 \par
{\bkmkstart AAAAAAACZQ}{\bkmkend AAAAAAACZQ}
00261         {\cf19 if}( !pbBmpBits )\par
{\bkmkstart AAAAAAACZR}{\bkmkend AAAAAAACZR}
00262         \{\par
{\bkmkstart AAAAAAACZS}{\bkmkend AAAAAAACZS}
00263                 fclose( pfile );\par
{\bkmkstart AAAAAAACZT}{\bkmkend AAAAAAACZT}
00264                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAACZU}{\bkmkend AAAAAAACZU}
00265         \}\par
{\bkmkstart AAAAAAACZV}{\bkmkend AAAAAAACZV}
00266 \par
{\bkmkstart AAAAAAACZW}{\bkmkend AAAAAAACZW}
00267         pb = ({\cf18 byte} *)image->data;\par
{\bkmkstart AAAAAAACZX}{\bkmkend AAAAAAACZX}
00268 \par
{\bkmkstart AAAAAAACZY}{\bkmkend AAAAAAACZY}
00269         {\cf19 for}( y = 0; y < bmih.biHeight; y++ )\par
{\bkmkstart AAAAAAACZZ}{\bkmkend AAAAAAACZZ}
00270         \{\par
{\bkmkstart AAAAAAADAA}{\bkmkend AAAAAAADAA}
00271                 i = (bmih.biHeight - 1 - y ) * (bmih.biWidth);\par
{\bkmkstart AAAAAAADAB}{\bkmkend AAAAAAADAB}
00272 \par
{\bkmkstart AAAAAAADAC}{\bkmkend AAAAAAADAC}
00273                 {\cf19 for}( x = 0; x < image->width; x++ )\par
{\bkmkstart AAAAAAADAD}{\bkmkend AAAAAAADAD}
00274                 \{\par
{\bkmkstart AAAAAAADAE}{\bkmkend AAAAAAADAE}
00275                         {\cf19 if}( pixel_size == 1 )\par
{\bkmkstart AAAAAAADAF}{\bkmkend AAAAAAADAF}
00276                         \{\par
{\bkmkstart AAAAAAADAG}{\bkmkend AAAAAAADAG}
00277                                 {\cf20 // 8-bit}\par
{\bkmkstart AAAAAAADAH}{\bkmkend AAAAAAADAH}
00278                                 pbBmpBits[i] = pb[x];\par
{\bkmkstart AAAAAAADAI}{\bkmkend AAAAAAADAI}
00279                         \}\par
{\bkmkstart AAAAAAADAJ}{\bkmkend AAAAAAADAJ}
00280                         {\cf19 else}\par
{\bkmkstart AAAAAAADAK}{\bkmkend AAAAAAADAK}
00281                         \{\par
{\bkmkstart AAAAAAADAL}{\bkmkend AAAAAAADAL}
00282                                 {\cf20 // 24 bit}\par
{\bkmkstart AAAAAAADAM}{\bkmkend AAAAAAADAM}
00283                                 pbBmpBits[i*pixel_size+0] = pb[x*pixel_size+2];\par
{\bkmkstart AAAAAAADAN}{\bkmkend AAAAAAADAN}
00284                                 pbBmpBits[i*pixel_size+1] = pb[x*pixel_size+1];\par
{\bkmkstart AAAAAAADAO}{\bkmkend AAAAAAADAO}
00285                                 pbBmpBits[i*pixel_size+2] = pb[x*pixel_size+0];\par
{\bkmkstart AAAAAAADAP}{\bkmkend AAAAAAADAP}
00286                         \}\par
{\bkmkstart AAAAAAADAQ}{\bkmkend AAAAAAADAQ}
00287 \par
{\bkmkstart AAAAAAADAR}{\bkmkend AAAAAAADAR}
00288                         {\cf19 if}( pixel_size == 4 ) {\cf20 // write alpha channel}\par
{\bkmkstart AAAAAAADAS}{\bkmkend AAAAAAADAS}
00289                                 pbBmpBits[i*pixel_size+3] = pb[x*pixel_size+3];\par
{\bkmkstart AAAAAAADAT}{\bkmkend AAAAAAADAT}
00290                         i++;\par
{\bkmkstart AAAAAAADAU}{\bkmkend AAAAAAADAU}
00291                 \}\par
{\bkmkstart AAAAAAADAV}{\bkmkend AAAAAAADAV}
00292 \par
{\bkmkstart AAAAAAADAW}{\bkmkend AAAAAAADAW}
00293                 pb += image->width * pixel_size;\par
{\bkmkstart AAAAAAADAX}{\bkmkend AAAAAAADAX}
00294         \}\par
{\bkmkstart AAAAAAADAY}{\bkmkend AAAAAAADAY}
00295 \par
{\bkmkstart AAAAAAADAZ}{\bkmkend AAAAAAADAZ}
00296         {\cf20 // Write bitmap bits (remainder of file)}\par
{\bkmkstart AAAAAAADBA}{\bkmkend AAAAAAADBA}
00297         {\cf19 if}( fwrite( pbBmpBits, cbBmpBits, 1, pfile ) != 1 )\par
{\bkmkstart AAAAAAADBB}{\bkmkend AAAAAAADBB}
00298         \{\par
{\bkmkstart AAAAAAADBC}{\bkmkend AAAAAAADBC}
00299                 free( pbBmpBits );\par
{\bkmkstart AAAAAAADBD}{\bkmkend AAAAAAADBD}
00300                 fclose( pfile );\par
{\bkmkstart AAAAAAADBE}{\bkmkend AAAAAAADBE}
00301                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAADBF}{\bkmkend AAAAAAADBF}
00302         \}\par
{\bkmkstart AAAAAAADBG}{\bkmkend AAAAAAADBG}
00303 \par
{\bkmkstart AAAAAAADBH}{\bkmkend AAAAAAADBH}
00304         free( pbBmpBits );\par
{\bkmkstart AAAAAAADBI}{\bkmkend AAAAAAADBI}
00305         fclose( pfile );\par
{\bkmkstart AAAAAAADBJ}{\bkmkend AAAAAAADBJ}
00306 \par
{\bkmkstart AAAAAAADBK}{\bkmkend AAAAAAADBK}
00307         {\cf19 return} {\cf17 true};\par
{\bkmkstart AAAAAAADBL}{\bkmkend AAAAAAADBL}
00308 \}\par
{\bkmkstart AAAAAAADBM}{\bkmkend AAAAAAADBM}
00309 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxPath.cpp\par \pard\plain 
{\tc\tcl2 \v mxPath.cpp}
{\xe \v mxPath.cpp}
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAADBO}{\bkmkend AAAAAAADBO}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAADBP}{\bkmkend AAAAAAADBP}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAADBQ}{\bkmkend AAAAAAADBQ}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAADBR}{\bkmkend AAAAAAADBR}
00004 {\cf20 // file:           mxpath.cpp}\par
{\bkmkstart AAAAAAADBS}{\bkmkend AAAAAAADBS}
00005 {\cf20 // implementation: all}\par
{\bkmkstart AAAAAAADBT}{\bkmkend AAAAAAADBT}
00006 {\cf20 // last modified:  May 04 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAADBU}{\bkmkend AAAAAAADBU}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAADBV}{\bkmkend AAAAAAADBV}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAADBW}{\bkmkend AAAAAAADBW}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAADBX}{\bkmkend AAAAAAADBX}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAADBY}{\bkmkend AAAAAAADBY}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAADBZ}{\bkmkend AAAAAAADBZ}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAADCA}{\bkmkend AAAAAAADCA}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAADCB}{\bkmkend AAAAAAADCB}
00014 {\cf21 #include <mx/mxPath.h>}\par
{\bkmkstart AAAAAAADCC}{\bkmkend AAAAAAADCC}
00015 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADCD}{\bkmkend AAAAAAADCD}
00016 {\cf21 #include <windows.h>}\par
{\bkmkstart AAAAAAADCE}{\bkmkend AAAAAAADCE}
00017 {\cf21 #include <shlwapi.h>}\par
{\bkmkstart AAAAAAADCF}{\bkmkend AAAAAAADCF}
00018 {\cf21 #else}\par
{\bkmkstart AAAAAAADCG}{\bkmkend AAAAAAADCG}
00019 {\cf21 #include <unistd.h>}\par
{\bkmkstart AAAAAAADCH}{\bkmkend AAAAAAADCH}
00020 {\cf21 #endif}\par
{\bkmkstart AAAAAAADCI}{\bkmkend AAAAAAADCI}
00021 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAADCJ}{\bkmkend AAAAAAADCJ}
00022 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAADCK}{\bkmkend AAAAAAADCK}
00023 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAADCL}{\bkmkend AAAAAAADCL}
00024 \par
{\bkmkstart AAAAAAADCM}{\bkmkend AAAAAAADCM}
00025 \par
{\bkmkstart AAAAAAADCN}{\bkmkend AAAAAAADCN}
00026 \par
{\bkmkstart AAAAAAADCO}{\bkmkend AAAAAAADCO}
00027 {\cf18 bool}\par
{\bkmkstart AAAAAAADCP}{\bkmkend AAAAAAADCP}
00028 mx_setcwd ({\cf17 const} {\cf18 char} *path)\par
{\bkmkstart AAAAAAADCQ}{\bkmkend AAAAAAADCQ}
00029 \{\par
{\bkmkstart AAAAAAADCR}{\bkmkend AAAAAAADCR}
00030 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADCS}{\bkmkend AAAAAAADCS}
00031         {\cf19 return} (SetCurrentDirectory (path) == TRUE);\par
{\bkmkstart AAAAAAADCT}{\bkmkend AAAAAAADCT}
00032 {\cf21 #else}\par
{\bkmkstart AAAAAAADCU}{\bkmkend AAAAAAADCU}
00033         {\cf19 return} (chdir (path) != -1);\par
{\bkmkstart AAAAAAADCV}{\bkmkend AAAAAAADCV}
00034 {\cf21 #endif}\par
{\bkmkstart AAAAAAADCW}{\bkmkend AAAAAAADCW}
00035 \}\par
{\bkmkstart AAAAAAADCX}{\bkmkend AAAAAAADCX}
00036 \par
{\bkmkstart AAAAAAADCY}{\bkmkend AAAAAAADCY}
00037 \par
{\bkmkstart AAAAAAADCZ}{\bkmkend AAAAAAADCZ}
00038 \par
{\bkmkstart AAAAAAADDA}{\bkmkend AAAAAAADDA}
00039 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAADDB}{\bkmkend AAAAAAADDB}
00040 mx_getcwd ()\par
{\bkmkstart AAAAAAADDC}{\bkmkend AAAAAAADDC}
00041 \{\par
{\bkmkstart AAAAAAADDD}{\bkmkend AAAAAAADDD}
00042         {\cf17 static} {\cf18 char} path[256];\par
{\bkmkstart AAAAAAADDE}{\bkmkend AAAAAAADDE}
00043 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADDF}{\bkmkend AAAAAAADDF}
00044         GetCurrentDirectory (256, path);\par
{\bkmkstart AAAAAAADDG}{\bkmkend AAAAAAADDG}
00045 {\cf21 #else}\par
{\bkmkstart AAAAAAADDH}{\bkmkend AAAAAAADDH}
00046         getcwd (path, 256);\par
{\bkmkstart AAAAAAADDI}{\bkmkend AAAAAAADDI}
00047 {\cf21 #endif}\par
{\bkmkstart AAAAAAADDJ}{\bkmkend AAAAAAADDJ}
00048         {\cf19 return} path;\par
{\bkmkstart AAAAAAADDK}{\bkmkend AAAAAAADDK}
00049 \}\par
{\bkmkstart AAAAAAADDL}{\bkmkend AAAAAAADDL}
00050 \par
{\bkmkstart AAAAAAADDM}{\bkmkend AAAAAAADDM}
00051 \par
{\bkmkstart AAAAAAADDN}{\bkmkend AAAAAAADDN}
00052 \par
{\bkmkstart AAAAAAADDO}{\bkmkend AAAAAAADDO}
00053 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAADDP}{\bkmkend AAAAAAADDP}
00054 mx_getpath ({\cf17 const} {\cf18 char} *filename)\par
{\bkmkstart AAAAAAADDQ}{\bkmkend AAAAAAADDQ}
00055 \{\par
{\bkmkstart AAAAAAADDR}{\bkmkend AAAAAAADDR}
00056         {\cf17 static} {\cf18 char} path[256];\par
{\bkmkstart AAAAAAADDS}{\bkmkend AAAAAAADDS}
00057         {\cf18 char} drive[64];\par
{\bkmkstart AAAAAAADDT}{\bkmkend AAAAAAADDT}
00058         {\cf18 char} tmp[256];\par
{\bkmkstart AAAAAAADDU}{\bkmkend AAAAAAADDU}
00059 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADDV}{\bkmkend AAAAAAADDV}
00060         _splitpath (filename, drive, tmp, 0, 0);\par
{\bkmkstart AAAAAAADDW}{\bkmkend AAAAAAADDW}
00061         strcpy(path, drive);\par
{\bkmkstart AAAAAAADDX}{\bkmkend AAAAAAADDX}
00062         strcat(path, tmp);\par
{\bkmkstart AAAAAAADDY}{\bkmkend AAAAAAADDY}
00063 {\cf21 #else}\par
{\bkmkstart AAAAAAADDZ}{\bkmkend AAAAAAADDZ}
00064         strcpy (path, filename);\par
{\bkmkstart AAAAAAADEA}{\bkmkend AAAAAAADEA}
00065         {\cf18 char} *ptr = ({\cf18 char} *)strrchr (path, {\cf23 '/'});\par
{\bkmkstart AAAAAAADEB}{\bkmkend AAAAAAADEB}
00066         {\cf19 if} (ptr)\par
{\bkmkstart AAAAAAADEC}{\bkmkend AAAAAAADEC}
00067                 *ptr = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAADED}{\bkmkend AAAAAAADED}
00068 {\cf21 #endif}\par
{\bkmkstart AAAAAAADEE}{\bkmkend AAAAAAADEE}
00069         {\cf19 return} path;\par
{\bkmkstart AAAAAAADEF}{\bkmkend AAAAAAADEF}
00070 \}\par
{\bkmkstart AAAAAAADEG}{\bkmkend AAAAAAADEG}
00071 \par
{\bkmkstart AAAAAAADEH}{\bkmkend AAAAAAADEH}
00072 \par
{\bkmkstart AAAAAAADEI}{\bkmkend AAAAAAADEI}
00073 \par
{\bkmkstart AAAAAAADEJ}{\bkmkend AAAAAAADEJ}
00074 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAADEK}{\bkmkend AAAAAAADEK}
00075 mx_getextension ({\cf17 const} {\cf18 char} *filename)\par
{\bkmkstart AAAAAAADEL}{\bkmkend AAAAAAADEL}
00076 \{\par
{\bkmkstart AAAAAAADEM}{\bkmkend AAAAAAADEM}
00077         {\cf17 static} {\cf18 char} ext[256];\par
{\bkmkstart AAAAAAADEN}{\bkmkend AAAAAAADEN}
00078 {\cf21 #ifdef WIN32    }\par
{\bkmkstart AAAAAAADEO}{\bkmkend AAAAAAADEO}
00079         _splitpath (filename, 0, 0, 0, ext);\par
{\bkmkstart AAAAAAADEP}{\bkmkend AAAAAAADEP}
00080 {\cf21 #else}\par
{\bkmkstart AAAAAAADEQ}{\bkmkend AAAAAAADEQ}
00081         {\cf18 char} *ptr = ({\cf18 char} *)strrchr (filename, {\cf23 '.'});\par
{\bkmkstart AAAAAAADER}{\bkmkend AAAAAAADER}
00082         {\cf19 if} (ptr)\par
{\bkmkstart AAAAAAADES}{\bkmkend AAAAAAADES}
00083                 strcpy (ext, ptr);\par
{\bkmkstart AAAAAAADET}{\bkmkend AAAAAAADET}
00084         {\cf19 else}\par
{\bkmkstart AAAAAAADEU}{\bkmkend AAAAAAADEU}
00085                 strcpy (ext, {\cf22 ""});\par
{\bkmkstart AAAAAAADEV}{\bkmkend AAAAAAADEV}
00086 {\cf21 #endif}\par
{\bkmkstart AAAAAAADEW}{\bkmkend AAAAAAADEW}
00087         {\cf19 return} ext;\par
{\bkmkstart AAAAAAADEX}{\bkmkend AAAAAAADEX}
00088 \}\par
{\bkmkstart AAAAAAADEY}{\bkmkend AAAAAAADEY}
00089 \par
{\bkmkstart AAAAAAADEZ}{\bkmkend AAAAAAADEZ}
00090 \par
{\bkmkstart AAAAAAADFA}{\bkmkend AAAAAAADFA}
00091 \par
{\bkmkstart AAAAAAADFB}{\bkmkend AAAAAAADFB}
00092 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAADFC}{\bkmkend AAAAAAADFC}
00093 mx_getfilename ({\cf17 const} {\cf18 char} *path)\par
{\bkmkstart AAAAAAADFD}{\bkmkend AAAAAAADFD}
00094 \{\par
{\bkmkstart AAAAAAADFE}{\bkmkend AAAAAAADFE}
00095         {\cf17 static} {\cf18 char} filename[256];\par
{\bkmkstart AAAAAAADFF}{\bkmkend AAAAAAADFF}
00096 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADFG}{\bkmkend AAAAAAADFG}
00097         strcpy(filename, path);\par
{\bkmkstart AAAAAAADFH}{\bkmkend AAAAAAADFH}
00098         PathStripPathA(filename);\par
{\bkmkstart AAAAAAADFI}{\bkmkend AAAAAAADFI}
00099 {\cf21 #else}\par
{\bkmkstart AAAAAAADFJ}{\bkmkend AAAAAAADFJ}
00100         {\cf18 char} *ptr = ({\cf18 char} *)strrchr (path, {\cf23 '/'});\par
{\bkmkstart AAAAAAADFK}{\bkmkend AAAAAAADFK}
00101         {\cf19 if} (ptr)\par
{\bkmkstart AAAAAAADFL}{\bkmkend AAAAAAADFL}
00102                 strcpy (filename, ptr + 1);\par
{\bkmkstart AAAAAAADFM}{\bkmkend AAAAAAADFM}
00103         {\cf19 else}\par
{\bkmkstart AAAAAAADFN}{\bkmkend AAAAAAADFN}
00104                 strcpy (filename, path);\par
{\bkmkstart AAAAAAADFO}{\bkmkend AAAAAAADFO}
00105 \par
{\bkmkstart AAAAAAADFP}{\bkmkend AAAAAAADFP}
00106 {\cf21 #endif}\par
{\bkmkstart AAAAAAADFQ}{\bkmkend AAAAAAADFQ}
00107         {\cf19 return} filename;\par
{\bkmkstart AAAAAAADFR}{\bkmkend AAAAAAADFR}
00108 \}\par
{\bkmkstart AAAAAAADFS}{\bkmkend AAAAAAADFS}
00109 \par
{\bkmkstart AAAAAAADFT}{\bkmkend AAAAAAADFT}
00110 \par
{\bkmkstart AAAAAAADFU}{\bkmkend AAAAAAADFU}
00111 \par
{\bkmkstart AAAAAAADFV}{\bkmkend AAAAAAADFV}
00112 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAADFW}{\bkmkend AAAAAAADFW}
00113 mx_getfilebase ({\cf17 const} {\cf18 char} *path)\par
{\bkmkstart AAAAAAADFX}{\bkmkend AAAAAAADFX}
00114 \{\par
{\bkmkstart AAAAAAADFY}{\bkmkend AAAAAAADFY}
00115         {\cf17 static} {\cf18 char} filename[256];\par
{\bkmkstart AAAAAAADFZ}{\bkmkend AAAAAAADFZ}
00116 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADGA}{\bkmkend AAAAAAADGA}
00117         _splitpath (path, 0, 0, filename, 0);\par
{\bkmkstart AAAAAAADGB}{\bkmkend AAAAAAADGB}
00118 {\cf21 #else}\par
{\bkmkstart AAAAAAADGC}{\bkmkend AAAAAAADGC}
00119         {\cf18 char} *ptr = ({\cf18 char} *)strrchr (path, {\cf23 '/'});\par
{\bkmkstart AAAAAAADGD}{\bkmkend AAAAAAADGD}
00120         {\cf19 if} (ptr)\par
{\bkmkstart AAAAAAADGE}{\bkmkend AAAAAAADGE}
00121                 strcpy (filename, ptr + 1);\par
{\bkmkstart AAAAAAADGF}{\bkmkend AAAAAAADGF}
00122         {\cf19 else}\par
{\bkmkstart AAAAAAADGG}{\bkmkend AAAAAAADGG}
00123                 strcpy (filename, path);\par
{\bkmkstart AAAAAAADGH}{\bkmkend AAAAAAADGH}
00124 \par
{\bkmkstart AAAAAAADGI}{\bkmkend AAAAAAADGI}
00125         ptr = ({\cf18 char} *)strrchr (filename, {\cf23 '.'});\par
{\bkmkstart AAAAAAADGJ}{\bkmkend AAAAAAADGJ}
00126 \par
{\bkmkstart AAAAAAADGK}{\bkmkend AAAAAAADGK}
00127         {\cf19 if} (ptr)\par
{\bkmkstart AAAAAAADGL}{\bkmkend AAAAAAADGL}
00128                 *ptr = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAADGM}{\bkmkend AAAAAAADGM}
00129 \par
{\bkmkstart AAAAAAADGN}{\bkmkend AAAAAAADGN}
00130 {\cf21 #endif}\par
{\bkmkstart AAAAAAADGO}{\bkmkend AAAAAAADGO}
00131         {\cf19 return} filename;\par
{\bkmkstart AAAAAAADGP}{\bkmkend AAAAAAADGP}
00132 \}\par
{\bkmkstart AAAAAAADGQ}{\bkmkend AAAAAAADGQ}
00133 \par
{\bkmkstart AAAAAAADGR}{\bkmkend AAAAAAADGR}
00134 \par
{\bkmkstart AAAAAAADGS}{\bkmkend AAAAAAADGS}
00135 \par
{\bkmkstart AAAAAAADGT}{\bkmkend AAAAAAADGT}
00136 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAADGU}{\bkmkend AAAAAAADGU}
00137 mx_gettemppath ()\par
{\bkmkstart AAAAAAADGV}{\bkmkend AAAAAAADGV}
00138 \{\par
{\bkmkstart AAAAAAADGW}{\bkmkend AAAAAAADGW}
00139         {\cf17 static} {\cf18 char} path[256];\par
{\bkmkstart AAAAAAADGX}{\bkmkend AAAAAAADGX}
00140 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADGY}{\bkmkend AAAAAAADGY}
00141         GetTempPath (256, path);\par
{\bkmkstart AAAAAAADGZ}{\bkmkend AAAAAAADGZ}
00142 {\cf21 #else}\par
{\bkmkstart AAAAAAADHA}{\bkmkend AAAAAAADHA}
00143         strcpy (path, {\cf22 "/tmp"});\par
{\bkmkstart AAAAAAADHB}{\bkmkend AAAAAAADHB}
00144 {\cf21 #endif}\par
{\bkmkstart AAAAAAADHC}{\bkmkend AAAAAAADHC}
00145 \par
{\bkmkstart AAAAAAADHD}{\bkmkend AAAAAAADHD}
00146         {\cf19 return} path;\par
{\bkmkstart AAAAAAADHE}{\bkmkend AAAAAAADHE}
00147 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxPcx.cpp\par \pard\plain 
{\tc\tcl2 \v mxPcx.cpp}
{\xe \v mxPcx.cpp}
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAADHG}{\bkmkend AAAAAAADHG}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAADHH}{\bkmkend AAAAAAADHH}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAADHI}{\bkmkend AAAAAAADHI}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAADHJ}{\bkmkend AAAAAAADHJ}
00004 {\cf20 // file:           mxPcx.cpp}\par
{\bkmkstart AAAAAAADHK}{\bkmkend AAAAAAADHK}
00005 {\cf20 // implementation: all}\par
{\bkmkstart AAAAAAADHL}{\bkmkend AAAAAAADHL}
00006 {\cf20 // last modified:  Apr 15 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAADHM}{\bkmkend AAAAAAADHM}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAADHN}{\bkmkend AAAAAAADHN}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAADHO}{\bkmkend AAAAAAADHO}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAADHP}{\bkmkend AAAAAAADHP}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAADHQ}{\bkmkend AAAAAAADHQ}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAADHR}{\bkmkend AAAAAAADHR}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAADHS}{\bkmkend AAAAAAADHS}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAADHT}{\bkmkend AAAAAAADHT}
00014 {\cf21 #include <mx/mxPcx.h>}\par
{\bkmkstart AAAAAAADHU}{\bkmkend AAAAAAADHU}
00015 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAADHV}{\bkmkend AAAAAAADHV}
00016 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAADHW}{\bkmkend AAAAAAADHW}
00017 \par
{\bkmkstart AAAAAAADHX}{\bkmkend AAAAAAADHX}
00018 \par
{\bkmkstart AAAAAAADHY}{\bkmkend AAAAAAADHY}
00019 \par
{\bkmkstart AAAAAAADHZ}{\bkmkend AAAAAAADHZ}
00020 mxImage *\par
{\bkmkstart AAAAAAADIA}{\bkmkend AAAAAAADIA}
00021 mxPcxRead ({\cf17 const} {\cf18 char} *filename)\par
{\bkmkstart AAAAAAADIB}{\bkmkend AAAAAAADIB}
00022 \{\par
{\bkmkstart AAAAAAADIC}{\bkmkend AAAAAAADIC}
00023     FILE *file = fopen (filename, {\cf22 "rb"});\par
{\bkmkstart AAAAAAADID}{\bkmkend AAAAAAADID}
00024     {\cf19 if} (!file)\par
{\bkmkstart AAAAAAADIE}{\bkmkend AAAAAAADIE}
00025         {\cf19 return} 0;\par
{\bkmkstart AAAAAAADIF}{\bkmkend AAAAAAADIF}
00026 \par
{\bkmkstart AAAAAAADIG}{\bkmkend AAAAAAADIG}
00027         mxPcxHeader header;\par
{\bkmkstart AAAAAAADIH}{\bkmkend AAAAAAADIH}
00028     {\cf19 if} (fread (&header, {\cf17 sizeof} (mxPcxHeader), 1, file) == -1)\par
{\bkmkstart AAAAAAADII}{\bkmkend AAAAAAADII}
00029         \{\par
{\bkmkstart AAAAAAADIJ}{\bkmkend AAAAAAADIJ}
00030         fclose (file);\par
{\bkmkstart AAAAAAADIK}{\bkmkend AAAAAAADIK}
00031         {\cf19 return} 0;\par
{\bkmkstart AAAAAAADIL}{\bkmkend AAAAAAADIL}
00032     \}\par
{\bkmkstart AAAAAAADIM}{\bkmkend AAAAAAADIM}
00033 {\cf20 /*}\par
{\bkmkstart AAAAAAADIN}{\bkmkend AAAAAAADIN}
00034 {\cf20     if (header.bitsPerPixel != 8 ||}\par
{\bkmkstart AAAAAAADIO}{\bkmkend AAAAAAADIO}
00035 {\cf20                 header.version != 5)}\par
{\bkmkstart AAAAAAADIP}{\bkmkend AAAAAAADIP}
00036 {\cf20         \{}\par
{\bkmkstart AAAAAAADIQ}{\bkmkend AAAAAAADIQ}
00037 {\cf20         fclose (file);}\par
{\bkmkstart AAAAAAADIR}{\bkmkend AAAAAAADIR}
00038 {\cf20         return 0;}\par
{\bkmkstart AAAAAAADIS}{\bkmkend AAAAAAADIS}
00039 {\cf20     \}}\par
{\bkmkstart AAAAAAADIT}{\bkmkend AAAAAAADIT}
00040 {\cf20 }\par
{\bkmkstart AAAAAAADIU}{\bkmkend AAAAAAADIU}
00041 {\cf20     (void) fseek (file, -769, SEEK_END);}\par
{\bkmkstart AAAAAAADIV}{\bkmkend AAAAAAADIV}
00042 {\cf20     if (fgetc (file) != 12) \{}\par
{\bkmkstart AAAAAAADIW}{\bkmkend AAAAAAADIW}
00043 {\cf20         fclose (file);}\par
{\bkmkstart AAAAAAADIX}{\bkmkend AAAAAAADIX}
00044 {\cf20         return NULL;}\par
{\bkmkstart AAAAAAADIY}{\bkmkend AAAAAAADIY}
00045 {\cf20     \}}\par
{\bkmkstart AAAAAAADIZ}{\bkmkend AAAAAAADIZ}
00046 {\cf20 */}\par
{\bkmkstart AAAAAAADJA}{\bkmkend AAAAAAADJA}
00047         (void) fseek (file, -768, SEEK_END);\par
{\bkmkstart AAAAAAADJB}{\bkmkend AAAAAAADJB}
00048 \par
{\bkmkstart AAAAAAADJC}{\bkmkend AAAAAAADJC}
00049     {\cf18 int} w = header.xmax - header.xmin + 1;\par
{\bkmkstart AAAAAAADJD}{\bkmkend AAAAAAADJD}
00050     {\cf18 int} h = header.ymax - header.ymin + 1;\par
{\bkmkstart AAAAAAADJE}{\bkmkend AAAAAAADJE}
00051 \par
{\bkmkstart AAAAAAADJF}{\bkmkend AAAAAAADJF}
00052         mxImage *image = {\cf17 new} mxImage ();\par
{\bkmkstart AAAAAAADJG}{\bkmkend AAAAAAADJG}
00053         {\cf19 if} (!image->create (w, h, 8))\par
{\bkmkstart AAAAAAADJH}{\bkmkend AAAAAAADJH}
00054         \{\par
{\bkmkstart AAAAAAADJI}{\bkmkend AAAAAAADJI}
00055                 {\cf17 delete} image;\par
{\bkmkstart AAAAAAADJJ}{\bkmkend AAAAAAADJJ}
00056                 fclose (file);\par
{\bkmkstart AAAAAAADJK}{\bkmkend AAAAAAADJK}
00057                 {\cf19 return} 0;\par
{\bkmkstart AAAAAAADJL}{\bkmkend AAAAAAADJL}
00058         \}\par
{\bkmkstart AAAAAAADJM}{\bkmkend AAAAAAADJM}
00059 \par
{\bkmkstart AAAAAAADJN}{\bkmkend AAAAAAADJN}
00060     {\cf19 if} (fread (({\cf18 byte} *) image->palette, sizeof ({\cf18 byte}), 768, file) == -1)\par
{\bkmkstart AAAAAAADJO}{\bkmkend AAAAAAADJO}
00061         \{\par
{\bkmkstart AAAAAAADJP}{\bkmkend AAAAAAADJP}
00062         fclose (file);\par
{\bkmkstart AAAAAAADJQ}{\bkmkend AAAAAAADJQ}
00063         {\cf19 return} 0;\par
{\bkmkstart AAAAAAADJR}{\bkmkend AAAAAAADJR}
00064     \}\par
{\bkmkstart AAAAAAADJS}{\bkmkend AAAAAAADJS}
00065 \par
{\bkmkstart AAAAAAADJT}{\bkmkend AAAAAAADJT}
00066     (void) fseek(file, {\cf17 sizeof} (mxPcxHeader), SEEK_SET);\par
{\bkmkstart AAAAAAADJU}{\bkmkend AAAAAAADJU}
00067     {\cf18 int} ptr = 0;\par
{\bkmkstart AAAAAAADJV}{\bkmkend AAAAAAADJV}
00068         {\cf18 int} ch, rep;\par
{\bkmkstart AAAAAAADJW}{\bkmkend AAAAAAADJW}
00069         {\cf18 byte} *data = ({\cf18 byte} *) image->data;\par
{\bkmkstart AAAAAAADJX}{\bkmkend AAAAAAADJX}
00070         {\cf18 int} size = w * h;\par
{\bkmkstart AAAAAAADJY}{\bkmkend AAAAAAADJY}
00071     while (ptr < size)\par
{\bkmkstart AAAAAAADJZ}{\bkmkend AAAAAAADJZ}
00072         \{\par
{\bkmkstart AAAAAAADKA}{\bkmkend AAAAAAADKA}
00073         ch = fgetc(file);\par
{\bkmkstart AAAAAAADKB}{\bkmkend AAAAAAADKB}
00074         {\cf19 if} (ch >= 192)\par
{\bkmkstart AAAAAAADKC}{\bkmkend AAAAAAADKC}
00075                 \{\par
{\bkmkstart AAAAAAADKD}{\bkmkend AAAAAAADKD}
00076             rep = ch - 192;\par
{\bkmkstart AAAAAAADKE}{\bkmkend AAAAAAADKE}
00077             ch = fgetc(file);\par
{\bkmkstart AAAAAAADKF}{\bkmkend AAAAAAADKF}
00078         \}\par
{\bkmkstart AAAAAAADKG}{\bkmkend AAAAAAADKG}
00079         {\cf19 else} \{\par
{\bkmkstart AAAAAAADKH}{\bkmkend AAAAAAADKH}
00080             rep = 1;\par
{\bkmkstart AAAAAAADKI}{\bkmkend AAAAAAADKI}
00081         \}\par
{\bkmkstart AAAAAAADKJ}{\bkmkend AAAAAAADKJ}
00082 \par
{\bkmkstart AAAAAAADKK}{\bkmkend AAAAAAADKK}
00083         {\cf19 while} (rep--)\par
{\bkmkstart AAAAAAADKL}{\bkmkend AAAAAAADKL}
00084                         data[ptr++] = ch;\par
{\bkmkstart AAAAAAADKM}{\bkmkend AAAAAAADKM}
00085     \}\par
{\bkmkstart AAAAAAADKN}{\bkmkend AAAAAAADKN}
00086 \par
{\bkmkstart AAAAAAADKO}{\bkmkend AAAAAAADKO}
00087     fclose(file);\par
{\bkmkstart AAAAAAADKP}{\bkmkend AAAAAAADKP}
00088 \par
{\bkmkstart AAAAAAADKQ}{\bkmkend AAAAAAADKQ}
00089         {\cf19 return} image;\par
{\bkmkstart AAAAAAADKR}{\bkmkend AAAAAAADKR}
00090 \}\par
{\bkmkstart AAAAAAADKS}{\bkmkend AAAAAAADKS}
00091 \par
{\bkmkstart AAAAAAADKT}{\bkmkend AAAAAAADKT}
00092 \par
{\bkmkstart AAAAAAADKU}{\bkmkend AAAAAAADKU}
00093 \par
{\bkmkstart AAAAAAADKV}{\bkmkend AAAAAAADKV}
00094 {\cf18 bool}\par
{\bkmkstart AAAAAAADKW}{\bkmkend AAAAAAADKW}
00095 mxPcxWrite ({\cf17 const} {\cf18 char} *filename, mxImage *image)\par
{\bkmkstart AAAAAAADKX}{\bkmkend AAAAAAADKX}
00096 \{\par
{\bkmkstart AAAAAAADKY}{\bkmkend AAAAAAADKY}
00097         {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAADKZ}{\bkmkend AAAAAAADKZ}
00098 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxShellExec.cpp\par \pard\plain 
{\tc\tcl2 \v mxShellExec.cpp}
{\xe \v mxShellExec.cpp}
{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAADLB}{\bkmkend AAAAAAADLB}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAADLC}{\bkmkend AAAAAAADLC}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAADLD}{\bkmkend AAAAAAADLD}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAADLE}{\bkmkend AAAAAAADLE}
00004 {\cf20 // file:           mxShellExec.cpp}\par
{\bkmkstart AAAAAAADLF}{\bkmkend AAAAAAADLF}
00005 {\cf20 // implementation: all}\par
{\bkmkstart AAAAAAADLG}{\bkmkend AAAAAAADLG}
00006 {\cf20 // last modified:  May 26 2019, Andrey Akhmichin}\par
{\bkmkstart AAAAAAADLH}{\bkmkend AAAAAAADLH}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAADLI}{\bkmkend AAAAAAADLI}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAADLJ}{\bkmkend AAAAAAADLJ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAADLK}{\bkmkend AAAAAAADLK}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAADLL}{\bkmkend AAAAAAADLL}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAADLM}{\bkmkend AAAAAAADLM}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAADLN}{\bkmkend AAAAAAADLN}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAADLO}{\bkmkend AAAAAAADLO}
00014 {\cf21 #include "mx/mxWindow.h"}\par
{\bkmkstart AAAAAAADLP}{\bkmkend AAAAAAADLP}
00015 {\cf21 #include "mx/mxShellExec.h"}\par
{\bkmkstart AAAAAAADLQ}{\bkmkend AAAAAAADLQ}
00016 {\cf21 #if defined(_WIN32)}\par
{\bkmkstart AAAAAAADLR}{\bkmkend AAAAAAADLR}
00017 {\cf21 #include <windows.h>}\par
{\bkmkstart AAAAAAADLS}{\bkmkend AAAAAAADLS}
00018 {\cf21 #else}\par
{\bkmkstart AAAAAAADLT}{\bkmkend AAAAAAADLT}
00019 {\cf21 #include <unistd.h>}\par
{\bkmkstart AAAAAAADLU}{\bkmkend AAAAAAADLU}
00020 {\cf21 #endif}\par
{\bkmkstart AAAAAAADLV}{\bkmkend AAAAAAADLV}
00021 \par
{\bkmkstart AAAAAAADLW}{\bkmkend AAAAAAADLW}
00022 \par
{\bkmkstart AAAAAAADLX}{\bkmkend AAAAAAADLX}
00023 \par
{\bkmkstart AAAAAAADLY}{\bkmkend AAAAAAADLY}
00024 {\cf18 void}\par
{\bkmkstart AAAAAAADLZ}{\bkmkend AAAAAAADLZ}
00025 mx_shellexec (mxWindow *parent, {\cf17 const} {\cf18 char} *path)\par
{\bkmkstart AAAAAAADMA}{\bkmkend AAAAAAADMA}
00026 \{\par
{\bkmkstart AAAAAAADMB}{\bkmkend AAAAAAADMB}
00027         {\cf17 const} {\cf18 char} *openProgram;\par
{\bkmkstart AAAAAAADMC}{\bkmkend AAAAAAADMC}
00028 {\cf21 #if defined(_WIN32)}\par
{\bkmkstart AAAAAAADMD}{\bkmkend AAAAAAADMD}
00029         openProgram = {\cf22 "open"};\par
{\bkmkstart AAAAAAADME}{\bkmkend AAAAAAADME}
00030 \par
{\bkmkstart AAAAAAADMF}{\bkmkend AAAAAAADMF}
00031         ShellExecute ((HWND) (parent ? parent->getHandle () : 0), openProgram, path, 0, 0, SW_SHOW);\par
{\bkmkstart AAAAAAADMG}{\bkmkend AAAAAAADMG}
00032 {\cf21 #else}\par
{\bkmkstart AAAAAAADMH}{\bkmkend AAAAAAADMH}
00033         openProgram = {\cf22 "xdg-open"};\par
{\bkmkstart AAAAAAADMI}{\bkmkend AAAAAAADMI}
00034 \par
{\bkmkstart AAAAAAADMJ}{\bkmkend AAAAAAADMJ}
00035         {\cf19 if} (!fork())\par
{\bkmkstart AAAAAAADMK}{\bkmkend AAAAAAADMK}
00036                 execlp(openProgram, openProgram, path, NULL);\par
{\bkmkstart AAAAAAADML}{\bkmkend AAAAAAADML}
00037 {\cf21 #endif}\par
{\bkmkstart AAAAAAADMM}{\bkmkend AAAAAAADMM}
00038 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxSound.cpp\par \pard\plain 
{\tc\tcl2 \v mxSound.cpp}
{\xe \v mxSound.cpp}
{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAADMO}{\bkmkend AAAAAAADMO}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAADMP}{\bkmkend AAAAAAADMP}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAADMQ}{\bkmkend AAAAAAADMQ}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAADMR}{\bkmkend AAAAAAADMR}
00004 {\cf20 // file:           mxSound.cpp}\par
{\bkmkstart AAAAAAADMS}{\bkmkend AAAAAAADMS}
00005 {\cf20 // implementation: all}\par
{\bkmkstart AAAAAAADMT}{\bkmkend AAAAAAADMT}
00006 {\cf20 // last modified:  May 20 2019, Andrey Akhmichin}\par
{\bkmkstart AAAAAAADMU}{\bkmkend AAAAAAADMU}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAADMV}{\bkmkend AAAAAAADMV}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAADMW}{\bkmkend AAAAAAADMW}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAADMX}{\bkmkend AAAAAAADMX}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAADMY}{\bkmkend AAAAAAADMY}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAADMZ}{\bkmkend AAAAAAADMZ}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAADNA}{\bkmkend AAAAAAADNA}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAADNB}{\bkmkend AAAAAAADNB}
00014 {\cf21 #include <mx/mxSound.h>}\par
{\bkmkstart AAAAAAADNC}{\bkmkend AAAAAAADNC}
00015 {\cf21 #if defined(_WIN32)}\par
{\bkmkstart AAAAAAADND}{\bkmkend AAAAAAADND}
00016 {\cf21 #include <windows.h>}\par
{\bkmkstart AAAAAAADNE}{\bkmkend AAAAAAADNE}
00017 {\cf21 #include <mmsystem.h>}\par
{\bkmkstart AAAAAAADNF}{\bkmkend AAAAAAADNF}
00018 {\cf21 #endif}\par
{\bkmkstart AAAAAAADNG}{\bkmkend AAAAAAADNG}
00019 \par
{\bkmkstart AAAAAAADNH}{\bkmkend AAAAAAADNH}
00020 \par
{\bkmkstart AAAAAAADNI}{\bkmkend AAAAAAADNI}
00021 \par
{\bkmkstart AAAAAAADNJ}{\bkmkend AAAAAAADNJ}
00022 {\cf18 void}\par
{\bkmkstart AAAAAAADNK}{\bkmkend AAAAAAADNK}
00023 mx_playsnd ({\cf17 const} {\cf18 char} *sound)\par
{\bkmkstart AAAAAAADNL}{\bkmkend AAAAAAADNL}
00024 \{\par
{\bkmkstart AAAAAAADNM}{\bkmkend AAAAAAADNM}
00025 {\cf21 #if defined(_WIN32)}\par
{\bkmkstart AAAAAAADNN}{\bkmkend AAAAAAADNN}
00026         PlaySoundA (sound, 0, SND_FILENAME | SND_ASYNC);\par
{\bkmkstart AAAAAAADNO}{\bkmkend AAAAAAADNO}
00027 {\cf21 #endif}\par
{\bkmkstart AAAAAAADNP}{\bkmkend AAAAAAADNP}
00028 \}\par
{\bkmkstart AAAAAAADNQ}{\bkmkend AAAAAAADNQ}
00029 \par
{\bkmkstart AAAAAAADNR}{\bkmkend AAAAAAADNR}
00030 \par
{\bkmkstart AAAAAAADNS}{\bkmkend AAAAAAADNS}
00031 \par
{\bkmkstart AAAAAAADNT}{\bkmkend AAAAAAADNT}
00032 {\cf18 void}\par
{\bkmkstart AAAAAAADNU}{\bkmkend AAAAAAADNU}
00033 mx_stopsnd ()\par
{\bkmkstart AAAAAAADNV}{\bkmkend AAAAAAADNV}
00034 \{\par
{\bkmkstart AAAAAAADNW}{\bkmkend AAAAAAADNW}
00035 {\cf21 #if defined(_WIN32)}\par
{\bkmkstart AAAAAAADNX}{\bkmkend AAAAAAADNX}
00036       PlaySoundA (0, 0, SND_FILENAME | SND_ASYNC);\par
{\bkmkstart AAAAAAADNY}{\bkmkend AAAAAAADNY}
00037 {\cf21 #endif}\par
{\bkmkstart AAAAAAADNZ}{\bkmkend AAAAAAADNZ}
00038 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxString.cpp\par \pard\plain 
{\tc\tcl2 \v mxString.cpp}
{\xe \v mxString.cpp}
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAADOB}{\bkmkend AAAAAAADOB}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAADOC}{\bkmkend AAAAAAADOC}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAADOD}{\bkmkend AAAAAAADOD}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAADOE}{\bkmkend AAAAAAADOE}
00004 {\cf20 // file:           mxstring.cpp}\par
{\bkmkstart AAAAAAADOF}{\bkmkend AAAAAAADOF}
00005 {\cf20 // implementation: all}\par
{\bkmkstart AAAAAAADOG}{\bkmkend AAAAAAADOG}
00006 {\cf20 // last modified:  May 04 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAADOH}{\bkmkend AAAAAAADOH}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAADOI}{\bkmkend AAAAAAADOI}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAADOJ}{\bkmkend AAAAAAADOJ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAADOK}{\bkmkend AAAAAAADOK}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAADOL}{\bkmkend AAAAAAADOL}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAADOM}{\bkmkend AAAAAAADOM}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAADON}{\bkmkend AAAAAAADON}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAADOO}{\bkmkend AAAAAAADOO}
00014 {\cf21 #include <mx/mxString.h>}\par
{\bkmkstart AAAAAAADOP}{\bkmkend AAAAAAADOP}
00015 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAADOQ}{\bkmkend AAAAAAADOQ}
00016 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAADOR}{\bkmkend AAAAAAADOR}
00017 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAADOS}{\bkmkend AAAAAAADOS}
00018 {\cf21 #include <ctype.h>}\par
{\bkmkstart AAAAAAADOT}{\bkmkend AAAAAAADOT}
00019 {\cf21 #ifdef _WIN32}\par
{\bkmkstart AAAAAAADOU}{\bkmkend AAAAAAADOU}
00020 {\cf21 #include <shlwapi.h>}\par
{\bkmkstart AAAAAAADOV}{\bkmkend AAAAAAADOV}
00021 {\cf21 #endif}\par
{\bkmkstart AAAAAAADOW}{\bkmkend AAAAAAADOW}
00022 \par
{\bkmkstart AAAAAAADOX}{\bkmkend AAAAAAADOX}
00023 \par
{\bkmkstart AAAAAAADOY}{\bkmkend AAAAAAADOY}
00024 {\cf18 int}\par
{\bkmkstart AAAAAAADOZ}{\bkmkend AAAAAAADOZ}
00025 mx_strncasecmp ({\cf17 const} {\cf18 char} *s1, {\cf17 const} {\cf18 char} *s2, {\cf18 int} count)\par
{\bkmkstart AAAAAAADPA}{\bkmkend AAAAAAADPA}
00026 \{\par
{\bkmkstart AAAAAAADPB}{\bkmkend AAAAAAADPB}
00027 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADPC}{\bkmkend AAAAAAADPC}
00028         {\cf19 return} _strnicmp (s1, s2, count);\par
{\bkmkstart AAAAAAADPD}{\bkmkend AAAAAAADPD}
00029 {\cf21 #else}\par
{\bkmkstart AAAAAAADPE}{\bkmkend AAAAAAADPE}
00030         {\cf19 return} strncasecmp (s1, s2, count);\par
{\bkmkstart AAAAAAADPF}{\bkmkend AAAAAAADPF}
00031 {\cf21 #endif}\par
{\bkmkstart AAAAAAADPG}{\bkmkend AAAAAAADPG}
00032 \}\par
{\bkmkstart AAAAAAADPH}{\bkmkend AAAAAAADPH}
00033 \par
{\bkmkstart AAAAAAADPI}{\bkmkend AAAAAAADPI}
00034 \par
{\bkmkstart AAAAAAADPJ}{\bkmkend AAAAAAADPJ}
00035 \par
{\bkmkstart AAAAAAADPK}{\bkmkend AAAAAAADPK}
00036 {\cf18 int}\par
{\bkmkstart AAAAAAADPL}{\bkmkend AAAAAAADPL}
00037 mx_strcasecmp ({\cf17 const} {\cf18 char} *s1, {\cf17 const} {\cf18 char} *s2)\par
{\bkmkstart AAAAAAADPM}{\bkmkend AAAAAAADPM}
00038 \{\par
{\bkmkstart AAAAAAADPN}{\bkmkend AAAAAAADPN}
00039 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAADPO}{\bkmkend AAAAAAADPO}
00040         {\cf19 return} _stricmp (s1, s2);\par
{\bkmkstart AAAAAAADPP}{\bkmkend AAAAAAADPP}
00041 {\cf21 #else}\par
{\bkmkstart AAAAAAADPQ}{\bkmkend AAAAAAADPQ}
00042         {\cf19 return} strcasecmp (s1, s2);\par
{\bkmkstart AAAAAAADPR}{\bkmkend AAAAAAADPR}
00043 {\cf21 #endif}\par
{\bkmkstart AAAAAAADPS}{\bkmkend AAAAAAADPS}
00044 \}\par
{\bkmkstart AAAAAAADPT}{\bkmkend AAAAAAADPT}
00045 \par
{\bkmkstart AAAAAAADPU}{\bkmkend AAAAAAADPU}
00046 \par
{\bkmkstart AAAAAAADPV}{\bkmkend AAAAAAADPV}
00047 \par
{\bkmkstart AAAAAAADPW}{\bkmkend AAAAAAADPW}
00048 {\cf18 char} *\par
{\bkmkstart AAAAAAADPX}{\bkmkend AAAAAAADPX}
00049 mx_strlower ({\cf18 char} *str)\par
{\bkmkstart AAAAAAADPY}{\bkmkend AAAAAAADPY}
00050 \{\par
{\bkmkstart AAAAAAADPZ}{\bkmkend AAAAAAADPZ}
00051         {\cf18 int} i;\par
{\bkmkstart AAAAAAADQA}{\bkmkend AAAAAAADQA}
00052         {\cf19 for} (i = strlen (str) - 1; i >= 0; i--)\par
{\bkmkstart AAAAAAADQB}{\bkmkend AAAAAAADQB}
00053                 str[i] = tolower (str[i]);\par
{\bkmkstart AAAAAAADQC}{\bkmkend AAAAAAADQC}
00054 \par
{\bkmkstart AAAAAAADQD}{\bkmkend AAAAAAADQD}
00055         {\cf19 return} str;\par
{\bkmkstart AAAAAAADQE}{\bkmkend AAAAAAADQE}
00056 \}\par
{\bkmkstart AAAAAAADQF}{\bkmkend AAAAAAADQF}
00057 \par
{\bkmkstart AAAAAAADQG}{\bkmkend AAAAAAADQG}
00058 \par
{\bkmkstart AAAAAAADQH}{\bkmkend AAAAAAADQH}
00059 \par
{\bkmkstart AAAAAAADQI}{\bkmkend AAAAAAADQI}
00060 {\cf21 #ifdef _WIN32}\par
{\bkmkstart AAAAAAADQJ}{\bkmkend AAAAAAADQJ}
00061 {\cf18 int}\par
{\bkmkstart AAAAAAADQK}{\bkmkend AAAAAAADQK}
00062 mx_snprintf({\cf18 char} *buffer, {\cf18 int} buffersize, {\cf17 const} {\cf18 char} *format, ...)\par
{\bkmkstart AAAAAAADQL}{\bkmkend AAAAAAADQL}
00063 \{\par
{\bkmkstart AAAAAAADQM}{\bkmkend AAAAAAADQM}
00064         va_list args;\par
{\bkmkstart AAAAAAADQN}{\bkmkend AAAAAAADQN}
00065         {\cf18 int}     result;\par
{\bkmkstart AAAAAAADQO}{\bkmkend AAAAAAADQO}
00066 \par
{\bkmkstart AAAAAAADQP}{\bkmkend AAAAAAADQP}
00067         va_start(args, format);\par
{\bkmkstart AAAAAAADQQ}{\bkmkend AAAAAAADQQ}
00068         result = wvnsprintfA(buffer, buffersize, format, args);\par
{\bkmkstart AAAAAAADQR}{\bkmkend AAAAAAADQR}
00069         va_end(args);\par
{\bkmkstart AAAAAAADQS}{\bkmkend AAAAAAADQS}
00070 \par
{\bkmkstart AAAAAAADQT}{\bkmkend AAAAAAADQT}
00071         {\cf19 if} (result < 0 || result >= buffersize)\par
{\bkmkstart AAAAAAADQU}{\bkmkend AAAAAAADQU}
00072         \{\par
{\bkmkstart AAAAAAADQV}{\bkmkend AAAAAAADQV}
00073                 buffer[buffersize - 1] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAADQW}{\bkmkend AAAAAAADQW}
00074                 {\cf19 return} -1;\par
{\bkmkstart AAAAAAADQX}{\bkmkend AAAAAAADQX}
00075         \}\par
{\bkmkstart AAAAAAADQY}{\bkmkend AAAAAAADQY}
00076 \par
{\bkmkstart AAAAAAADQZ}{\bkmkend AAAAAAADQZ}
00077         {\cf19 return} result;\par
{\bkmkstart AAAAAAADRA}{\bkmkend AAAAAAADRA}
00078 \}\par
{\bkmkstart AAAAAAADRB}{\bkmkend AAAAAAADRB}
00079 {\cf21 #endif}\par
{\bkmkstart AAAAAAADRC}{\bkmkend AAAAAAADRC}
00080 \par
{\bkmkstart AAAAAAADRD}{\bkmkend AAAAAAADRD}
00081 \par
{\bkmkstart AAAAAAADRE}{\bkmkend AAAAAAADRE}
00082 \par
{\bkmkstart AAAAAAADRF}{\bkmkend AAAAAAADRF}
00083 {\cf18 char} *\par
{\bkmkstart AAAAAAADRG}{\bkmkend AAAAAAADRG}
00084 mx_stristr({\cf17 const} {\cf18 char} *{\cf18 string}, {\cf17 const} {\cf18 char} *string2)\par
{\bkmkstart AAAAAAADRH}{\bkmkend AAAAAAADRH}
00085 \{\par
{\bkmkstart AAAAAAADRI}{\bkmkend AAAAAAADRI}
00086         {\cf18 int}     c, len;\par
{\bkmkstart AAAAAAADRJ}{\bkmkend AAAAAAADRJ}
00087 \par
{\bkmkstart AAAAAAADRK}{\bkmkend AAAAAAADRK}
00088         {\cf19 if} (!{\cf18 string} || !string2)\par
{\bkmkstart AAAAAAADRL}{\bkmkend AAAAAAADRL}
00089                 {\cf19 return} NULL;\par
{\bkmkstart AAAAAAADRM}{\bkmkend AAAAAAADRM}
00090 \par
{\bkmkstart AAAAAAADRN}{\bkmkend AAAAAAADRN}
00091         c = tolower(*string2);\par
{\bkmkstart AAAAAAADRO}{\bkmkend AAAAAAADRO}
00092         len = strlen(string2);\par
{\bkmkstart AAAAAAADRP}{\bkmkend AAAAAAADRP}
00093 \par
{\bkmkstart AAAAAAADRQ}{\bkmkend AAAAAAADRQ}
00094         {\cf19 while} ({\cf18 string})\par
{\bkmkstart AAAAAAADRR}{\bkmkend AAAAAAADRR}
00095         \{\par
{\bkmkstart AAAAAAADRS}{\bkmkend AAAAAAADRS}
00096                 {\cf19 for} (; *{\cf18 string} && tolower(*{\cf18 string}) != c; {\cf18 string}++);\par
{\bkmkstart AAAAAAADRT}{\bkmkend AAAAAAADRT}
00097 \par
{\bkmkstart AAAAAAADRU}{\bkmkend AAAAAAADRU}
00098                 {\cf19 if} (*{\cf18 string})\par
{\bkmkstart AAAAAAADRV}{\bkmkend AAAAAAADRV}
00099                 \{\par
{\bkmkstart AAAAAAADRW}{\bkmkend AAAAAAADRW}
00100                         {\cf19 if} (!mx_strncasecmp({\cf18 string}, string2, len))\par
{\bkmkstart AAAAAAADRX}{\bkmkend AAAAAAADRX}
00101                                 {\cf19 break};\par
{\bkmkstart AAAAAAADRY}{\bkmkend AAAAAAADRY}
00102                         {\cf18 string}++;\par
{\bkmkstart AAAAAAADRZ}{\bkmkend AAAAAAADRZ}
00103                 \}\par
{\bkmkstart AAAAAAADSA}{\bkmkend AAAAAAADSA}
00104                 {\cf19 else} {\cf19 return} NULL;\par
{\bkmkstart AAAAAAADSB}{\bkmkend AAAAAAADSB}
00105         \}\par
{\bkmkstart AAAAAAADSC}{\bkmkend AAAAAAADSC}
00106         {\cf19 return} ({\cf18 char} *)string;\par
{\bkmkstart AAAAAAADSD}{\bkmkend AAAAAAADSD}
00107 \}\par
{\bkmkstart AAAAAAADSE}{\bkmkend AAAAAAADSE}
00108 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxTga.cpp\par \pard\plain 
{\tc\tcl2 \v mxTga.cpp}
{\xe \v mxTga.cpp}
{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAADSG}{\bkmkend AAAAAAADSG}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAADSH}{\bkmkend AAAAAAADSH}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAADSI}{\bkmkend AAAAAAADSI}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAADSJ}{\bkmkend AAAAAAADSJ}
00004 {\cf20 // file:           mxTga.cpp}\par
{\bkmkstart AAAAAAADSK}{\bkmkend AAAAAAADSK}
00005 {\cf20 // implementation: all}\par
{\bkmkstart AAAAAAADSL}{\bkmkend AAAAAAADSL}
00006 {\cf20 // last modified:  Apr 15 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAADSM}{\bkmkend AAAAAAADSM}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAADSN}{\bkmkend AAAAAAADSN}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAADSO}{\bkmkend AAAAAAADSO}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAADSP}{\bkmkend AAAAAAADSP}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAADSQ}{\bkmkend AAAAAAADSQ}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAADSR}{\bkmkend AAAAAAADSR}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAADSS}{\bkmkend AAAAAAADSS}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAADST}{\bkmkend AAAAAAADST}
00014 {\cf21 #include <mx/mxTga.h>}\par
{\bkmkstart AAAAAAADSU}{\bkmkend AAAAAAADSU}
00015 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAADSV}{\bkmkend AAAAAAADSV}
00016 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAADSW}{\bkmkend AAAAAAADSW}
00017 \par
{\bkmkstart AAAAAAADSX}{\bkmkend AAAAAAADSX}
00018 \par
{\bkmkstart AAAAAAADSY}{\bkmkend AAAAAAADSY}
00019 \par
{\bkmkstart AAAAAAADSZ}{\bkmkend AAAAAAADSZ}
00020 mxImage *\par
{\bkmkstart AAAAAAADTA}{\bkmkend AAAAAAADTA}
00021 mxTgaRead ({\cf17 const} {\cf18 char} *filename)\par
{\bkmkstart AAAAAAADTB}{\bkmkend AAAAAAADTB}
00022 \{\par
{\bkmkstart AAAAAAADTC}{\bkmkend AAAAAAADTC}
00023         FILE *file;\par
{\bkmkstart AAAAAAADTD}{\bkmkend AAAAAAADTD}
00024         file = fopen (filename, {\cf22 "rb"});\par
{\bkmkstart AAAAAAADTE}{\bkmkend AAAAAAADTE}
00025         {\cf19 if} (!file)\par
{\bkmkstart AAAAAAADTF}{\bkmkend AAAAAAADTF}
00026                 {\cf19 return} 0;\par
{\bkmkstart AAAAAAADTG}{\bkmkend AAAAAAADTG}
00027 \par
{\bkmkstart AAAAAAADTH}{\bkmkend AAAAAAADTH}
00028         {\cf18 byte} identFieldLength;\par
{\bkmkstart AAAAAAADTI}{\bkmkend AAAAAAADTI}
00029         {\cf18 byte} colorMapType;\par
{\bkmkstart AAAAAAADTJ}{\bkmkend AAAAAAADTJ}
00030         {\cf18 byte} imageTypeCode;\par
{\bkmkstart AAAAAAADTK}{\bkmkend AAAAAAADTK}
00031         fread (&identFieldLength, {\cf17 sizeof} ({\cf18 byte}), 1, file);\par
{\bkmkstart AAAAAAADTL}{\bkmkend AAAAAAADTL}
00032         fread (&colorMapType, {\cf17 sizeof} ({\cf18 byte}), 1, file);\par
{\bkmkstart AAAAAAADTM}{\bkmkend AAAAAAADTM}
00033         fread (&imageTypeCode, {\cf17 sizeof} ({\cf18 byte}), 1, file);\par
{\bkmkstart AAAAAAADTN}{\bkmkend AAAAAAADTN}
00034 \par
{\bkmkstart AAAAAAADTO}{\bkmkend AAAAAAADTO}
00035         fseek (file, 12, SEEK_SET);\par
{\bkmkstart AAAAAAADTP}{\bkmkend AAAAAAADTP}
00036 \par
{\bkmkstart AAAAAAADTQ}{\bkmkend AAAAAAADTQ}
00037         word width, height;\par
{\bkmkstart AAAAAAADTR}{\bkmkend AAAAAAADTR}
00038         {\cf18 byte} pixelSize;\par
{\bkmkstart AAAAAAADTS}{\bkmkend AAAAAAADTS}
00039         fread (&width, {\cf17 sizeof} (word), 1, file);\par
{\bkmkstart AAAAAAADTT}{\bkmkend AAAAAAADTT}
00040         fread (&height, {\cf17 sizeof} (word), 1, file);\par
{\bkmkstart AAAAAAADTU}{\bkmkend AAAAAAADTU}
00041         fread (&pixelSize, {\cf17 sizeof} ({\cf18 byte}), 1, file);\par
{\bkmkstart AAAAAAADTV}{\bkmkend AAAAAAADTV}
00042 \par
{\bkmkstart AAAAAAADTW}{\bkmkend AAAAAAADTW}
00043         {\cf20 // only 24-bit RGB uncompressed}\par
{\bkmkstart AAAAAAADTX}{\bkmkend AAAAAAADTX}
00044         {\cf19 if} (colorMapType != 0 ||\par
{\bkmkstart AAAAAAADTY}{\bkmkend AAAAAAADTY}
00045                 imageTypeCode != 2 ||\par
{\bkmkstart AAAAAAADTZ}{\bkmkend AAAAAAADTZ}
00046                 pixelSize != 24)\par
{\bkmkstart AAAAAAADUA}{\bkmkend AAAAAAADUA}
00047         \{\par
{\bkmkstart AAAAAAADUB}{\bkmkend AAAAAAADUB}
00048                 fclose (file);\par
{\bkmkstart AAAAAAADUC}{\bkmkend AAAAAAADUC}
00049                 {\cf19 return} 0;\par
{\bkmkstart AAAAAAADUD}{\bkmkend AAAAAAADUD}
00050         \}\par
{\bkmkstart AAAAAAADUE}{\bkmkend AAAAAAADUE}
00051 \par
{\bkmkstart AAAAAAADUF}{\bkmkend AAAAAAADUF}
00052         fseek (file, 18 + identFieldLength, SEEK_SET);\par
{\bkmkstart AAAAAAADUG}{\bkmkend AAAAAAADUG}
00053 \par
{\bkmkstart AAAAAAADUH}{\bkmkend AAAAAAADUH}
00054         mxImage *image = {\cf17 new} mxImage ();\par
{\bkmkstart AAAAAAADUI}{\bkmkend AAAAAAADUI}
00055         {\cf19 if} (!image->create (width, height, 24))\par
{\bkmkstart AAAAAAADUJ}{\bkmkend AAAAAAADUJ}
00056         \{\par
{\bkmkstart AAAAAAADUK}{\bkmkend AAAAAAADUK}
00057                 {\cf17 delete} image;\par
{\bkmkstart AAAAAAADUL}{\bkmkend AAAAAAADUL}
00058                 fclose (file);\par
{\bkmkstart AAAAAAADUM}{\bkmkend AAAAAAADUM}
00059                 {\cf19 return} 0;\par
{\bkmkstart AAAAAAADUN}{\bkmkend AAAAAAADUN}
00060         \}\par
{\bkmkstart AAAAAAADUO}{\bkmkend AAAAAAADUO}
00061 \par
{\bkmkstart AAAAAAADUP}{\bkmkend AAAAAAADUP}
00062         {\cf18 byte} *data = ({\cf18 byte} *) image->data;\par
{\bkmkstart AAAAAAADUQ}{\bkmkend AAAAAAADUQ}
00063         for ({\cf18 int} y = 0; y < height; y++)\par
{\bkmkstart AAAAAAADUR}{\bkmkend AAAAAAADUR}
00064         \{\par
{\bkmkstart AAAAAAADUS}{\bkmkend AAAAAAADUS}
00065                 {\cf18 byte} *scanline = ({\cf18 byte} *) &data[(height - y - 1) * width * 3];\par
{\bkmkstart AAAAAAADUT}{\bkmkend AAAAAAADUT}
00066                 {\cf19 for} ({\cf18 int} x = 0; x < width; x++)\par
{\bkmkstart AAAAAAADUU}{\bkmkend AAAAAAADUU}
00067                 \{\par
{\bkmkstart AAAAAAADUV}{\bkmkend AAAAAAADUV}
00068                         scanline[x * 3 + 2] = (byte) fgetc (file);\par
{\bkmkstart AAAAAAADUW}{\bkmkend AAAAAAADUW}
00069                         scanline[x * 3 + 1] = (byte) fgetc (file);\par
{\bkmkstart AAAAAAADUX}{\bkmkend AAAAAAADUX}
00070                         scanline[x * 3 + 0] = (byte) fgetc (file);\par
{\bkmkstart AAAAAAADUY}{\bkmkend AAAAAAADUY}
00071                         {\cf20 //scanline[x * 4 + 3] = 0xff;}\par
{\bkmkstart AAAAAAADUZ}{\bkmkend AAAAAAADUZ}
00072                 \}\par
{\bkmkstart AAAAAAADVA}{\bkmkend AAAAAAADVA}
00073         \}\par
{\bkmkstart AAAAAAADVB}{\bkmkend AAAAAAADVB}
00074 \par
{\bkmkstart AAAAAAADVC}{\bkmkend AAAAAAADVC}
00075         fclose (file);\par
{\bkmkstart AAAAAAADVD}{\bkmkend AAAAAAADVD}
00076 \par
{\bkmkstart AAAAAAADVE}{\bkmkend AAAAAAADVE}
00077         {\cf19 return} image;\par
{\bkmkstart AAAAAAADVF}{\bkmkend AAAAAAADVF}
00078 \}\par
{\bkmkstart AAAAAAADVG}{\bkmkend AAAAAAADVG}
00079 \par
{\bkmkstart AAAAAAADVH}{\bkmkend AAAAAAADVH}
00080 \par
{\bkmkstart AAAAAAADVI}{\bkmkend AAAAAAADVI}
00081 \par
{\bkmkstart AAAAAAADVJ}{\bkmkend AAAAAAADVJ}
00082 {\cf18 bool}\par
{\bkmkstart AAAAAAADVK}{\bkmkend AAAAAAADVK}
00083 mxTgaWrite ({\cf17 const} {\cf18 char} *filename, mxImage *image)\par
{\bkmkstart AAAAAAADVL}{\bkmkend AAAAAAADVL}
00084 \{\par
{\bkmkstart AAAAAAADVM}{\bkmkend AAAAAAADVM}
00085         {\cf19 if} (!image)\par
{\bkmkstart AAAAAAADVN}{\bkmkend AAAAAAADVN}
00086                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAADVO}{\bkmkend AAAAAAADVO}
00087 \par
{\bkmkstart AAAAAAADVP}{\bkmkend AAAAAAADVP}
00088         {\cf19 if} (image->bpp != 24)\par
{\bkmkstart AAAAAAADVQ}{\bkmkend AAAAAAADVQ}
00089                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAADVR}{\bkmkend AAAAAAADVR}
00090 \par
{\bkmkstart AAAAAAADVS}{\bkmkend AAAAAAADVS}
00091         FILE *file = fopen (filename, {\cf22 "wb"});\par
{\bkmkstart AAAAAAADVT}{\bkmkend AAAAAAADVT}
00092         {\cf19 if} (!file)\par
{\bkmkstart AAAAAAADVU}{\bkmkend AAAAAAADVU}
00093                 {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAADVV}{\bkmkend AAAAAAADVV}
00094 \par
{\bkmkstart AAAAAAADVW}{\bkmkend AAAAAAADVW}
00095         {\cf20 //}\par
{\bkmkstart AAAAAAADVX}{\bkmkend AAAAAAADVX}
00096         {\cf20 // write header}\par
{\bkmkstart AAAAAAADVY}{\bkmkend AAAAAAADVY}
00097         {\cf20 //}\par
{\bkmkstart AAAAAAADVZ}{\bkmkend AAAAAAADVZ}
00098         fputc (0, file); {\cf20 // identFieldLength}\par
{\bkmkstart AAAAAAADWA}{\bkmkend AAAAAAADWA}
00099         fputc (0, file); {\cf20 // colorMapType == 0, no color map}\par
{\bkmkstart AAAAAAADWB}{\bkmkend AAAAAAADWB}
00100         fputc (2, file); {\cf20 // imageTypeCode == 2, uncompressed RGB}\par
{\bkmkstart AAAAAAADWC}{\bkmkend AAAAAAADWC}
00101 \par
{\bkmkstart AAAAAAADWD}{\bkmkend AAAAAAADWD}
00102         word w = 0;\par
{\bkmkstart AAAAAAADWE}{\bkmkend AAAAAAADWE}
00103         fwrite (&w, {\cf17 sizeof} (word), 1, file); {\cf20 // colorMapOrigin}\par
{\bkmkstart AAAAAAADWF}{\bkmkend AAAAAAADWF}
00104         fwrite (&w, {\cf17 sizeof} (word), 1, file); {\cf20 // colorMapLength}\par
{\bkmkstart AAAAAAADWG}{\bkmkend AAAAAAADWG}
00105         fputc (0, file); {\cf20 // colorMapEntrySize}\par
{\bkmkstart AAAAAAADWH}{\bkmkend AAAAAAADWH}
00106 \par
{\bkmkstart AAAAAAADWI}{\bkmkend AAAAAAADWI}
00107         fwrite (&w, {\cf17 sizeof} (word), 1, file); {\cf20 // imageOriginX}\par
{\bkmkstart AAAAAAADWJ}{\bkmkend AAAAAAADWJ}
00108         fwrite (&w, {\cf17 sizeof} (word), 1, file); {\cf20 // imageOriginY}\par
{\bkmkstart AAAAAAADWK}{\bkmkend AAAAAAADWK}
00109 \par
{\bkmkstart AAAAAAADWL}{\bkmkend AAAAAAADWL}
00110         w = (word) image->width;\par
{\bkmkstart AAAAAAADWM}{\bkmkend AAAAAAADWM}
00111         fwrite (&w, {\cf17 sizeof} (word), 1, file); {\cf20 // imageWidth}\par
{\bkmkstart AAAAAAADWN}{\bkmkend AAAAAAADWN}
00112 \par
{\bkmkstart AAAAAAADWO}{\bkmkend AAAAAAADWO}
00113         w = (word) image->height;\par
{\bkmkstart AAAAAAADWP}{\bkmkend AAAAAAADWP}
00114         fwrite (&w, {\cf17 sizeof} (word), 1, file); {\cf20 // imageHeight}\par
{\bkmkstart AAAAAAADWQ}{\bkmkend AAAAAAADWQ}
00115 \par
{\bkmkstart AAAAAAADWR}{\bkmkend AAAAAAADWR}
00116         fputc (24, file); {\cf20 // imagePixelSize}\par
{\bkmkstart AAAAAAADWS}{\bkmkend AAAAAAADWS}
00117         fputc (0, file); {\cf20 // imageDescriptorByte}\par
{\bkmkstart AAAAAAADWT}{\bkmkend AAAAAAADWT}
00118 \par
{\bkmkstart AAAAAAADWU}{\bkmkend AAAAAAADWU}
00119         {\cf20 // write no ident field}\par
{\bkmkstart AAAAAAADWV}{\bkmkend AAAAAAADWV}
00120 \par
{\bkmkstart AAAAAAADWW}{\bkmkend AAAAAAADWW}
00121         {\cf20 // write no color map}\par
{\bkmkstart AAAAAAADWX}{\bkmkend AAAAAAADWX}
00122 \par
{\bkmkstart AAAAAAADWY}{\bkmkend AAAAAAADWY}
00123         {\cf20 // write imagedata}\par
{\bkmkstart AAAAAAADWZ}{\bkmkend AAAAAAADWZ}
00124 \par
{\bkmkstart AAAAAAADXA}{\bkmkend AAAAAAADXA}
00125         {\cf18 byte} *data = ({\cf18 byte} *) image->data;\par
{\bkmkstart AAAAAAADXB}{\bkmkend AAAAAAADXB}
00126         for ({\cf18 int} y = 0; y < image->height; y++)\par
{\bkmkstart AAAAAAADXC}{\bkmkend AAAAAAADXC}
00127         \{\par
{\bkmkstart AAAAAAADXD}{\bkmkend AAAAAAADXD}
00128                 {\cf18 byte} *scanline = ({\cf18 byte} *) &data[(image->height - y - 1) * image->width * 3];\par
{\bkmkstart AAAAAAADXE}{\bkmkend AAAAAAADXE}
00129                 {\cf19 for} ({\cf18 int} x = 0; x < image->width; x++)\par
{\bkmkstart AAAAAAADXF}{\bkmkend AAAAAAADXF}
00130                 \{\par
{\bkmkstart AAAAAAADXG}{\bkmkend AAAAAAADXG}
00131                         fputc (({\cf18 byte}) scanline[x * 3 + 2], file);\par
{\bkmkstart AAAAAAADXH}{\bkmkend AAAAAAADXH}
00132                         fputc (({\cf18 byte}) scanline[x * 3 + 1], file);\par
{\bkmkstart AAAAAAADXI}{\bkmkend AAAAAAADXI}
00133                         fputc (({\cf18 byte}) scanline[x * 3 + 0], file);\par
{\bkmkstart AAAAAAADXJ}{\bkmkend AAAAAAADXJ}
00134                 \}\par
{\bkmkstart AAAAAAADXK}{\bkmkend AAAAAAADXK}
00135         \}\par
{\bkmkstart AAAAAAADXL}{\bkmkend AAAAAAADXL}
00136 \par
{\bkmkstart AAAAAAADXM}{\bkmkend AAAAAAADXM}
00137         fclose (file);\par
{\bkmkstart AAAAAAADXN}{\bkmkend AAAAAAADXN}
00138 \par
{\bkmkstart AAAAAAADXO}{\bkmkend AAAAAAADXO}
00139         {\cf19 return} {\cf17 true};\par
{\bkmkstart AAAAAAADXP}{\bkmkend AAAAAAADXP}
00140 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GlPainter.cpp\par \pard\plain 
{\bkmkstart AAAAAAADXQ}
{\bkmkend AAAAAAADXQ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAADXR}{\bkmkend AAAAAAADXR}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAADXS}{\bkmkend AAAAAAADXS}
00002 {\cf20 }\par
{\bkmkstart AAAAAAADXT}{\bkmkend AAAAAAADXT}
00003 {\cf20 ===== GlPainter.cpp ========================================================}\par
{\bkmkstart AAAAAAADXU}{\bkmkend AAAAAAADXU}
00004 {\cf20 }\par
{\bkmkstart AAAAAAADXV}{\bkmkend AAAAAAADXV}
00005 {\cf20 */}\par
{\bkmkstart AAAAAAADXW}{\bkmkend AAAAAAADXW}
00006 \par
{\bkmkstart AAAAAAADXX}{\bkmkend AAAAAAADXX}
00007 {\cf21 #include <cstdio>}\par
{\bkmkstart AAAAAAADXY}{\bkmkend AAAAAAADXY}
00008 {\cf21 #include <cstdlib>}\par
{\bkmkstart AAAAAAADXZ}{\bkmkend AAAAAAADXZ}
00009 {\cf21 #include <cstring>}\par
{\bkmkstart AAAAAAADYA}{\bkmkend AAAAAAADYA}
00010 \par
{\bkmkstart AAAAAAADYB}{\bkmkend AAAAAAADYB}
00011 {\cf21 #include <mx/mx.h>}\par
{\bkmkstart AAAAAAADYC}{\bkmkend AAAAAAADYC}
00012 \par
{\bkmkstart AAAAAAADYD}{\bkmkend AAAAAAADYD}
00013 {\cf21 #include "shared.h"}\par
{\bkmkstart AAAAAAADYE}{\bkmkend AAAAAAADYE}
00014 {\cf21 #include "server.h"}\par
{\bkmkstart AAAAAAADYF}{\bkmkend AAAAAAADYF}
00015 {\cf21 #include "client.h"}\par
{\bkmkstart AAAAAAADYG}{\bkmkend AAAAAAADYG}
00016 {\cf21 #include "SDWindow.h"}\par
{\bkmkstart AAAAAAADYH}{\bkmkend AAAAAAADYH}
00017 {\cf21 #include "RCWindow.h"}\par
{\bkmkstart AAAAAAADYI}{\bkmkend AAAAAAADYI}
00018 \par
{\bkmkstart AAAAAAADYJ}{\bkmkend AAAAAAADYJ}
00019 {\cf21 #include "action.h"}\par
{\bkmkstart AAAAAAADYK}{\bkmkend AAAAAAADYK}
00020 \par
{\bkmkstart AAAAAAADYL}{\bkmkend AAAAAAADYL}
00021 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAADYM}{\bkmkend AAAAAAADYM}
00022 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAADYN}{\bkmkend AAAAAAADYN}
00023 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAADYO}{\bkmkend AAAAAAADYO}
00024 \{\par
{\bkmkstart AAAAAAADYP}{\bkmkend AAAAAAADYP}
00025     {\cf17 namespace }\{\par
{\bkmkstart AAAAAAADYQ}{\bkmkend AAAAAAADYQ}
00026 {\cf21 #endif}\par
{\bkmkstart AAAAAAADYR}{\bkmkend AAAAAAADYR}
00027 {\cf17 extern} {\cf18 void} delay({\cf18 unsigned} {\cf18 int} howLong);\par
{\bkmkstart AAAAAAADYS}{\bkmkend AAAAAAADYS}
00028 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAADYT}{\bkmkend AAAAAAADYT}
00029     \} {\cf20 //namespace}\par
{\bkmkstart AAAAAAADYU}{\bkmkend AAAAAAADYU}
00030 \}\par
{\bkmkstart AAAAAAADYV}{\bkmkend AAAAAAADYV}
00031 {\cf21 #endif}\par
{\bkmkstart AAAAAAADYW}{\bkmkend AAAAAAADYW}
00032 {\cf21 #else}\par
{\bkmkstart AAAAAAADYX}{\bkmkend AAAAAAADYX}
00033 {\cf21 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAADYY}{\bkmkend AAAAAAADYY}
00034 {\cf21 #endif }{\cf20 //_SOFTGPIO}\par
{\bkmkstart AAAAAAADYZ}{\bkmkend AAAAAAADYZ}
00035 \par
{\bkmkstart AAAAAAADZA}{\bkmkend AAAAAAADZA}
00036 {\cf21 #include "GlPainter.h"}\par
{\bkmkstart AAAAAAADZB}{\bkmkend AAAAAAADZB}
00037 \par
{\bkmkstart AAAAAAADZC}{\bkmkend AAAAAAADZC}
00038 {\cf18 int} glpainter_main()\{\par
{\bkmkstart AAAAAAADZD}{\bkmkend AAAAAAADZD}
00039         {\cf20 //}\par
{\bkmkstart AAAAAAADZE}{\bkmkend AAAAAAADZE}
00040         {\cf20 // make sure, we start in the right directory}\par
{\bkmkstart AAAAAAADZF}{\bkmkend AAAAAAADZF}
00041         {\cf20 //}\par
{\bkmkstart AAAAAAADZG}{\bkmkend AAAAAAADZG}
00042 \par
{\bkmkstart AAAAAAADZH}{\bkmkend AAAAAAADZH}
00043     {\cf19 for}(; !flag_server_ready || !flag_client_ready;)\par
{\bkmkstart AAAAAAADZI}{\bkmkend AAAAAAADZI}
00044         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAADZJ}{\bkmkend AAAAAAADZJ}
00045 \par
{\bkmkstart AAAAAAADZK}{\bkmkend AAAAAAADZK}
00046 {\cf20 //      mx_setcwd (mx::getApplicationPath ());      //fix me}\par
{\bkmkstart AAAAAAADZL}{\bkmkend AAAAAAADZL}
00047 \par
{\bkmkstart AAAAAAADZM}{\bkmkend AAAAAAADZM}
00048         {\cf20 //mx::setDisplayMode (0, 0, 0);}\par
{\bkmkstart AAAAAAADZN}{\bkmkend AAAAAAADZN}
00049     mx::init (mxargc, mxargv);\par
{\bkmkstart AAAAAAADZO}{\bkmkend AAAAAAADZO}
00050 \par
{\bkmkstart AAAAAAADZP}{\bkmkend AAAAAAADZP}
00051     g_SDWindow = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZQ" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow}}}
 ();\par
{\bkmkstart AAAAAAADZR}{\bkmkend AAAAAAADZR}
00052     g_SDWindow->setMenuBar (g_SDWindow->getMenuBar ());\par
{\bkmkstart AAAAAAADZS}{\bkmkend AAAAAAADZS}
00053     g_SDWindow->setBounds (20, 20, 640, 540);\par
{\bkmkstart AAAAAAADZT}{\bkmkend AAAAAAADZT}
00054     g_SDWindow->setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAADZU}{\bkmkend AAAAAAADZU}
00055 \par
{\bkmkstart AAAAAAADZV}{\bkmkend AAAAAAADZV}
00056     g_RCWindow = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZW" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow}}}
 ();\par
{\bkmkstart AAAAAAADZX}{\bkmkend AAAAAAADZX}
00057     g_RCWindow->setMenuBar (g_RCWindow->getMenuBar ());\par
{\bkmkstart AAAAAAADZY}{\bkmkend AAAAAAADZY}
00058     g_RCWindow->setBounds (120, 20, 640, 540);\par
{\bkmkstart AAAAAAADZZ}{\bkmkend AAAAAAADZZ}
00059     g_RCWindow->setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAEAA}{\bkmkend AAAAAAAEAA}
00060 \par
{\bkmkstart AAAAAAAEAB}{\bkmkend AAAAAAAEAB}
00061     {\cf18 int} ret = mx::run ();\par
{\bkmkstart AAAAAAAEAC}{\bkmkend AAAAAAAEAC}
00062 \par
{\bkmkstart AAAAAAAEAD}{\bkmkend AAAAAAAEAD}
00063     mx::cleanup ();\par
{\bkmkstart AAAAAAAEAE}{\bkmkend AAAAAAAEAE}
00064 \par
{\bkmkstart AAAAAAAEAF}{\bkmkend AAAAAAAEAF}
00065     {\cf19 return} ret;\par
{\bkmkstart AAAAAAAEAG}{\bkmkend AAAAAAAEAG}
00066 \par
{\bkmkstart AAAAAAAEAH}{\bkmkend AAAAAAAEAH}
00067 \}\par
{\bkmkstart AAAAAAAEAI}{\bkmkend AAAAAAAEAI}
00068 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GlPainter.h\par \pard\plain 
{\bkmkstart AAAAAAAEAJ}
{\bkmkend AAAAAAAEAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAEAK}{\bkmkend AAAAAAAEAK}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAEAL}{\bkmkend AAAAAAAEAL}
00002 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAEAM}{\bkmkend AAAAAAAEAM}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAEAN}{\bkmkend AAAAAAAEAN}
00004 {\cf20 // Purpose:}\par
{\bkmkstart AAAAAAAEAO}{\bkmkend AAAAAAAEAO}
00005 {\cf20 //}\par
{\bkmkstart AAAAAAAEAP}{\bkmkend AAAAAAAEAP}
00006 {\cf20 // $NoKeywords: $}\par
{\bkmkstart AAAAAAAEAQ}{\bkmkend AAAAAAAEAQ}
00007 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAEAR}{\bkmkend AAAAAAAEAR}
00008 {\cf20 */}\par
{\bkmkstart AAAAAAAEAS}{\bkmkend AAAAAAAEAS}
00009 \par
{\bkmkstart AAAAAAAEAT}{\bkmkend AAAAAAAEAT}
00010 \par
{\bkmkstart AAAAAAAEAU}{\bkmkend AAAAAAAEAU}
00011 {\cf21 #ifndef __GLPAINTER__}\par
{\bkmkstart AAAAAAAEAV}{\bkmkend AAAAAAAEAV}
00012 {\cf21 #define __GLPAINTER__}\par
{\bkmkstart AAAAAAAEAW}{\bkmkend AAAAAAAEAW}
00013 \par
{\bkmkstart AAAAAAAEAX}{\bkmkend AAAAAAAEAX}
00014 \par
{\bkmkstart AAAAAAAEAY}{\bkmkend AAAAAAAEAY}
00015 {\cf20 /*}\par
{\bkmkstart AAAAAAAEAZ}{\bkmkend AAAAAAAEAZ}
00016 {\cf20 // GlPainter.h}\par
{\bkmkstart AAAAAAAEBA}{\bkmkend AAAAAAAEBA}
00017 {\cf20 */}\par
{\bkmkstart AAAAAAAEBB}{\bkmkend AAAAAAAEBB}
00018 \par
{\bkmkstart AAAAAAAEBC}{\bkmkend AAAAAAAEBC}
00019 \par
{\bkmkstart AAAAAAAEBD}{\bkmkend AAAAAAAEBD}
00020 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAEBE}{\bkmkend AAAAAAAEBE}
00021 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAAEBF}{\bkmkend AAAAAAAEBF}
00022 \{\par
{\bkmkstart AAAAAAAEBG}{\bkmkend AAAAAAAEBG}
00023 {\cf21 #endif}\par
{\bkmkstart AAAAAAAEBH}{\bkmkend AAAAAAAEBH}
00024 \par
{\bkmkstart AAAAAAAEBI}{\bkmkend AAAAAAAEBI}
00025 {\cf18 int} glpainter_main();\par
{\bkmkstart AAAAAAAEBJ}{\bkmkend AAAAAAAEBJ}
00026 \par
{\bkmkstart AAAAAAAEBK}{\bkmkend AAAAAAAEBK}
00027 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAEBL}{\bkmkend AAAAAAAEBL}
00028 \}\par
{\bkmkstart AAAAAAAEBM}{\bkmkend AAAAAAAEBM}
00029 {\cf21 #endif}\par
{\bkmkstart AAAAAAAEBN}{\bkmkend AAAAAAAEBN}
00030 \par
{\bkmkstart AAAAAAAEBO}{\bkmkend AAAAAAAEBO}
00031 \par
{\bkmkstart AAAAAAAEBP}{\bkmkend AAAAAAAEBP}
00032 {\cf21 #endif  }{\cf20 /*__GLPAINTER__*/}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GlWindow.cpp\par \pard\plain 
{\bkmkstart AAAAAAAEBQ}
{\bkmkend AAAAAAAEBQ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAEBR}{\bkmkend AAAAAAAEBR}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAEBS}{\bkmkend AAAAAAAEBS}
00002 {\cf20 //}\par
{\bkmkstart AAAAAAAEBT}{\bkmkend AAAAAAAEBT}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAEBU}{\bkmkend AAAAAAAEBU}
00004 {\cf20 //}\par
{\bkmkstart AAAAAAAEBV}{\bkmkend AAAAAAAEBV}
00005 {\cf20 // file: GlWindow.cpp}\par
{\bkmkstart AAAAAAAEBW}{\bkmkend AAAAAAAEBW}
00006 {\cf20 // last modified:}\par
{\bkmkstart AAAAAAAEBX}{\bkmkend AAAAAAAEBX}
00007 {\cf20 // copyright:}\par
{\bkmkstart AAAAAAAEBY}{\bkmkend AAAAAAAEBY}
00008 {\cf20 // version:}\par
{\bkmkstart AAAAAAAEBZ}{\bkmkend AAAAAAAEBZ}
00009 {\cf20 //}\par
{\bkmkstart AAAAAAAECA}{\bkmkend AAAAAAAECA}
00010 {\cf20 // email:}\par
{\bkmkstart AAAAAAAECB}{\bkmkend AAAAAAAECB}
00011 {\cf20 // web:}\par
{\bkmkstart AAAAAAAECC}{\bkmkend AAAAAAAECC}
00012 {\cf20 //}\par
{\bkmkstart AAAAAAAECD}{\bkmkend AAAAAAAECD}
00013 {\cf20 */}\par
{\bkmkstart AAAAAAAECE}{\bkmkend AAAAAAAECE}
00014 \par
{\bkmkstart AAAAAAAECF}{\bkmkend AAAAAAAECF}
00015 {\cf21 #include <mx/mx.h>}\par
{\bkmkstart AAAAAAAECG}{\bkmkend AAAAAAAECG}
00016 {\cf21 #include <mx/mxMessageBox.h>}\par
{\bkmkstart AAAAAAAECH}{\bkmkend AAAAAAAECH}
00017 {\cf20 //#include <mxTga.h>}\par
{\bkmkstart AAAAAAAECI}{\bkmkend AAAAAAAECI}
00018 {\cf20 //#include <mxPcx.h>}\par
{\bkmkstart AAAAAAAECJ}{\bkmkend AAAAAAAECJ}
00019 {\cf20 //#include <mxBmp.h>}\par
{\bkmkstart AAAAAAAECK}{\bkmkend AAAAAAAECK}
00020 {\cf21 #include <mx/gl.h>}\par
{\bkmkstart AAAAAAAECL}{\bkmkend AAAAAAAECL}
00021 {\cf21 #include <GL/glu.h>}\par
{\bkmkstart AAAAAAAECM}{\bkmkend AAAAAAAECM}
00022 {\cf21 #include <cstdio>}\par
{\bkmkstart AAAAAAAECN}{\bkmkend AAAAAAAECN}
00023 {\cf21 #include <cstdlib>}\par
{\bkmkstart AAAAAAAECO}{\bkmkend AAAAAAAECO}
00024 {\cf21 #include <ctime>}\par
{\bkmkstart AAAAAAAECP}{\bkmkend AAAAAAAECP}
00025 {\cf21 #include <cstring>}\par
{\bkmkstart AAAAAAAECQ}{\bkmkend AAAAAAAECQ}
00026 \par
{\bkmkstart AAAAAAAECR}{\bkmkend AAAAAAAECR}
00027 {\cf21 #include "CmdLine.h"}\par
{\bkmkstart AAAAAAAECS}{\bkmkend AAAAAAAECS}
00028 {\cf21 #include "shared.h"}\par
{\bkmkstart AAAAAAAECT}{\bkmkend AAAAAAAECT}
00029 {\cf21 #include "server.h"}\par
{\bkmkstart AAAAAAAECU}{\bkmkend AAAAAAAECU}
00030 {\cf21 #include "client.h"}\par
{\bkmkstart AAAAAAAECV}{\bkmkend AAAAAAAECV}
00031 \par
{\bkmkstart AAAAAAAECW}{\bkmkend AAAAAAAECW}
00032 {\cf21 #include "GlWindow.h"}\par
{\bkmkstart AAAAAAAECX}{\bkmkend AAAAAAAECX}
00033 \par
{\bkmkstart AAAAAAAECY}{\bkmkend AAAAAAAECY}
00034 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAAECZ}{\bkmkend AAAAAAAECZ}
00035 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAEDA}{\bkmkend AAAAAAAEDA}
00036 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAAEDB}{\bkmkend AAAAAAAEDB}
00037 \{\par
{\bkmkstart AAAAAAAEDC}{\bkmkend AAAAAAAEDC}
00038     {\cf17 namespace }\{\par
{\bkmkstart AAAAAAAEDD}{\bkmkend AAAAAAAEDD}
00039 {\cf21 #endif}\par
{\bkmkstart AAAAAAAEDE}{\bkmkend AAAAAAAEDE}
00040 {\cf17 extern} {\cf18 void} delay({\cf18 unsigned} {\cf18 int} howLong);\par
{\bkmkstart AAAAAAAEDF}{\bkmkend AAAAAAAEDF}
00041 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAEDG}{\bkmkend AAAAAAAEDG}
00042     \} {\cf20 //namespace}\par
{\bkmkstart AAAAAAAEDH}{\bkmkend AAAAAAAEDH}
00043 \}\par
{\bkmkstart AAAAAAAEDI}{\bkmkend AAAAAAAEDI}
00044 {\cf21 #endif}\par
{\bkmkstart AAAAAAAEDJ}{\bkmkend AAAAAAAEDJ}
00045 {\cf21 #else}\par
{\bkmkstart AAAAAAAEDK}{\bkmkend AAAAAAAEDK}
00046 {\cf21 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAAEDL}{\bkmkend AAAAAAAEDL}
00047 {\cf21 #endif }{\cf20 //_SOFTGPIO}\par
{\bkmkstart AAAAAAAEDM}{\bkmkend AAAAAAAEDM}
00048 \par
{\bkmkstart AAAAAAAEDN}{\bkmkend AAAAAAAEDN}
00049 \par
{\bkmkstart AAAAAAAEDO}{\bkmkend AAAAAAAEDO}
00050 {\cf17 extern} {\cf18 char} g_appTitle[];\par
{\bkmkstart AAAAAAAEDP}{\bkmkend AAAAAAAEDP}
00051 \par
{\bkmkstart AAAAAAAEDQ}{\bkmkend AAAAAAAEDQ}
00052 \par
{\bkmkstart AAAAAAAEDR}{\bkmkend AAAAAAAEDR}
00053 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 *g_GlWindow = 0;\par
{\bkmkstart AAAAAAAEDT}{\bkmkend AAAAAAAEDT}
00054 \par
{\bkmkstart AAAAAAAEDU}{\bkmkend AAAAAAAEDU}
00055 GlWindow :: GlWindow( mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label, {\cf18 int} style ) : mxGlWindow( parent, x, y, w, h, label, style )\par
{\bkmkstart AAAAAAAEDV}{\bkmkend AAAAAAAEDV}
00056 \{\par
{\bkmkstart AAAAAAAEDW}{\bkmkend AAAAAAAEDW}
00057 {\cf20 //      glDepthFunc( GL_LEQUAL );}\par
{\bkmkstart AAAAAAAEDX}{\bkmkend AAAAAAAEDX}
00058 \par
{\bkmkstart AAAAAAAEDY}{\bkmkend AAAAAAAEDY}
00059         {\cf19 if}( !parent ) setVisible( {\cf17 true} );\par
{\bkmkstart AAAAAAAEDZ}{\bkmkend AAAAAAAEDZ}
00060         {\cf19 else} mx :: setIdleWindow ( {\cf17 this} );\par
{\bkmkstart AAAAAAAEEA}{\bkmkend AAAAAAAEEA}
00061 \par
{\bkmkstart AAAAAAAEEB}{\bkmkend AAAAAAAEEB}
00062 {\cf20 //      line_t line1 = \{0,0,255,255\};}\par
{\bkmkstart AAAAAAAEEC}{\bkmkend AAAAAAAEEC}
00063 {\cf20 //      CmdLines.assign(1, line1);}\par
{\bkmkstart AAAAAAAEED}{\bkmkend AAAAAAAEED}
00064             x0 = 0;\par
{\bkmkstart AAAAAAAEEE}{\bkmkend AAAAAAAEEE}
00065             y0 = 0;\par
{\bkmkstart AAAAAAAEEF}{\bkmkend AAAAAAAEEF}
00066             x1 = 0;\par
{\bkmkstart AAAAAAAEEG}{\bkmkend AAAAAAAEEG}
00067             y1 = 0;\par
{\bkmkstart AAAAAAAEEH}{\bkmkend AAAAAAAEEH}
00068 {\cf20 //    PrevLine.x0 = 0;}\par
{\bkmkstart AAAAAAAEEI}{\bkmkend AAAAAAAEEI}
00069 {\cf20 //    PrevLine.y0 = 0;}\par
{\bkmkstart AAAAAAAEEJ}{\bkmkend AAAAAAAEEJ}
00070 {\cf20 //    PrevLine.x1 = 0;}\par
{\bkmkstart AAAAAAAEEK}{\bkmkend AAAAAAAEEK}
00071 {\cf20 //    PrevLine.y1 = 0;}\par
{\bkmkstart AAAAAAAEEL}{\bkmkend AAAAAAAEEL}
00072 \par
{\bkmkstart AAAAAAAEEM}{\bkmkend AAAAAAAEEM}
00073     setTimer( BAUD_RATE * 10 );\par
{\bkmkstart AAAAAAAEEN}{\bkmkend AAAAAAAEEN}
00074 \}\par
{\bkmkstart AAAAAAAEEO}{\bkmkend AAAAAAAEEO}
00075 \par
{\bkmkstart AAAAAAAEEP}{\bkmkend AAAAAAAEEP}
00076 GlWindow :: ~GlWindow( {\cf18 void} )\par
{\bkmkstart AAAAAAAEEQ}{\bkmkend AAAAAAAEEQ}
00077 \{\par
{\bkmkstart AAAAAAAEER}{\bkmkend AAAAAAAEER}
00078         mx::setIdleWindow( 0 );\par
{\bkmkstart AAAAAAAEES}{\bkmkend AAAAAAAEES}
00079 \}\par
{\bkmkstart AAAAAAAEET}{\bkmkend AAAAAAAEET}
00080 \par
{\bkmkstart AAAAAAAEEU}{\bkmkend AAAAAAAEEU}
00081 {\cf18 int} GlWindow :: handleEvent( mxEvent *event )\par
{\bkmkstart AAAAAAAEEV}{\bkmkend AAAAAAAEEV}
00082 \{\par
{\bkmkstart AAAAAAAEEW}{\bkmkend AAAAAAAEEW}
00083 {\cf20 //      static float oldrx, oldry, oldtz, oldtx, oldty;}\par
{\bkmkstart AAAAAAAEEX}{\bkmkend AAAAAAAEEX}
00084 {\cf20 //      static float oldlx, oldly;}\par
{\bkmkstart AAAAAAAEEY}{\bkmkend AAAAAAAEEY}
00085 {\cf20 //      static int oldx, oldy;}\par
{\bkmkstart AAAAAAAEEZ}{\bkmkend AAAAAAAEEZ}
00086 {\cf20 //      static double lastupdate;}\par
{\bkmkstart AAAAAAAEFA}{\bkmkend AAAAAAAEFA}
00087 \par
{\bkmkstart AAAAAAAEFB}{\bkmkend AAAAAAAEFB}
00088         {\cf19 switch}( event->event )\par
{\bkmkstart AAAAAAAEFC}{\bkmkend AAAAAAAEFC}
00089         \{\par
{\bkmkstart AAAAAAAEFD}{\bkmkend AAAAAAAEFD}
00090 {\cf20 /*}\par
{\bkmkstart AAAAAAAEFE}{\bkmkend AAAAAAAEFE}
00091 {\cf20     case mxEvent::ParentNotify:}\par
{\bkmkstart AAAAAAAEFF}{\bkmkend AAAAAAAEFF}
00092 {\cf20     \{}\par
{\bkmkstart AAAAAAAEFG}{\bkmkend AAAAAAAEFG}
00093 {\cf20         char msg[MAX_MSG_LENGTH + 1];}\par
{\bkmkstart AAAAAAAEFH}{\bkmkend AAAAAAAEFH}
00094 {\cf20         msg[MAX_MSG_LENGTH] = '\\0';}\par
{\bkmkstart AAAAAAAEFI}{\bkmkend AAAAAAAEFI}
00095 {\cf20         int i = 0;}\par
{\bkmkstart AAAAAAAEFJ}{\bkmkend AAAAAAAEFJ}
00096 {\cf20 }\par
{\bkmkstart AAAAAAAEFK}{\bkmkend AAAAAAAEFK}
00097 {\cf20         for(drawlines_t::iterator iter_buffer = Buffer.begin(); iter_buffer != Buffer.end() && i < MAX_MSG_LENGTH; ++iter_buffer, i+=4)}\par
{\bkmkstart AAAAAAAEFL}{\bkmkend AAAAAAAEFL}
00098 {\cf20         \{}\par
{\bkmkstart AAAAAAAEFM}{\bkmkend AAAAAAAEFM}
00099 {\cf20         msg[i] = iter_buffer->x0;}\par
{\bkmkstart AAAAAAAEFN}{\bkmkend AAAAAAAEFN}
00100 {\cf20         msg[i+1] = iter_buffer->y0;}\par
{\bkmkstart AAAAAAAEFO}{\bkmkend AAAAAAAEFO}
00101 {\cf20         msg[i+2] = iter_buffer->x1;}\par
{\bkmkstart AAAAAAAEFP}{\bkmkend AAAAAAAEFP}
00102 {\cf20         msg[i+3] = iter_buffer->y1;}\par
{\bkmkstart AAAAAAAEFQ}{\bkmkend AAAAAAAEFQ}
00103 {\cf20         \}}\par
{\bkmkstart AAAAAAAEFR}{\bkmkend AAAAAAAEFR}
00104 {\cf20 }\par
{\bkmkstart AAAAAAAEFS}{\bkmkend AAAAAAAEFS}
00105 {\cf20         msg[i] = '\\0';}\par
{\bkmkstart AAAAAAAEFT}{\bkmkend AAAAAAAEFT}
00106 {\cf20 }\par
{\bkmkstart AAAAAAAEFU}{\bkmkend AAAAAAAEFU}
00107 {\cf20         if(Buffer.size() == MAX_MSG_LENGTH/4)}\par
{\bkmkstart AAAAAAAEFV}{\bkmkend AAAAAAAEFV}
00108 {\cf20         \{}\par
{\bkmkstart AAAAAAAEFW}{\bkmkend AAAAAAAEFW}
00109 {\cf20             SV_insert_msg(msg);}\par
{\bkmkstart AAAAAAAEFX}{\bkmkend AAAAAAAEFX}
00110 {\cf20             Buffer.clear();}\par
{\bkmkstart AAAAAAAEFY}{\bkmkend AAAAAAAEFY}
00111 {\cf20         \}}\par
{\bkmkstart AAAAAAAEFZ}{\bkmkend AAAAAAAEFZ}
00112 {\cf20         else}\par
{\bkmkstart AAAAAAAEGA}{\bkmkend AAAAAAAEGA}
00113 {\cf20             if(!SV_insert_msg_nb(msg))}\par
{\bkmkstart AAAAAAAEGB}{\bkmkend AAAAAAAEGB}
00114 {\cf20                 Buffer.clear();}\par
{\bkmkstart AAAAAAAEGC}{\bkmkend AAAAAAAEGC}
00115 {\cf20     \}}\par
{\bkmkstart AAAAAAAEGD}{\bkmkend AAAAAAAEGD}
00116 {\cf20     break;}\par
{\bkmkstart AAAAAAAEGE}{\bkmkend AAAAAAAEGE}
00117 {\cf20 */}\par
{\bkmkstart AAAAAAAEGF}{\bkmkend AAAAAAAEGF}
00118     {\cf19 case} mxEvent::Timer:\par
{\bkmkstart AAAAAAAEGG}{\bkmkend AAAAAAAEGG}
00119     \{\par
{\bkmkstart AAAAAAAEGH}{\bkmkend AAAAAAAEGH}
00120                         redraw();\par
{\bkmkstart AAAAAAAEGI}{\bkmkend AAAAAAAEGI}
00121 \par
{\bkmkstart AAAAAAAEGJ}{\bkmkend AAAAAAAEGJ}
00122             {\cf19 if}(this->isEnabled())\par
{\bkmkstart AAAAAAAEGK}{\bkmkend AAAAAAAEGK}
00123             \{\par
{\bkmkstart AAAAAAAEGL}{\bkmkend AAAAAAAEGL}
00124                 {\cf19 if}(Buffer.size() < MAX_MSG_LENGTH/4)\par
{\bkmkstart AAAAAAAEGM}{\bkmkend AAAAAAAEGM}
00125                     \{\par
{\bkmkstart AAAAAAAEGN}{\bkmkend AAAAAAAEGN}
00126                     {\cf18 unsigned} {\cf18 char} msg[MAX_MSG_LENGTH + 1];\par
{\bkmkstart AAAAAAAEGO}{\bkmkend AAAAAAAEGO}
00127                     msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAEGP}{\bkmkend AAAAAAAEGP}
00128                     {\cf18 int} i = 0;\par
{\bkmkstart AAAAAAAEGQ}{\bkmkend AAAAAAAEGQ}
00129 \par
{\bkmkstart AAAAAAAEGR}{\bkmkend AAAAAAAEGR}
00130                     msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAEGS}{\bkmkend AAAAAAAEGS}
00131 \par
{\bkmkstart AAAAAAAEGT}{\bkmkend AAAAAAAEGT}
00132                     {\cf19 for}(drawlines_t::iterator iter_buffer = Buffer.begin(); iter_buffer != Buffer.end() && i < MAX_MSG_LENGTH; ++iter_buffer, i+=4)\par
{\bkmkstart AAAAAAAEGU}{\bkmkend AAAAAAAEGU}
00133                     \{\par
{\bkmkstart AAAAAAAEGV}{\bkmkend AAAAAAAEGV}
00134                     msg[i] = iter_buffer->x0;\par
{\bkmkstart AAAAAAAEGW}{\bkmkend AAAAAAAEGW}
00135                     msg[i+1] = iter_buffer->y0;\par
{\bkmkstart AAAAAAAEGX}{\bkmkend AAAAAAAEGX}
00136                     msg[i+2] = iter_buffer->x1;\par
{\bkmkstart AAAAAAAEGY}{\bkmkend AAAAAAAEGY}
00137                     msg[i+3] = iter_buffer->y1;\par
{\bkmkstart AAAAAAAEGZ}{\bkmkend AAAAAAAEGZ}
00138                     \}\par
{\bkmkstart AAAAAAAEHA}{\bkmkend AAAAAAAEHA}
00139 \par
{\bkmkstart AAAAAAAEHB}{\bkmkend AAAAAAAEHB}
00140                     msg[i] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAEHC}{\bkmkend AAAAAAAEHC}
00141 \par
{\bkmkstart AAAAAAAEHD}{\bkmkend AAAAAAAEHD}
00142                     {\cf19 if}(Buffer.size() == MAX_MSG_LENGTH/4)\par
{\bkmkstart AAAAAAAEHE}{\bkmkend AAAAAAAEHE}
00143                     \{\par
{\bkmkstart AAAAAAAEHF}{\bkmkend AAAAAAAEHF}
00144                         SV_insert_msg(msg);\par
{\bkmkstart AAAAAAAEHG}{\bkmkend AAAAAAAEHG}
00145                         Buffer.clear();\par
{\bkmkstart AAAAAAAEHH}{\bkmkend AAAAAAAEHH}
00146                     \}\par
{\bkmkstart AAAAAAAEHI}{\bkmkend AAAAAAAEHI}
00147                     {\cf19 else}\par
{\bkmkstart AAAAAAAEHJ}{\bkmkend AAAAAAAEHJ}
00148                         {\cf19 if}(!SV_insert_msg_nb(msg))\par
{\bkmkstart AAAAAAAEHK}{\bkmkend AAAAAAAEHK}
00149                             Buffer.clear();\par
{\bkmkstart AAAAAAAEHL}{\bkmkend AAAAAAAEHL}
00150                 \}\par
{\bkmkstart AAAAAAAEHM}{\bkmkend AAAAAAAEHM}
00151                 {\cf19 else} {\cf19 if}(Buffer.size() > MAX_MSG_LENGTH/4)\par
{\bkmkstart AAAAAAAEHN}{\bkmkend AAAAAAAEHN}
00152                         Buffer.clear();\par
{\bkmkstart AAAAAAAEHO}{\bkmkend AAAAAAAEHO}
00153             \}\par
{\bkmkstart AAAAAAAEHP}{\bkmkend AAAAAAAEHP}
00154             {\cf19 else} {\cf19 if}(!this->isEnabled())\par
{\bkmkstart AAAAAAAEHQ}{\bkmkend AAAAAAAEHQ}
00155             \{\par
{\bkmkstart AAAAAAAEHR}{\bkmkend AAAAAAAEHR}
00156                 {\cf18 char} msg[MAX_MSG_LENGTH + 1];\par
{\bkmkstart AAAAAAAEHS}{\bkmkend AAAAAAAEHS}
00157                 msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAEHT}{\bkmkend AAAAAAAEHT}
00158                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
 NewLine = \{0,0,0,0\};\par
{\bkmkstart AAAAAAAEHU}{\bkmkend AAAAAAAEHU}
00159 \par
{\bkmkstart AAAAAAAEHV}{\bkmkend AAAAAAAEHV}
00160                 {\cf19 if}(!CL_get_msg(msg))\par
{\bkmkstart AAAAAAAEHW}{\bkmkend AAAAAAAEHW}
00161                 \{\par
{\bkmkstart AAAAAAAEHX}{\bkmkend AAAAAAAEHX}
00162                     {\cf19 for}({\cf18 int} i=0; i < MAX_MSG_LENGTH; i+=4)\par
{\bkmkstart AAAAAAAEHY}{\bkmkend AAAAAAAEHY}
00163                     \{\par
{\bkmkstart AAAAAAAEHZ}{\bkmkend AAAAAAAEHZ}
00164                         {\cf19 if}(msg[i])\par
{\bkmkstart AAAAAAAEIA}{\bkmkend AAAAAAAEIA}
00165                             NewLine.x0 = msg[i];\par
{\bkmkstart AAAAAAAEIB}{\bkmkend AAAAAAAEIB}
00166                         {\cf19 else}\par
{\bkmkstart AAAAAAAEIC}{\bkmkend AAAAAAAEIC}
00167                             {\cf19 break};\par
{\bkmkstart AAAAAAAEID}{\bkmkend AAAAAAAEID}
00168                         {\cf19 if}(msg[i+1])\par
{\bkmkstart AAAAAAAEIE}{\bkmkend AAAAAAAEIE}
00169                             NewLine.y0 = msg[i+1];\par
{\bkmkstart AAAAAAAEIF}{\bkmkend AAAAAAAEIF}
00170                         {\cf19 else}\par
{\bkmkstart AAAAAAAEIG}{\bkmkend AAAAAAAEIG}
00171                             {\cf19 break};\par
{\bkmkstart AAAAAAAEIH}{\bkmkend AAAAAAAEIH}
00172                         {\cf19 if}(msg[i+2])\par
{\bkmkstart AAAAAAAEII}{\bkmkend AAAAAAAEII}
00173                             NewLine.x1 = msg[i+2];\par
{\bkmkstart AAAAAAAEIJ}{\bkmkend AAAAAAAEIJ}
00174                         {\cf19 else}\par
{\bkmkstart AAAAAAAEIK}{\bkmkend AAAAAAAEIK}
00175                             {\cf19 break};\par
{\bkmkstart AAAAAAAEIL}{\bkmkend AAAAAAAEIL}
00176                         {\cf19 if}(msg[i+3])\par
{\bkmkstart AAAAAAAEIM}{\bkmkend AAAAAAAEIM}
00177                             NewLine.y1 = msg[i+3];\par
{\bkmkstart AAAAAAAEIN}{\bkmkend AAAAAAAEIN}
00178                         {\cf19 else}\par
{\bkmkstart AAAAAAAEIO}{\bkmkend AAAAAAAEIO}
00179                             {\cf19 break};\par
{\bkmkstart AAAAAAAEIP}{\bkmkend AAAAAAAEIP}
00180 \par
{\bkmkstart AAAAAAAEIQ}{\bkmkend AAAAAAAEIQ}
00181                         {\cf19 if}(NewLine.x0 == 255 && NewLine.y0 == 255 && NewLine.x1 == 255 && NewLine.y1 == 255)\par
{\bkmkstart AAAAAAAEIR}{\bkmkend AAAAAAAEIR}
00182                             CmdLines.clear();\par
{\bkmkstart AAAAAAAEIS}{\bkmkend AAAAAAAEIS}
00183                         {\cf19 else}\par
{\bkmkstart AAAAAAAEIT}{\bkmkend AAAAAAAEIT}
00184                             CmdLines.push_back(NewLine);\par
{\bkmkstart AAAAAAAEIU}{\bkmkend AAAAAAAEIU}
00185 \par
{\bkmkstart AAAAAAAEIV}{\bkmkend AAAAAAAEIV}
00186 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEIW}{\bkmkend AAAAAAAEIW}
00187                         std::printf({\cf22 "RCWindow::newline: %d %d %d %d\\n"} ,NewLine.x0, NewLine.y0, NewLine.x1, NewLine.y1);\par
{\bkmkstart AAAAAAAEIX}{\bkmkend AAAAAAAEIX}
00188 {\cf21 #endif }{\cf20 // _DEBUG}\par
{\bkmkstart AAAAAAAEIY}{\bkmkend AAAAAAAEIY}
00189 \par
{\bkmkstart AAAAAAAEIZ}{\bkmkend AAAAAAAEIZ}
00190                     \}\par
{\bkmkstart AAAAAAAEJA}{\bkmkend AAAAAAAEJA}
00191                 \}\par
{\bkmkstart AAAAAAAEJB}{\bkmkend AAAAAAAEJB}
00192             \}\par
{\bkmkstart AAAAAAAEJC}{\bkmkend AAAAAAAEJC}
00193 \par
{\bkmkstart AAAAAAAEJD}{\bkmkend AAAAAAAEJD}
00194                 {\cf19 return} 1;\par
{\bkmkstart AAAAAAAEJE}{\bkmkend AAAAAAAEJE}
00195     \}\par
{\bkmkstart AAAAAAAEJF}{\bkmkend AAAAAAAEJF}
00196     {\cf19 break};\par
{\bkmkstart AAAAAAAEJG}{\bkmkend AAAAAAAEJG}
00197 \par
{\bkmkstart AAAAAAAEJH}{\bkmkend AAAAAAAEJH}
00198     {\cf20 /*}\par
{\bkmkstart AAAAAAAEJI}{\bkmkend AAAAAAAEJI}
00199 {\cf20         case mxEvent::Idle:}\par
{\bkmkstart AAAAAAAEJJ}{\bkmkend AAAAAAAEJJ}
00200 {\cf20         \{}\par
{\bkmkstart AAAAAAAEJK}{\bkmkend AAAAAAAEJK}
00201 {\cf20 }\par
{\bkmkstart AAAAAAAEJL}{\bkmkend AAAAAAAEJL}
00202 {\cf20                         redraw();}\par
{\bkmkstart AAAAAAAEJM}{\bkmkend AAAAAAAEJM}
00203 {\cf20                         delay(100);}\par
{\bkmkstart AAAAAAAEJN}{\bkmkend AAAAAAAEJN}
00204 {\cf20 }\par
{\bkmkstart AAAAAAAEJO}{\bkmkend AAAAAAAEJO}
00205 {\cf20 //              prev = curr;}\par
{\bkmkstart AAAAAAAEJP}{\bkmkend AAAAAAAEJP}
00206 {\cf20 }\par
{\bkmkstart AAAAAAAEJQ}{\bkmkend AAAAAAAEJQ}
00207 {\cf20             if(!this->isEnabled())}\par
{\bkmkstart AAAAAAAEJR}{\bkmkend AAAAAAAEJR}
00208 {\cf20             \{}\par
{\bkmkstart AAAAAAAEJS}{\bkmkend AAAAAAAEJS}
00209 {\cf20                 char msg[MAX_MSG_LENGTH + 1];}\par
{\bkmkstart AAAAAAAEJT}{\bkmkend AAAAAAAEJT}
00210 {\cf20                 msg[MAX_MSG_LENGTH] = '\\0';}\par
{\bkmkstart AAAAAAAEJU}{\bkmkend AAAAAAAEJU}
00211 {\cf20                 line_t NewLine = \{0,0,0,0\};}\par
{\bkmkstart AAAAAAAEJV}{\bkmkend AAAAAAAEJV}
00212 {\cf20 }\par
{\bkmkstart AAAAAAAEJW}{\bkmkend AAAAAAAEJW}
00213 {\cf20                 if(!CL_get_msg(msg))}\par
{\bkmkstart AAAAAAAEJX}{\bkmkend AAAAAAAEJX}
00214 {\cf20                 \{}\par
{\bkmkstart AAAAAAAEJY}{\bkmkend AAAAAAAEJY}
00215 {\cf20                     for(int i=0; i < MAX_MSG_LENGTH; i+=4)}\par
{\bkmkstart AAAAAAAEJZ}{\bkmkend AAAAAAAEJZ}
00216 {\cf20                     \{}\par
{\bkmkstart AAAAAAAEKA}{\bkmkend AAAAAAAEKA}
00217 {\cf20                         if(msg[i])}\par
{\bkmkstart AAAAAAAEKB}{\bkmkend AAAAAAAEKB}
00218 {\cf20                             NewLine.x0 = msg[i];}\par
{\bkmkstart AAAAAAAEKC}{\bkmkend AAAAAAAEKC}
00219 {\cf20                         else}\par
{\bkmkstart AAAAAAAEKD}{\bkmkend AAAAAAAEKD}
00220 {\cf20                             break;}\par
{\bkmkstart AAAAAAAEKE}{\bkmkend AAAAAAAEKE}
00221 {\cf20                         if(msg[i+1])}\par
{\bkmkstart AAAAAAAEKF}{\bkmkend AAAAAAAEKF}
00222 {\cf20                             NewLine.y0 = msg[i+1];}\par
{\bkmkstart AAAAAAAEKG}{\bkmkend AAAAAAAEKG}
00223 {\cf20                         else}\par
{\bkmkstart AAAAAAAEKH}{\bkmkend AAAAAAAEKH}
00224 {\cf20                             break;}\par
{\bkmkstart AAAAAAAEKI}{\bkmkend AAAAAAAEKI}
00225 {\cf20                         if(msg[i+2])}\par
{\bkmkstart AAAAAAAEKJ}{\bkmkend AAAAAAAEKJ}
00226 {\cf20                             NewLine.x1 = msg[i+2];}\par
{\bkmkstart AAAAAAAEKK}{\bkmkend AAAAAAAEKK}
00227 {\cf20                         else}\par
{\bkmkstart AAAAAAAEKL}{\bkmkend AAAAAAAEKL}
00228 {\cf20                             break;}\par
{\bkmkstart AAAAAAAEKM}{\bkmkend AAAAAAAEKM}
00229 {\cf20                         if(msg[i+3])}\par
{\bkmkstart AAAAAAAEKN}{\bkmkend AAAAAAAEKN}
00230 {\cf20                             NewLine.y1 = msg[i+3];}\par
{\bkmkstart AAAAAAAEKO}{\bkmkend AAAAAAAEKO}
00231 {\cf20                         else}\par
{\bkmkstart AAAAAAAEKP}{\bkmkend AAAAAAAEKP}
00232 {\cf20                             break;}\par
{\bkmkstart AAAAAAAEKQ}{\bkmkend AAAAAAAEKQ}
00233 {\cf20 }\par
{\bkmkstart AAAAAAAEKR}{\bkmkend AAAAAAAEKR}
00234 {\cf20                         if(NewLine.x0 == 255 && NewLine.y0 == 255 && NewLine.x1 == 255 && NewLine.y1 == 255)}\par
{\bkmkstart AAAAAAAEKS}{\bkmkend AAAAAAAEKS}
00235 {\cf20                             CmdLines.clear();}\par
{\bkmkstart AAAAAAAEKT}{\bkmkend AAAAAAAEKT}
00236 {\cf20                         else}\par
{\bkmkstart AAAAAAAEKU}{\bkmkend AAAAAAAEKU}
00237 {\cf20                             CmdLines.push_back(NewLine);}\par
{\bkmkstart AAAAAAAEKV}{\bkmkend AAAAAAAEKV}
00238 {\cf20 }\par
{\bkmkstart AAAAAAAEKW}{\bkmkend AAAAAAAEKW}
00239 {\cf20 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEKX}{\bkmkend AAAAAAAEKX}
00240 {\cf20                         std::printf("RCWindow::newline: %d %d %d %d\\n" ,NewLine.x0, NewLine.y0, NewLine.x1, NewLine.y1);}\par
{\bkmkstart AAAAAAAEKY}{\bkmkend AAAAAAAEKY}
00241 {\cf20 #endif // _DEBUG}\par
{\bkmkstart AAAAAAAEKZ}{\bkmkend AAAAAAAEKZ}
00242 {\cf20 }\par
{\bkmkstart AAAAAAAELA}{\bkmkend AAAAAAAELA}
00243 {\cf20                     \}}\par
{\bkmkstart AAAAAAAELB}{\bkmkend AAAAAAAELB}
00244 {\cf20                 \}}\par
{\bkmkstart AAAAAAAELC}{\bkmkend AAAAAAAELC}
00245 {\cf20             \}}\par
{\bkmkstart AAAAAAAELD}{\bkmkend AAAAAAAELD}
00246 {\cf20 }\par
{\bkmkstart AAAAAAAELE}{\bkmkend AAAAAAAELE}
00247 {\cf20                 return 1;}\par
{\bkmkstart AAAAAAAELF}{\bkmkend AAAAAAAELF}
00248 {\cf20         \}}\par
{\bkmkstart AAAAAAAELG}{\bkmkend AAAAAAAELG}
00249 {\cf20         break;}\par
{\bkmkstart AAAAAAAELH}{\bkmkend AAAAAAAELH}
00250 {\cf20     */}\par
{\bkmkstart AAAAAAAELI}{\bkmkend AAAAAAAELI}
00251         {\cf19 case} mxEvent::MouseUp:\par
{\bkmkstart AAAAAAAELJ}{\bkmkend AAAAAAAELJ}
00252         \{\par
{\bkmkstart AAAAAAAELK}{\bkmkend AAAAAAAELK}
00253 {\cf20 //        char msg[MAX_MSG_LENGTH + 1];}\par
{\bkmkstart AAAAAAAELL}{\bkmkend AAAAAAAELL}
00254 {\cf20 //        int i = 0;}\par
{\bkmkstart AAAAAAAELM}{\bkmkend AAAAAAAELM}
00255             {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
 NewLine = \{x0,y0,x1,y1\};\par
{\bkmkstart AAAAAAAELN}{\bkmkend AAAAAAAELN}
00256 \par
{\bkmkstart AAAAAAAELO}{\bkmkend AAAAAAAELO}
00257 {\cf20 //          PrevLine = NewLine;}\par
{\bkmkstart AAAAAAAELP}{\bkmkend AAAAAAAELP}
00258             {\cf19 if}(Buffer.size() < MAX_MSG_LENGTH/4)\par
{\bkmkstart AAAAAAAELQ}{\bkmkend AAAAAAAELQ}
00259         \{\par
{\bkmkstart AAAAAAAELR}{\bkmkend AAAAAAAELR}
00260             {\cf18 unsigned} {\cf18 char} msg[MAX_MSG_LENGTH + 1];\par
{\bkmkstart AAAAAAAELS}{\bkmkend AAAAAAAELS}
00261             msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAELT}{\bkmkend AAAAAAAELT}
00262             {\cf18 int} i = 0;\par
{\bkmkstart AAAAAAAELU}{\bkmkend AAAAAAAELU}
00263 \par
{\bkmkstart AAAAAAAELV}{\bkmkend AAAAAAAELV}
00264             msg[MAX_MSG_LENGTH] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAELW}{\bkmkend AAAAAAAELW}
00265 \par
{\bkmkstart AAAAAAAELX}{\bkmkend AAAAAAAELX}
00266             CmdLines.push_back(NewLine);\par
{\bkmkstart AAAAAAAELY}{\bkmkend AAAAAAAELY}
00267             Buffer.push_back(NewLine);\par
{\bkmkstart AAAAAAAELZ}{\bkmkend AAAAAAAELZ}
00268 \par
{\bkmkstart AAAAAAAEMA}{\bkmkend AAAAAAAEMA}
00269 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEMB}{\bkmkend AAAAAAAEMB}
00270             std::printf({\cf22 "SDWindow::newline\\n"});\par
{\bkmkstart AAAAAAAEMC}{\bkmkend AAAAAAAEMC}
00271 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEMD}{\bkmkend AAAAAAAEMD}
00272 \par
{\bkmkstart AAAAAAAEME}{\bkmkend AAAAAAAEME}
00273             {\cf19 for}(drawlines_t::iterator iter_buffer = Buffer.begin(); iter_buffer != Buffer.end() && i < MAX_MSG_LENGTH; ++iter_buffer, i+=4)\par
{\bkmkstart AAAAAAAEMF}{\bkmkend AAAAAAAEMF}
00274             \{\par
{\bkmkstart AAAAAAAEMG}{\bkmkend AAAAAAAEMG}
00275             msg[i] = iter_buffer->x0;\par
{\bkmkstart AAAAAAAEMH}{\bkmkend AAAAAAAEMH}
00276             msg[i+1] = iter_buffer->y0;\par
{\bkmkstart AAAAAAAEMI}{\bkmkend AAAAAAAEMI}
00277             msg[i+2] = iter_buffer->x1;\par
{\bkmkstart AAAAAAAEMJ}{\bkmkend AAAAAAAEMJ}
00278             msg[i+3] = iter_buffer->y1;\par
{\bkmkstart AAAAAAAEMK}{\bkmkend AAAAAAAEMK}
00279             \}\par
{\bkmkstart AAAAAAAEML}{\bkmkend AAAAAAAEML}
00280 \par
{\bkmkstart AAAAAAAEMM}{\bkmkend AAAAAAAEMM}
00281             msg[i] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAEMN}{\bkmkend AAAAAAAEMN}
00282 \par
{\bkmkstart AAAAAAAEMO}{\bkmkend AAAAAAAEMO}
00283             {\cf19 if}(Buffer.size() == MAX_MSG_LENGTH/4)\par
{\bkmkstart AAAAAAAEMP}{\bkmkend AAAAAAAEMP}
00284             \{\par
{\bkmkstart AAAAAAAEMQ}{\bkmkend AAAAAAAEMQ}
00285                 SV_insert_msg(msg);\par
{\bkmkstart AAAAAAAEMR}{\bkmkend AAAAAAAEMR}
00286                 Buffer.clear();\par
{\bkmkstart AAAAAAAEMS}{\bkmkend AAAAAAAEMS}
00287             \}\par
{\bkmkstart AAAAAAAEMT}{\bkmkend AAAAAAAEMT}
00288             {\cf19 else}\par
{\bkmkstart AAAAAAAEMU}{\bkmkend AAAAAAAEMU}
00289                 {\cf19 if}(!SV_insert_msg_nb(msg))\par
{\bkmkstart AAAAAAAEMV}{\bkmkend AAAAAAAEMV}
00290                     Buffer.clear();\par
{\bkmkstart AAAAAAAEMW}{\bkmkend AAAAAAAEMW}
00291         \}\par
{\bkmkstart AAAAAAAEMX}{\bkmkend AAAAAAAEMX}
00292         {\cf19 else} {\cf19 if}(Buffer.size() > MAX_MSG_LENGTH/4)\par
{\bkmkstart AAAAAAAEMY}{\bkmkend AAAAAAAEMY}
00293                 Buffer.clear();\par
{\bkmkstart AAAAAAAEMZ}{\bkmkend AAAAAAAEMZ}
00294 \par
{\bkmkstart AAAAAAAENA}{\bkmkend AAAAAAAENA}
00295             x0 = 0;\par
{\bkmkstart AAAAAAAENB}{\bkmkend AAAAAAAENB}
00296             y0 = 0;\par
{\bkmkstart AAAAAAAENC}{\bkmkend AAAAAAAENC}
00297             x1 = 0;\par
{\bkmkstart AAAAAAAEND}{\bkmkend AAAAAAAEND}
00298             y1 = 0;\par
{\bkmkstart AAAAAAAENE}{\bkmkend AAAAAAAENE}
00299 {\cf20 //              g_viewerSettings.pause = false;}\par
{\bkmkstart AAAAAAAENF}{\bkmkend AAAAAAAENF}
00300         \}\par
{\bkmkstart AAAAAAAENG}{\bkmkend AAAAAAAENG}
00301         {\cf19 break};\par
{\bkmkstart AAAAAAAENH}{\bkmkend AAAAAAAENH}
00302 \par
{\bkmkstart AAAAAAAENI}{\bkmkend AAAAAAAENI}
00303         {\cf19 case} mxEvent::MouseDown:\par
{\bkmkstart AAAAAAAENJ}{\bkmkend AAAAAAAENJ}
00304         \{\par
{\bkmkstart AAAAAAAENK}{\bkmkend AAAAAAAENK}
00305 {\cf20 //          std::printf("%d,%d\\n", event->x, event->y);}\par
{\bkmkstart AAAAAAAENL}{\bkmkend AAAAAAAENL}
00306 {\cf20 //      std::printf("%d,%d,%d,%d\\n", x0, y0,x1,y1);}\par
{\bkmkstart AAAAAAAENM}{\bkmkend AAAAAAAENM}
00307             x0 = unsigned ({\cf18 char}( event->x * 255.0f / w2() ));\par
{\bkmkstart AAAAAAAENN}{\bkmkend AAAAAAAENN}
00308             y0 = unsigned ({\cf18 char}( event->y * 255.0f / h2() ));\par
{\bkmkstart AAAAAAAENO}{\bkmkend AAAAAAAENO}
00309             x1 = x0;\par
{\bkmkstart AAAAAAAENP}{\bkmkend AAAAAAAENP}
00310             y1 = y0;\par
{\bkmkstart AAAAAAAENQ}{\bkmkend AAAAAAAENQ}
00311 \par
{\bkmkstart AAAAAAAENR}{\bkmkend AAAAAAAENR}
00312                 {\cf19 return} 1;\par
{\bkmkstart AAAAAAAENS}{\bkmkend AAAAAAAENS}
00313         \}\par
{\bkmkstart AAAAAAAENT}{\bkmkend AAAAAAAENT}
00314         {\cf19 break};\par
{\bkmkstart AAAAAAAENU}{\bkmkend AAAAAAAENU}
00315 \par
{\bkmkstart AAAAAAAENV}{\bkmkend AAAAAAAENV}
00316         {\cf19 case} mxEvent::MouseDrag:\par
{\bkmkstart AAAAAAAENW}{\bkmkend AAAAAAAENW}
00317         \{\par
{\bkmkstart AAAAAAAENX}{\bkmkend AAAAAAAENX}
00318 {\cf20 //          std::printf("%d,%d,%d,%d\\n", x0, y0,x1,y1);}\par
{\bkmkstart AAAAAAAENY}{\bkmkend AAAAAAAENY}
00319             x1 = unsigned ({\cf18 char}( event->x * 255.0f / w2() ));\par
{\bkmkstart AAAAAAAENZ}{\bkmkend AAAAAAAENZ}
00320             y1 = unsigned ({\cf18 char}( event->y * 255.0f / h2() ));\par
{\bkmkstart AAAAAAAEOA}{\bkmkend AAAAAAAEOA}
00321 \par
{\bkmkstart AAAAAAAEOB}{\bkmkend AAAAAAAEOB}
00322                 redraw ();\par
{\bkmkstart AAAAAAAEOC}{\bkmkend AAAAAAAEOC}
00323 \par
{\bkmkstart AAAAAAAEOD}{\bkmkend AAAAAAAEOD}
00324                 {\cf19 return} 1;\par
{\bkmkstart AAAAAAAEOE}{\bkmkend AAAAAAAEOE}
00325         \}\par
{\bkmkstart AAAAAAAEOF}{\bkmkend AAAAAAAEOF}
00326         {\cf19 break};\par
{\bkmkstart AAAAAAAEOG}{\bkmkend AAAAAAAEOG}
00327         \} {\cf20 // switch (event->event)}\par
{\bkmkstart AAAAAAAEOH}{\bkmkend AAAAAAAEOH}
00328 \par
{\bkmkstart AAAAAAAEOI}{\bkmkend AAAAAAAEOI}
00329         {\cf19 return} 1;\par
{\bkmkstart AAAAAAAEOJ}{\bkmkend AAAAAAAEOJ}
00330 \}\par
{\bkmkstart AAAAAAAEOK}{\bkmkend AAAAAAAEOK}
00331 \par
{\bkmkstart AAAAAAAEOL}{\bkmkend AAAAAAAEOL}
00332 {\cf18 void} GlWindow :: draw( {\cf18 void} )\par
{\bkmkstart AAAAAAAEOM}{\bkmkend AAAAAAAEOM}
00333 \{\par
{\bkmkstart AAAAAAAEON}{\bkmkend AAAAAAAEON}
00334     glClearColor(1.0f, 1.0f, 1.0f, 1.0f);\par
{\bkmkstart AAAAAAAEOO}{\bkmkend AAAAAAAEOO}
00335     glClear(GL_COLOR_BUFFER_BIT);\par
{\bkmkstart AAAAAAAEOP}{\bkmkend AAAAAAAEOP}
00336 \par
{\bkmkstart AAAAAAAEOQ}{\bkmkend AAAAAAAEOQ}
00337     glViewport( 0, 0, w2(), h2() ); {\cf20 //resize glviewport}\par
{\bkmkstart AAAAAAAEOR}{\bkmkend AAAAAAAEOR}
00338     {\cf20 //glViewport( 0, 0, w(), h() ); //resize glviewport}\par
{\bkmkstart AAAAAAAEOS}{\bkmkend AAAAAAAEOS}
00339 \par
{\bkmkstart AAAAAAAEOT}{\bkmkend AAAAAAAEOT}
00340 {\cf20 //    glPushMatrix();}\par
{\bkmkstart AAAAAAAEOU}{\bkmkend AAAAAAAEOU}
00341 \par
{\bkmkstart AAAAAAAEOV}{\bkmkend AAAAAAAEOV}
00342     glLineWidth(3);\par
{\bkmkstart AAAAAAAEOW}{\bkmkend AAAAAAAEOW}
00343 \par
{\bkmkstart AAAAAAAEOX}{\bkmkend AAAAAAAEOX}
00344     glColor3f(0.0f, 0.0f, 0.0f);\par
{\bkmkstart AAAAAAAEOY}{\bkmkend AAAAAAAEOY}
00345     glBegin(GL_LINES);\par
{\bkmkstart AAAAAAAEOZ}{\bkmkend AAAAAAAEOZ}
00346 \par
{\bkmkstart AAAAAAAEPA}{\bkmkend AAAAAAAEPA}
00347     {\cf19 for}(drawlines_t::iterator iter_lines = CmdLines.begin(); iter_lines != CmdLines.end(); ++iter_lines)\par
{\bkmkstart AAAAAAAEPB}{\bkmkend AAAAAAAEPB}
00348     \{\par
{\bkmkstart AAAAAAAEPC}{\bkmkend AAAAAAAEPC}
00349         glVertex2f(iter_lines->x0 * 2.0f / 255.0f -1.0f, iter_lines->y0 * -2.0f / 255.0f +1.0f);\par
{\bkmkstart AAAAAAAEPD}{\bkmkend AAAAAAAEPD}
00350         glVertex2f(iter_lines->x1 * 2.0f / 255.0f -1.0f, iter_lines->y1 * -2.0f / 255.0f +1.0f);\par
{\bkmkstart AAAAAAAEPE}{\bkmkend AAAAAAAEPE}
00351     \}\par
{\bkmkstart AAAAAAAEPF}{\bkmkend AAAAAAAEPF}
00352 \par
{\bkmkstart AAAAAAAEPG}{\bkmkend AAAAAAAEPG}
00353     glVertex2f(x0 * 2.0f / 255.0f -1.0f, y0 * -2.0f / 255.0f +1.0f);\par
{\bkmkstart AAAAAAAEPH}{\bkmkend AAAAAAAEPH}
00354     glVertex2f(x1 * 2.0f / 255.0f -1.0f, y1 * -2.0f / 255.0f +1.0f);\par
{\bkmkstart AAAAAAAEPI}{\bkmkend AAAAAAAEPI}
00355 \par
{\bkmkstart AAAAAAAEPJ}{\bkmkend AAAAAAAEPJ}
00356     glEnd();\par
{\bkmkstart AAAAAAAEPK}{\bkmkend AAAAAAAEPK}
00357 \par
{\bkmkstart AAAAAAAEPL}{\bkmkend AAAAAAAEPL}
00358 \par
{\bkmkstart AAAAAAAEPM}{\bkmkend AAAAAAAEPM}
00359 {\cf20 //    glFlush();}\par
{\bkmkstart AAAAAAAEPN}{\bkmkend AAAAAAAEPN}
00360 \par
{\bkmkstart AAAAAAAEPO}{\bkmkend AAAAAAAEPO}
00361 {\cf20 //    glPopMatrix();}\par
{\bkmkstart AAAAAAAEPP}{\bkmkend AAAAAAAEPP}
00362 \}\par
{\bkmkstart AAAAAAAEPQ}{\bkmkend AAAAAAAEPQ}
00363 \par
{\bkmkstart AAAAAAAEPR}{\bkmkend AAAAAAAEPR}
00364 {\cf18 void} GlWindow :: LineClear()\{\par
{\bkmkstart AAAAAAAEPS}{\bkmkend AAAAAAAEPS}
00365 \par
{\bkmkstart AAAAAAAEPT}{\bkmkend AAAAAAAEPT}
00366     {\cf18 unsigned} {\cf18 char} msg[5] = \{255, 255, 255, 255, 0\};\par
{\bkmkstart AAAAAAAEPU}{\bkmkend AAAAAAAEPU}
00367     Buffer.clear();\par
{\bkmkstart AAAAAAAEPV}{\bkmkend AAAAAAAEPV}
00368     SV_insert_msg(msg);\par
{\bkmkstart AAAAAAAEPW}{\bkmkend AAAAAAAEPW}
00369     CmdLines.clear();\par
{\bkmkstart AAAAAAAEPX}{\bkmkend AAAAAAAEPX}
00370     redraw();\par
{\bkmkstart AAAAAAAEPY}{\bkmkend AAAAAAAEPY}
00371 \par
{\bkmkstart AAAAAAAEPZ}{\bkmkend AAAAAAAEPZ}
00372 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GlWindow.h\par \pard\plain 
{\bkmkstart AAAAAAAEQA}
{\bkmkend AAAAAAAEQA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAEQB}{\bkmkend AAAAAAAEQB}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAEQC}{\bkmkend AAAAAAAEQC}
00002 {\cf20 //}\par
{\bkmkstart AAAAAAAEQD}{\bkmkend AAAAAAAEQD}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAEQE}{\bkmkend AAAAAAAEQE}
00004 {\cf20 //}\par
{\bkmkstart AAAAAAAEQF}{\bkmkend AAAAAAAEQF}
00005 {\cf20 // file: GlWindow.h}\par
{\bkmkstart AAAAAAAEQG}{\bkmkend AAAAAAAEQG}
00006 {\cf20 // last modified:}\par
{\bkmkstart AAAAAAAEQH}{\bkmkend AAAAAAAEQH}
00007 {\cf20 // copyright:}\par
{\bkmkstart AAAAAAAEQI}{\bkmkend AAAAAAAEQI}
00008 {\cf20 // version:}\par
{\bkmkstart AAAAAAAEQJ}{\bkmkend AAAAAAAEQJ}
00009 {\cf20 //}\par
{\bkmkstart AAAAAAAEQK}{\bkmkend AAAAAAAEQK}
00010 {\cf20 // email:}\par
{\bkmkstart AAAAAAAEQL}{\bkmkend AAAAAAAEQL}
00011 {\cf20 // web:}\par
{\bkmkstart AAAAAAAEQM}{\bkmkend AAAAAAAEQM}
00012 {\cf20 //}\par
{\bkmkstart AAAAAAAEQN}{\bkmkend AAAAAAAEQN}
00013 {\cf20 */}\par
{\bkmkstart AAAAAAAEQO}{\bkmkend AAAAAAAEQO}
00014 \par
{\bkmkstart AAAAAAAEQP}{\bkmkend AAAAAAAEQP}
00015 \par
{\bkmkstart AAAAAAAEQQ}{\bkmkend AAAAAAAEQQ}
00016 {\cf21 #ifndef INCLUDED_GLWINDOW}\par
{\bkmkstart AAAAAAAEQR}{\bkmkend AAAAAAAEQR}
00017 {\cf21 #define INCLUDED_GLWINDOW}\par
{\bkmkstart AAAAAAAEQS}{\bkmkend AAAAAAAEQS}
00018 \par
{\bkmkstart AAAAAAAEQT}{\bkmkend AAAAAAAEQT}
00019 \par
{\bkmkstart AAAAAAAEQU}{\bkmkend AAAAAAAEQU}
00020 \par
{\bkmkstart AAAAAAAEQV}{\bkmkend AAAAAAAEQV}
00021 {\cf21 #ifndef INCLUDED_MXGLWINDOW}\par
{\bkmkstart AAAAAAAEQW}{\bkmkend AAAAAAAEQW}
00022 {\cf21 #include <mx/mxGlWindow.h>}\par
{\bkmkstart AAAAAAAEQX}{\bkmkend AAAAAAAEQX}
00023 {\cf21 #endif}\par
{\bkmkstart AAAAAAAEQY}{\bkmkend AAAAAAAEQY}
00024 \par
{\bkmkstart AAAAAAAEQZ}{\bkmkend AAAAAAAEQZ}
00025 {\cf21 #include "CmdLine.h"}\par
{\bkmkstart AAAAAAAERA}{\bkmkend AAAAAAAERA}
00026 \par
{\bkmkstart AAAAAAAERB}{\bkmkend AAAAAAAERB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 00027}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 : {\cf17 public} mxGlWindow {\cf20 //should be replaced with QOpenGLWidget in Qt}\par
{\bkmkstart AAAAAAAERC}{\bkmkend AAAAAAAERC}
00028 \{\par
{\bkmkstart AAAAAAAERD}{\bkmkend AAAAAAAERD}
00029 {\cf17 public}:\par
{\bkmkstart AAAAAAAERE}{\bkmkend AAAAAAAERE}
00030         {\cf20 // CREATORS}\par
{\bkmkstart AAAAAAAERF}{\bkmkend AAAAAAAERF}
00031         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label, {\cf18 int} style);\par
{\bkmkstart AAAAAAAERG}{\bkmkend AAAAAAAERG}
00032         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 ~GlWindow}}}
 ();\par
{\bkmkstart AAAAAAAERH}{\bkmkend AAAAAAAERH}
00033 \par
{\bkmkstart AAAAAAAERI}{\bkmkend AAAAAAAERI}
00034         {\cf20 // MANIPULATORS}\par
{\bkmkstart AAAAAAAERJ}{\bkmkend AAAAAAAERJ}
00035         {\cf17 virtual} {\cf18 int} handleEvent (mxEvent *event);\par
{\bkmkstart AAAAAAAERK}{\bkmkend AAAAAAAERK}
00036         {\cf17 virtual} {\cf18 void} draw ();\par
{\bkmkstart AAAAAAAERL}{\bkmkend AAAAAAAERL}
00037 \par
{\bkmkstart AAAAAAAERM}{\bkmkend AAAAAAAERM}
00038         {\cf20 // ACCESSORS}\par
{\bkmkstart AAAAAAAERN}{\bkmkend AAAAAAAERN}
00039     {\cf18 void} InsertLine ({\cf17 const} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 line_t}}}
 &newline) \{ CmdLines.push_back(newline); redraw(); \}\par
{\bkmkstart AAAAAAAERO}{\bkmkend AAAAAAAERO}
00040 {\cf20 //    line_t FetchLine ( void ) const \{ return PrevLine; \}}\par
{\bkmkstart AAAAAAAERP}{\bkmkend AAAAAAAERP}
00041     {\cf18 void} LineClear() ;\par
{\bkmkstart AAAAAAAERQ}{\bkmkend AAAAAAAERQ}
00042     {\cf18 void} LineUndo () \{ {\cf19 if}(!CmdLines.empty()) CmdLines.pop_back(); redraw(); \}\par
{\bkmkstart AAAAAAAERR}{\bkmkend AAAAAAAERR}
00043 {\cf17 private}:\par
{\bkmkstart AAAAAAAERS}{\bkmkend AAAAAAAERS}
00044     drawlines_t CmdLines;\par
{\bkmkstart AAAAAAAERT}{\bkmkend AAAAAAAERT}
00045     drawlines_t Buffer;\par
{\bkmkstart AAAAAAAERU}{\bkmkend AAAAAAAERU}
00046 {\cf20 //    line_t PrevLine;}\par
{\bkmkstart AAAAAAAERV}{\bkmkend AAAAAAAERV}
00047     {\cf18 unsigned} {\cf18 char} x0;\par
{\bkmkstart AAAAAAAERW}{\bkmkend AAAAAAAERW}
00048     {\cf18 unsigned} {\cf18 char} y0;\par
{\bkmkstart AAAAAAAERX}{\bkmkend AAAAAAAERX}
00049     {\cf18 unsigned} {\cf18 char} x1;\par
{\bkmkstart AAAAAAAERY}{\bkmkend AAAAAAAERY}
00050     {\cf18 unsigned} {\cf18 char} y1;\par
{\bkmkstart AAAAAAAERZ}{\bkmkend AAAAAAAERZ}
00051 \};\par
{\bkmkstart AAAAAAAESA}{\bkmkend AAAAAAAESA}
00052 \par
{\bkmkstart AAAAAAAESB}{\bkmkend AAAAAAAESB}
00053 \par
{\bkmkstart AAAAAAAESC}{\bkmkend AAAAAAAESC}
00054 \par
{\bkmkstart AAAAAAAESD}{\bkmkend AAAAAAAESD}
00055 {\cf17 extern} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 *g_GlWindow;\par
{\bkmkstart AAAAAAAESE}{\bkmkend AAAAAAAESE}
00056 \par
{\bkmkstart AAAAAAAESF}{\bkmkend AAAAAAAESF}
00057 \par
{\bkmkstart AAAAAAAESG}{\bkmkend AAAAAAAESG}
00058 \par
{\bkmkstart AAAAAAAESH}{\bkmkend AAAAAAAESH}
00059 {\cf21 #endif }{\cf20 // INCLUDED_GLWINDOW}\par
{\bkmkstart AAAAAAAESI}{\bkmkend AAAAAAAESI}
00060 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
painter.c\par \pard\plain 
{\bkmkstart AAAAAAAESJ}
{\bkmkend AAAAAAAESJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAESK}{\bkmkend AAAAAAAESK}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAESL}{\bkmkend AAAAAAAESL}
00002 {\cf20 //}\par
{\bkmkstart AAAAAAAESM}{\bkmkend AAAAAAAESM}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAESN}{\bkmkend AAAAAAAESN}
00004 {\cf20 //}\par
{\bkmkstart AAAAAAAESO}{\bkmkend AAAAAAAESO}
00005 {\cf20 // file: painter.c}\par
{\bkmkstart AAAAAAAESP}{\bkmkend AAAAAAAESP}
00006 {\cf20 // last modified:}\par
{\bkmkstart AAAAAAAESQ}{\bkmkend AAAAAAAESQ}
00007 {\cf20 // copyright:}\par
{\bkmkstart AAAAAAAESR}{\bkmkend AAAAAAAESR}
00008 {\cf20 // version:}\par
{\bkmkstart AAAAAAAESS}{\bkmkend AAAAAAAESS}
00009 {\cf20 //}\par
{\bkmkstart AAAAAAAEST}{\bkmkend AAAAAAAEST}
00010 {\cf20 // email:}\par
{\bkmkstart AAAAAAAESU}{\bkmkend AAAAAAAESU}
00011 {\cf20 // web:}\par
{\bkmkstart AAAAAAAESV}{\bkmkend AAAAAAAESV}
00012 {\cf20 //}\par
{\bkmkstart AAAAAAAESW}{\bkmkend AAAAAAAESW}
00013 {\cf20 */}\par
{\bkmkstart AAAAAAAESX}{\bkmkend AAAAAAAESX}
00014 \par
{\bkmkstart AAAAAAAESY}{\bkmkend AAAAAAAESY}
00015 \par
{\bkmkstart AAAAAAAESZ}{\bkmkend AAAAAAAESZ}
00016 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAAETA}{\bkmkend AAAAAAAETA}
00017 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAAETB}{\bkmkend AAAAAAAETB}
00018 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAAETC}{\bkmkend AAAAAAAETC}
00019 \par
{\bkmkstart AAAAAAAETD}{\bkmkend AAAAAAAETD}
00020 {\cf21 #include "cmdlib.h"}\par
{\bkmkstart AAAAAAAETE}{\bkmkend AAAAAAAETE}
00021 {\cf21 #include "threads.h"}\par
{\bkmkstart AAAAAAAETF}{\bkmkend AAAAAAAETF}
00022 \par
{\bkmkstart AAAAAAAETG}{\bkmkend AAAAAAAETG}
00023 {\cf21 #include "GlPainter.h"}\par
{\bkmkstart AAAAAAAETH}{\bkmkend AAAAAAAETH}
00024 {\cf21 #include "shared.h"}\par
{\bkmkstart AAAAAAAETI}{\bkmkend AAAAAAAETI}
00025 {\cf21 #include "server.h"}\par
{\bkmkstart AAAAAAAETJ}{\bkmkend AAAAAAAETJ}
00026 {\cf21 #include "client.h"}\par
{\bkmkstart AAAAAAAETK}{\bkmkend AAAAAAAETK}
00027 {\cf21 #include "action.h"}\par
{\bkmkstart AAAAAAAETL}{\bkmkend AAAAAAAETL}
00028 \par
{\bkmkstart AAAAAAAETM}{\bkmkend AAAAAAAETM}
00029 {\cf20 //#include "painter.h"}\par
{\bkmkstart AAAAAAAETN}{\bkmkend AAAAAAAETN}
00030 \par
{\bkmkstart AAAAAAAETO}{\bkmkend AAAAAAAETO}
00031 {\cf18 int} mxargc;\par
{\bkmkstart AAAAAAAETP}{\bkmkend AAAAAAAETP}
00032 {\cf18 char} **mxargv;\par
{\bkmkstart AAAAAAAETQ}{\bkmkend AAAAAAAETQ}
00033 \par
{\bkmkstart AAAAAAAETR}{\bkmkend AAAAAAAETR}
00034 qboolean dumplog = {\cf17 false};\par
{\bkmkstart AAAAAAAETS}{\bkmkend AAAAAAAETS}
00035 {\cf18 void} WriteLog ({\cf18 char} *name)\par
{\bkmkstart AAAAAAAETT}{\bkmkend AAAAAAAETT}
00036 \{\par
{\bkmkstart AAAAAAAETU}{\bkmkend AAAAAAAETU}
00037         FILE            *out;\par
{\bkmkstart AAAAAAAETV}{\bkmkend AAAAAAAETV}
00038 \par
{\bkmkstart AAAAAAAETW}{\bkmkend AAAAAAAETW}
00039         out = fopen (name, {\cf22 "w"});\par
{\bkmkstart AAAAAAAETX}{\bkmkend AAAAAAAETX}
00040         {\cf19 if} (!out)\par
{\bkmkstart AAAAAAAETY}{\bkmkend AAAAAAAETY}
00041                 Error ({\cf22 "Couldn't open %s"}, name);\par
{\bkmkstart AAAAAAAETZ}{\bkmkend AAAAAAAETZ}
00042 \par
{\bkmkstart AAAAAAAEUA}{\bkmkend AAAAAAAEUA}
00043     fprintf (out, {\cf22 "\\n"});\par
{\bkmkstart AAAAAAAEUB}{\bkmkend AAAAAAAEUB}
00044 \par
{\bkmkstart AAAAAAAEUC}{\bkmkend AAAAAAAEUC}
00045 \par
{\bkmkstart AAAAAAAEUD}{\bkmkend AAAAAAAEUD}
00046         fclose (out);\par
{\bkmkstart AAAAAAAEUE}{\bkmkend AAAAAAAEUE}
00047 \}\par
{\bkmkstart AAAAAAAEUF}{\bkmkend AAAAAAAEUF}
00048 \par
{\bkmkstart AAAAAAAEUG}{\bkmkend AAAAAAAEUG}
00049 {\cf18 void} thread_glpainter()\par
{\bkmkstart AAAAAAAEUH}{\bkmkend AAAAAAAEUH}
00050 \{\par
{\bkmkstart AAAAAAAEUI}{\bkmkend AAAAAAAEUI}
00051 \par
{\bkmkstart AAAAAAAEUJ}{\bkmkend AAAAAAAEUJ}
00052 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEUK}{\bkmkend AAAAAAAEUK}
00053     printf({\cf22 "start thread_glpainter\\n"});\par
{\bkmkstart AAAAAAAEUL}{\bkmkend AAAAAAAEUL}
00054 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEUM}{\bkmkend AAAAAAAEUM}
00055 \par
{\bkmkstart AAAAAAAEUN}{\bkmkend AAAAAAAEUN}
00056     glpainter_main();\par
{\bkmkstart AAAAAAAEUO}{\bkmkend AAAAAAAEUO}
00057 \par
{\bkmkstart AAAAAAAEUP}{\bkmkend AAAAAAAEUP}
00058 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEUQ}{\bkmkend AAAAAAAEUQ}
00059     printf({\cf22 "thread_glpainter terminated\\n"});\par
{\bkmkstart AAAAAAAEUR}{\bkmkend AAAAAAAEUR}
00060 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEUS}{\bkmkend AAAAAAAEUS}
00061 \par
{\bkmkstart AAAAAAAEUT}{\bkmkend AAAAAAAEUT}
00062 \par
{\bkmkstart AAAAAAAEUU}{\bkmkend AAAAAAAEUU}
00063 \}\par
{\bkmkstart AAAAAAAEUV}{\bkmkend AAAAAAAEUV}
00064 \par
{\bkmkstart AAAAAAAEUW}{\bkmkend AAAAAAAEUW}
00065 {\cf18 void} thread_sender()\par
{\bkmkstart AAAAAAAEUX}{\bkmkend AAAAAAAEUX}
00066 \{\par
{\bkmkstart AAAAAAAEUY}{\bkmkend AAAAAAAEUY}
00067 \par
{\bkmkstart AAAAAAAEUZ}{\bkmkend AAAAAAAEUZ}
00068 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEVA}{\bkmkend AAAAAAAEVA}
00069     printf({\cf22 "start thread_sender\\n"});\par
{\bkmkstart AAAAAAAEVB}{\bkmkend AAAAAAAEVB}
00070 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEVC}{\bkmkend AAAAAAAEVC}
00071 \par
{\bkmkstart AAAAAAAEVD}{\bkmkend AAAAAAAEVD}
00072     sender_main();\par
{\bkmkstart AAAAAAAEVE}{\bkmkend AAAAAAAEVE}
00073 \par
{\bkmkstart AAAAAAAEVF}{\bkmkend AAAAAAAEVF}
00074 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEVG}{\bkmkend AAAAAAAEVG}
00075     printf({\cf22 "thread_sender terminated\\n"});\par
{\bkmkstart AAAAAAAEVH}{\bkmkend AAAAAAAEVH}
00076 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEVI}{\bkmkend AAAAAAAEVI}
00077 \par
{\bkmkstart AAAAAAAEVJ}{\bkmkend AAAAAAAEVJ}
00078 \}\par
{\bkmkstart AAAAAAAEVK}{\bkmkend AAAAAAAEVK}
00079 \par
{\bkmkstart AAAAAAAEVL}{\bkmkend AAAAAAAEVL}
00080 {\cf18 void} thread_receiver()\par
{\bkmkstart AAAAAAAEVM}{\bkmkend AAAAAAAEVM}
00081 \{\par
{\bkmkstart AAAAAAAEVN}{\bkmkend AAAAAAAEVN}
00082 \par
{\bkmkstart AAAAAAAEVO}{\bkmkend AAAAAAAEVO}
00083 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEVP}{\bkmkend AAAAAAAEVP}
00084     printf({\cf22 "start thread_receiver\\n"});\par
{\bkmkstart AAAAAAAEVQ}{\bkmkend AAAAAAAEVQ}
00085 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEVR}{\bkmkend AAAAAAAEVR}
00086 \par
{\bkmkstart AAAAAAAEVS}{\bkmkend AAAAAAAEVS}
00087     receiver_main();\par
{\bkmkstart AAAAAAAEVT}{\bkmkend AAAAAAAEVT}
00088 \par
{\bkmkstart AAAAAAAEVU}{\bkmkend AAAAAAAEVU}
00089 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEVV}{\bkmkend AAAAAAAEVV}
00090     printf({\cf22 "thread_receiver terminated\\n"});\par
{\bkmkstart AAAAAAAEVW}{\bkmkend AAAAAAAEVW}
00091 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEVX}{\bkmkend AAAAAAAEVX}
00092 \par
{\bkmkstart AAAAAAAEVY}{\bkmkend AAAAAAAEVY}
00093 \}\par
{\bkmkstart AAAAAAAEVZ}{\bkmkend AAAAAAAEVZ}
00094 \par
{\bkmkstart AAAAAAAEWA}{\bkmkend AAAAAAAEWA}
00095 {\cf18 void} thread_server()\par
{\bkmkstart AAAAAAAEWB}{\bkmkend AAAAAAAEWB}
00096 \{\par
{\bkmkstart AAAAAAAEWC}{\bkmkend AAAAAAAEWC}
00097 \par
{\bkmkstart AAAAAAAEWD}{\bkmkend AAAAAAAEWD}
00098 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEWE}{\bkmkend AAAAAAAEWE}
00099     printf({\cf22 "start thread_server\\n"});\par
{\bkmkstart AAAAAAAEWF}{\bkmkend AAAAAAAEWF}
00100 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEWG}{\bkmkend AAAAAAAEWG}
00101 \par
{\bkmkstart AAAAAAAEWH}{\bkmkend AAAAAAAEWH}
00102     server_main();\par
{\bkmkstart AAAAAAAEWI}{\bkmkend AAAAAAAEWI}
00103 \par
{\bkmkstart AAAAAAAEWJ}{\bkmkend AAAAAAAEWJ}
00104 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEWK}{\bkmkend AAAAAAAEWK}
00105     printf({\cf22 "thread_server terminated\\n"});\par
{\bkmkstart AAAAAAAEWL}{\bkmkend AAAAAAAEWL}
00106 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEWM}{\bkmkend AAAAAAAEWM}
00107 \par
{\bkmkstart AAAAAAAEWN}{\bkmkend AAAAAAAEWN}
00108 \}\par
{\bkmkstart AAAAAAAEWO}{\bkmkend AAAAAAAEWO}
00109 \par
{\bkmkstart AAAAAAAEWP}{\bkmkend AAAAAAAEWP}
00110 {\cf18 void} thread_client()\par
{\bkmkstart AAAAAAAEWQ}{\bkmkend AAAAAAAEWQ}
00111 \{\par
{\bkmkstart AAAAAAAEWR}{\bkmkend AAAAAAAEWR}
00112 \par
{\bkmkstart AAAAAAAEWS}{\bkmkend AAAAAAAEWS}
00113 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEWT}{\bkmkend AAAAAAAEWT}
00114     printf({\cf22 "start thread_client\\n"});\par
{\bkmkstart AAAAAAAEWU}{\bkmkend AAAAAAAEWU}
00115 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEWV}{\bkmkend AAAAAAAEWV}
00116 \par
{\bkmkstart AAAAAAAEWW}{\bkmkend AAAAAAAEWW}
00117     client_main();\par
{\bkmkstart AAAAAAAEWX}{\bkmkend AAAAAAAEWX}
00118 \par
{\bkmkstart AAAAAAAEWY}{\bkmkend AAAAAAAEWY}
00119 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEWZ}{\bkmkend AAAAAAAEWZ}
00120     printf({\cf22 "thread_client terminated\\n"});\par
{\bkmkstart AAAAAAAEXA}{\bkmkend AAAAAAAEXA}
00121 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEXB}{\bkmkend AAAAAAAEXB}
00122 \par
{\bkmkstart AAAAAAAEXC}{\bkmkend AAAAAAAEXC}
00123 \}\par
{\bkmkstart AAAAAAAEXD}{\bkmkend AAAAAAAEXD}
00124 \par
{\bkmkstart AAAAAAAEXE}{\bkmkend AAAAAAAEXE}
00125 {\cf18 void} thread_cmd()\par
{\bkmkstart AAAAAAAEXF}{\bkmkend AAAAAAAEXF}
00126 \{\par
{\bkmkstart AAAAAAAEXG}{\bkmkend AAAAAAAEXG}
00127 \par
{\bkmkstart AAAAAAAEXH}{\bkmkend AAAAAAAEXH}
00128 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEXI}{\bkmkend AAAAAAAEXI}
00129     printf({\cf22 "start thread_cmd\\n"});\par
{\bkmkstart AAAAAAAEXJ}{\bkmkend AAAAAAAEXJ}
00130 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEXK}{\bkmkend AAAAAAAEXK}
00131 \par
{\bkmkstart AAAAAAAEXL}{\bkmkend AAAAAAAEXL}
00132     action_main();\par
{\bkmkstart AAAAAAAEXM}{\bkmkend AAAAAAAEXM}
00133 \par
{\bkmkstart AAAAAAAEXN}{\bkmkend AAAAAAAEXN}
00134 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAEXO}{\bkmkend AAAAAAAEXO}
00135     printf({\cf22 "thread_cmd terminated\\n"});\par
{\bkmkstart AAAAAAAEXP}{\bkmkend AAAAAAAEXP}
00136 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAEXQ}{\bkmkend AAAAAAAEXQ}
00137 \par
{\bkmkstart AAAAAAAEXR}{\bkmkend AAAAAAAEXR}
00138 \}\par
{\bkmkstart AAAAAAAEXS}{\bkmkend AAAAAAAEXS}
00139 \par
{\bkmkstart AAAAAAAEXT}{\bkmkend AAAAAAAEXT}
00140 {\cf18 void} thread_create({\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAEXU}{\bkmkend AAAAAAAEXU}
00141 \{\par
{\bkmkstart AAAAAAAEXV}{\bkmkend AAAAAAAEXV}
00142     {\cf19 switch}({\cf18 id})\par
{\bkmkstart AAAAAAAEXW}{\bkmkend AAAAAAAEXW}
00143     \{\par
{\bkmkstart AAAAAAAEXX}{\bkmkend AAAAAAAEXX}
00144         {\cf19 case} 0 : thread_sender();{\cf19 break};\par
{\bkmkstart AAAAAAAEXY}{\bkmkend AAAAAAAEXY}
00145         {\cf19 case} 1 : thread_receiver();{\cf19 break};\par
{\bkmkstart AAAAAAAEXZ}{\bkmkend AAAAAAAEXZ}
00146         {\cf19 case} 2 : thread_server();{\cf19 break};\par
{\bkmkstart AAAAAAAEYA}{\bkmkend AAAAAAAEYA}
00147         {\cf19 case} 3 : thread_client();{\cf19 break};\par
{\bkmkstart AAAAAAAEYB}{\bkmkend AAAAAAAEYB}
00148         {\cf19 case} 4 : thread_cmd();{\cf19 break};\par
{\bkmkstart AAAAAAAEYC}{\bkmkend AAAAAAAEYC}
00149         {\cf19 case} 5 : thread_glpainter();{\cf19 break};\par
{\bkmkstart AAAAAAAEYD}{\bkmkend AAAAAAAEYD}
00150     \}\par
{\bkmkstart AAAAAAAEYE}{\bkmkend AAAAAAAEYE}
00151 \}\par
{\bkmkstart AAAAAAAEYF}{\bkmkend AAAAAAAEYF}
00152 \par
{\bkmkstart AAAAAAAEYG}{\bkmkend AAAAAAAEYG}
00153 {\cf18 int} main( {\cf18 int} argc, {\cf18 char} **argv )\par
{\bkmkstart AAAAAAAEYH}{\bkmkend AAAAAAAEYH}
00154 \{\par
{\bkmkstart AAAAAAAEYI}{\bkmkend AAAAAAAEYI}
00155     {\cf18 int} i;\par
{\bkmkstart AAAAAAAEYJ}{\bkmkend AAAAAAAEYJ}
00156         {\cf18 double}          start, end;\par
{\bkmkstart AAAAAAAEYK}{\bkmkend AAAAAAAEYK}
00157 \par
{\bkmkstart AAAAAAAEYL}{\bkmkend AAAAAAAEYL}
00158         printf( {\cf22 "painter.exe  (%s)\\n"}, __DATE__ );\par
{\bkmkstart AAAAAAAEYM}{\bkmkend AAAAAAAEYM}
00159         printf ({\cf22 "----- Painter ----\\n"});\par
{\bkmkstart AAAAAAAEYN}{\bkmkend AAAAAAAEYN}
00160 \par
{\bkmkstart AAAAAAAEYO}{\bkmkend AAAAAAAEYO}
00161         verbose = {\cf17 true};  {\cf20 /* Originally FALSE */}\par
{\bkmkstart AAAAAAAEYP}{\bkmkend AAAAAAAEYP}
00162 \par
{\bkmkstart AAAAAAAEYQ}{\bkmkend AAAAAAAEYQ}
00163         {\cf19 for} (i=0 ; i<argc ; i++)\par
{\bkmkstart AAAAAAAEYR}{\bkmkend AAAAAAAEYR}
00164         \{\par
{\bkmkstart AAAAAAAEYS}{\bkmkend AAAAAAAEYS}
00165                 {\cf19 if} (!strcmp(argv[i],{\cf22 "-log"}))\par
{\bkmkstart AAAAAAAEYT}{\bkmkend AAAAAAAEYT}
00166                         dumplog = {\cf17 true};\par
{\bkmkstart AAAAAAAEYU}{\bkmkend AAAAAAAEYU}
00167                 {\cf19 else} {\cf19 if} (!strcmp(argv[i],{\cf22 "-verbose"}))\par
{\bkmkstart AAAAAAAEYV}{\bkmkend AAAAAAAEYV}
00168                 \{\par
{\bkmkstart AAAAAAAEYW}{\bkmkend AAAAAAAEYW}
00169                         verbose = {\cf17 true};\par
{\bkmkstart AAAAAAAEYX}{\bkmkend AAAAAAAEYX}
00170                 \}\par
{\bkmkstart AAAAAAAEYY}{\bkmkend AAAAAAAEYY}
00171                 {\cf19 else} {\cf19 if} (!strcmp(argv[i],{\cf22 "-terse"}))\par
{\bkmkstart AAAAAAAEYZ}{\bkmkend AAAAAAAEYZ}
00172                 \{\par
{\bkmkstart AAAAAAAEZA}{\bkmkend AAAAAAAEZA}
00173                         verbose = {\cf17 false};\par
{\bkmkstart AAAAAAAEZB}{\bkmkend AAAAAAAEZB}
00174                 \}\par
{\bkmkstart AAAAAAAEZC}{\bkmkend AAAAAAAEZC}
00175                 {\cf19 else} {\cf19 if} (!strcmp(argv[i],{\cf22 "-threads"}))\par
{\bkmkstart AAAAAAAEZD}{\bkmkend AAAAAAAEZD}
00176                 \{\par
{\bkmkstart AAAAAAAEZE}{\bkmkend AAAAAAAEZE}
00177                         {\cf19 if} ( ++i < argc )\par
{\bkmkstart AAAAAAAEZF}{\bkmkend AAAAAAAEZF}
00178                         \{\par
{\bkmkstart AAAAAAAEZG}{\bkmkend AAAAAAAEZG}
00179                                 numthreads = atoi (argv[i]);\par
{\bkmkstart AAAAAAAEZH}{\bkmkend AAAAAAAEZH}
00180                                 {\cf19 if} ( numthreads <= 0 )\par
{\bkmkstart AAAAAAAEZI}{\bkmkend AAAAAAAEZI}
00181                                 \{\par
{\bkmkstart AAAAAAAEZJ}{\bkmkend AAAAAAAEZJ}
00182                                         fprintf(stderr, {\cf22 "Error: expected positive value after '-threads'\\n"} );\par
{\bkmkstart AAAAAAAEZK}{\bkmkend AAAAAAAEZK}
00183                                         {\cf19 return} 1;\par
{\bkmkstart AAAAAAAEZL}{\bkmkend AAAAAAAEZL}
00184                                 \}\par
{\bkmkstart AAAAAAAEZM}{\bkmkend AAAAAAAEZM}
00185                         \}\par
{\bkmkstart AAAAAAAEZN}{\bkmkend AAAAAAAEZN}
00186                         {\cf19 else}\par
{\bkmkstart AAAAAAAEZO}{\bkmkend AAAAAAAEZO}
00187                         \{\par
{\bkmkstart AAAAAAAEZP}{\bkmkend AAAAAAAEZP}
00188                                 fprintf( stderr, {\cf22 "Error: expected a value after '-threads'\\n"} );\par
{\bkmkstart AAAAAAAEZQ}{\bkmkend AAAAAAAEZQ}
00189                                 {\cf19 return} 1;\par
{\bkmkstart AAAAAAAEZR}{\bkmkend AAAAAAAEZR}
00190                         \}\par
{\bkmkstart AAAAAAAEZS}{\bkmkend AAAAAAAEZS}
00191                 \}\par
{\bkmkstart AAAAAAAEZT}{\bkmkend AAAAAAAEZT}
00192         \}\par
{\bkmkstart AAAAAAAEZU}{\bkmkend AAAAAAAEZU}
00193 \par
{\bkmkstart AAAAAAAEZV}{\bkmkend AAAAAAAEZV}
00194         {\cf19 if} (i != argc )\par
{\bkmkstart AAAAAAAEZW}{\bkmkend AAAAAAAEZW}
00195                 Error ({\cf22 "usage: painter [-log] [-threads n] [-verbose] [-terse]"});\par
{\bkmkstart AAAAAAAEZX}{\bkmkend AAAAAAAEZX}
00196 \par
{\bkmkstart AAAAAAAEZY}{\bkmkend AAAAAAAEZY}
00197     ThreadSetDefault ();\par
{\bkmkstart AAAAAAAEZZ}{\bkmkend AAAAAAAEZZ}
00198 \par
{\bkmkstart AAAAAAAFAA}{\bkmkend AAAAAAAFAA}
00199 {\cf21 #ifndef WIN32}\par
{\bkmkstart AAAAAAAFAB}{\bkmkend AAAAAAAFAB}
00200     numthreads = 6;\par
{\bkmkstart AAAAAAAFAC}{\bkmkend AAAAAAAFAC}
00201 {\cf21 #endif }{\cf20 /*// WIN32*/}{\cf21 }\par
{\bkmkstart AAAAAAAFAD}{\bkmkend AAAAAAAFAD}
00202 \par
{\bkmkstart AAAAAAAFAE}{\bkmkend AAAAAAAFAE}
00203     mxargc = argc;\par
{\bkmkstart AAAAAAAFAF}{\bkmkend AAAAAAAFAF}
00204     mxargv = argv;\par
{\bkmkstart AAAAAAAFAG}{\bkmkend AAAAAAAFAG}
00205     start = I_FloatTime ();\par
{\bkmkstart AAAAAAAFAH}{\bkmkend AAAAAAAFAH}
00206         RunThreadsOnIndividual(6, {\cf17 false}, thread_create);\par
{\bkmkstart AAAAAAAFAI}{\bkmkend AAAAAAAFAI}
00207 {\cf20 /*}\par
{\bkmkstart AAAAAAAFAJ}{\bkmkend AAAAAAAFAJ}
00208 {\cf20  //      RunThreadsOn (6, true, thread_create);}\par
{\bkmkstart AAAAAAAFAK}{\bkmkend AAAAAAAFAK}
00209 {\cf20  //      RunThreadsOn (6, true, thread_create);}\par
{\bkmkstart AAAAAAAFAL}{\bkmkend AAAAAAAFAL}
00210 {\cf20  */}\par
{\bkmkstart AAAAAAAFAM}{\bkmkend AAAAAAAFAM}
00211         end = I_FloatTime ();\par
{\bkmkstart AAAAAAAFAN}{\bkmkend AAAAAAAFAN}
00212     printf ({\cf22 "%5.0f seconds elapsed\\n"}, end-start);\par
{\bkmkstart AAAAAAAFAO}{\bkmkend AAAAAAAFAO}
00213 \par
{\bkmkstart AAAAAAAFAP}{\bkmkend AAAAAAAFAP}
00214     {\cf19 return} 0;\par
{\bkmkstart AAAAAAAFAQ}{\bkmkend AAAAAAAFAQ}
00215 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mx.cpp\par \pard\plain 
{\tc\tcl2 \v mx.cpp}
{\xe \v mx.cpp}
{\bkmkstart AAAAAAAFAR}
{\bkmkend AAAAAAAFAR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFAS}{\bkmkend AAAAAAAFAS}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFAT}{\bkmkend AAAAAAAFAT}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFAU}{\bkmkend AAAAAAAFAU}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFAV}{\bkmkend AAAAAAAFAV}
00004 {\cf20 // file:           mx.cpp}\par
{\bkmkstart AAAAAAAFAW}{\bkmkend AAAAAAAFAW}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFAX}{\bkmkend AAAAAAAFAX}
00006 {\cf20 // last modified:  May 04 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFAY}{\bkmkend AAAAAAAFAY}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFAZ}{\bkmkend AAAAAAAFAZ}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFBA}{\bkmkend AAAAAAAFBA}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFBB}{\bkmkend AAAAAAAFBB}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFBC}{\bkmkend AAAAAAAFBC}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFBD}{\bkmkend AAAAAAAFBD}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFBE}{\bkmkend AAAAAAAFBE}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFBF}{\bkmkend AAAAAAAFBF}
00014 {\cf21 #include <mx/mx.h>}\par
{\bkmkstart AAAAAAAFBG}{\bkmkend AAAAAAAFBG}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAFBH}{\bkmkend AAAAAAAFBH}
00016 {\cf21 #include <mx/mxLinkedList.h>}\par
{\bkmkstart AAAAAAAFBI}{\bkmkend AAAAAAAFBI}
00017 {\cf21 #include <QApplication>}\par
{\bkmkstart AAAAAAAFBJ}{\bkmkend AAAAAAAFBJ}
00018 {\cf21 #include <QDesktopWidget>}\par
{\bkmkstart AAAAAAAFBK}{\bkmkend AAAAAAAFBK}
00019 {\cf21 #include <QTimer>}\par
{\bkmkstart AAAAAAAFBL}{\bkmkend AAAAAAAFBL}
00020 {\cf21 #include <time.h>}\par
{\bkmkstart AAAAAAAFBM}{\bkmkend AAAAAAAFBM}
00021 {\cf21 #include <unistd.h>}\par
{\bkmkstart AAAAAAAFBN}{\bkmkend AAAAAAAFBN}
00022 \par
{\bkmkstart AAAAAAAFBO}{\bkmkend AAAAAAAFBO}
00023 \par
{\bkmkstart AAAAAAAFBP}{\bkmkend AAAAAAAFBP}
00024 QApplication *d_Application;\par
{\bkmkstart AAAAAAAFBQ}{\bkmkend AAAAAAAFBQ}
00025 mxWindow *d_mainWindow;\par
{\bkmkstart AAAAAAAFBR}{\bkmkend AAAAAAAFBR}
00026 mxLinkedList *d_widgetList;\par
{\bkmkstart AAAAAAAFBS}{\bkmkend AAAAAAAFBS}
00027 QTimer *d_timer;\par
{\bkmkstart AAAAAAAFBT}{\bkmkend AAAAAAAFBT}
00028 {\cf17 static} {\cf18 char} d_appPath[256];\par
{\bkmkstart AAAAAAAFBU}{\bkmkend AAAAAAAFBU}
00029 {\cf17 static} {\cf18 int} d_argc; {\cf20 // kludge for stupid bug in QCoreApplication::arguments()}\par
{\bkmkstart AAAAAAAFBV}{\bkmkend AAAAAAAFBV}
00030 \par
{\bkmkstart AAAAAAAFBW}{\bkmkend AAAAAAAFBW}
00031 \par
{\bkmkstart AAAAAAAFBX}{\bkmkend AAAAAAAFBX}
00032 \par
{\bkmkstart AAAAAAAFBY}{\bkmkend AAAAAAAFBY}
00033 {\cf18 void} mx_addWidget (mxWidget *widget)\par
{\bkmkstart AAAAAAAFBZ}{\bkmkend AAAAAAAFBZ}
00034 \{\par
{\bkmkstart AAAAAAAFCA}{\bkmkend AAAAAAAFCA}
00035         {\cf19 if} (d_widgetList)\par
{\bkmkstart AAAAAAAFCB}{\bkmkend AAAAAAAFCB}
00036                 d_widgetList->add (({\cf18 void} *) widget);\par
{\bkmkstart AAAAAAAFCC}{\bkmkend AAAAAAAFCC}
00037 \}\par
{\bkmkstart AAAAAAAFCD}{\bkmkend AAAAAAAFCD}
00038 \par
{\bkmkstart AAAAAAAFCE}{\bkmkend AAAAAAAFCE}
00039 \par
{\bkmkstart AAAAAAAFCF}{\bkmkend AAAAAAAFCF}
00040 \par
{\bkmkstart AAAAAAAFCG}{\bkmkend AAAAAAAFCG}
00041 {\cf18 void} mx_removeWidget (mxWidget *widget)\par
{\bkmkstart AAAAAAAFCH}{\bkmkend AAAAAAAFCH}
00042 \{\par
{\bkmkstart AAAAAAAFCI}{\bkmkend AAAAAAAFCI}
00043         {\cf19 if} (d_widgetList)\par
{\bkmkstart AAAAAAAFCJ}{\bkmkend AAAAAAAFCJ}
00044                 d_widgetList->remove (({\cf18 void} *) widget);\par
{\bkmkstart AAAAAAAFCK}{\bkmkend AAAAAAAFCK}
00045 \}\par
{\bkmkstart AAAAAAAFCL}{\bkmkend AAAAAAAFCL}
00046 \par
{\bkmkstart AAAAAAAFCM}{\bkmkend AAAAAAAFCM}
00047 \par
{\bkmkstart AAAAAAAFCN}{\bkmkend AAAAAAAFCN}
00048 \par
{\bkmkstart AAAAAAAFCO}{\bkmkend AAAAAAAFCO}
00049 {\cf18 int}\par
{\bkmkstart AAAAAAAFCP}{\bkmkend AAAAAAAFCP}
00050 mx::init ({\cf18 int} argc, {\cf18 char} *argv[])\par
{\bkmkstart AAAAAAAFCQ}{\bkmkend AAAAAAAFCQ}
00051 \{\par
{\bkmkstart AAAAAAAFCR}{\bkmkend AAAAAAAFCR}
00052         strcpy (d_appPath, argv[0]);\par
{\bkmkstart AAAAAAAFCS}{\bkmkend AAAAAAAFCS}
00053         {\cf18 char} *ptr = strrchr (d_appPath, {\cf23 '/'});\par
{\bkmkstart AAAAAAAFCT}{\bkmkend AAAAAAAFCT}
00054         {\cf19 if} (ptr)\par
{\bkmkstart AAAAAAAFCU}{\bkmkend AAAAAAAFCU}
00055                 *ptr = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAFCV}{\bkmkend AAAAAAAFCV}
00056                 \par
{\bkmkstart AAAAAAAFCW}{\bkmkend AAAAAAAFCW}
00057         d_argc = argc;\par
{\bkmkstart AAAAAAAFCX}{\bkmkend AAAAAAAFCX}
00058         d_Application = {\cf17 new} QApplication (d_argc, argv);\par
{\bkmkstart AAAAAAAFCY}{\bkmkend AAAAAAAFCY}
00059         d_widgetList = {\cf17 new} mxLinkedList ();\par
{\bkmkstart AAAAAAAFCZ}{\bkmkend AAAAAAAFCZ}
00060         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAFDA}{\bkmkend AAAAAAAFDA}
00061 \}\par
{\bkmkstart AAAAAAAFDB}{\bkmkend AAAAAAAFDB}
00062 \par
{\bkmkstart AAAAAAAFDC}{\bkmkend AAAAAAAFDC}
00063 \par
{\bkmkstart AAAAAAAFDD}{\bkmkend AAAAAAAFDD}
00064 \par
{\bkmkstart AAAAAAAFDE}{\bkmkend AAAAAAAFDE}
00065 {\cf18 int}\par
{\bkmkstart AAAAAAAFDF}{\bkmkend AAAAAAAFDF}
00066 mx::run ()\par
{\bkmkstart AAAAAAAFDG}{\bkmkend AAAAAAAFDG}
00067 \{\par
{\bkmkstart AAAAAAAFDH}{\bkmkend AAAAAAAFDH}
00068         {\cf19 return} d_Application->exec ();\par
{\bkmkstart AAAAAAAFDI}{\bkmkend AAAAAAAFDI}
00069 \}\par
{\bkmkstart AAAAAAAFDJ}{\bkmkend AAAAAAAFDJ}
00070 \par
{\bkmkstart AAAAAAAFDK}{\bkmkend AAAAAAAFDK}
00071 \par
{\bkmkstart AAAAAAAFDL}{\bkmkend AAAAAAAFDL}
00072 \par
{\bkmkstart AAAAAAAFDM}{\bkmkend AAAAAAAFDM}
00073 {\cf18 int}\par
{\bkmkstart AAAAAAAFDN}{\bkmkend AAAAAAAFDN}
00074 mx::check ()\par
{\bkmkstart AAAAAAAFDO}{\bkmkend AAAAAAAFDO}
00075 \{\par
{\bkmkstart AAAAAAAFDP}{\bkmkend AAAAAAAFDP}
00076         d_Application->processEvents ();\par
{\bkmkstart AAAAAAAFDQ}{\bkmkend AAAAAAAFDQ}
00077         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAFDR}{\bkmkend AAAAAAAFDR}
00078 \}\par
{\bkmkstart AAAAAAAFDS}{\bkmkend AAAAAAAFDS}
00079 \par
{\bkmkstart AAAAAAAFDT}{\bkmkend AAAAAAAFDT}
00080 \par
{\bkmkstart AAAAAAAFDU}{\bkmkend AAAAAAAFDU}
00081 \par
{\bkmkstart AAAAAAAFDV}{\bkmkend AAAAAAAFDV}
00082 {\cf18 void}\par
{\bkmkstart AAAAAAAFDW}{\bkmkend AAAAAAAFDW}
00083 mx::sleep ({\cf18 unsigned} {\cf18 int} msec)\par
{\bkmkstart AAAAAAAFDX}{\bkmkend AAAAAAAFDX}
00084 \{\par
{\bkmkstart AAAAAAAFDY}{\bkmkend AAAAAAAFDY}
00085         usleep (msec * 1000);\par
{\bkmkstart AAAAAAAFDZ}{\bkmkend AAAAAAAFDZ}
00086 \}\par
{\bkmkstart AAAAAAAFEA}{\bkmkend AAAAAAAFEA}
00087 \par
{\bkmkstart AAAAAAAFEB}{\bkmkend AAAAAAAFEB}
00088 \par
{\bkmkstart AAAAAAAFEC}{\bkmkend AAAAAAAFEC}
00089 \par
{\bkmkstart AAAAAAAFED}{\bkmkend AAAAAAAFED}
00090 {\cf18 void}\par
{\bkmkstart AAAAAAAFEE}{\bkmkend AAAAAAAFEE}
00091 mx::quit ()\par
{\bkmkstart AAAAAAAFEF}{\bkmkend AAAAAAAFEF}
00092 \{\par
{\bkmkstart AAAAAAAFEG}{\bkmkend AAAAAAAFEG}
00093 {\cf20 /*}\par
{\bkmkstart AAAAAAAFEH}{\bkmkend AAAAAAAFEH}
00094 {\cf20         if (d_widgetList)}\par
{\bkmkstart AAAAAAAFEI}{\bkmkend AAAAAAAFEI}
00095 {\cf20         \{}\par
{\bkmkstart AAAAAAAFEJ}{\bkmkend AAAAAAAFEJ}
00096 {\cf20 }\par
{\bkmkstart AAAAAAAFEK}{\bkmkend AAAAAAAFEK}
00097 {\cf20                 mxListNode *node = d_widgetList->getLast ();}\par
{\bkmkstart AAAAAAAFEL}{\bkmkend AAAAAAAFEL}
00098 {\cf20                 while (node)}\par
{\bkmkstart AAAAAAAFEM}{\bkmkend AAAAAAAFEM}
00099 {\cf20                 \{}\par
{\bkmkstart AAAAAAAFEN}{\bkmkend AAAAAAAFEN}
00100 {\cf20                         mxWidget *widget = (mxWidget *) d_widgetList->getData (node);}\par
{\bkmkstart AAAAAAAFEO}{\bkmkend AAAAAAAFEO}
00101 {\cf20                         node = d_widgetList->getPrev (node);}\par
{\bkmkstart AAAAAAAFEP}{\bkmkend AAAAAAAFEP}
00102 {\cf20                         if (widget)}\par
{\bkmkstart AAAAAAAFEQ}{\bkmkend AAAAAAAFEQ}
00103 {\cf20                         \{}\par
{\bkmkstart AAAAAAAFER}{\bkmkend AAAAAAAFER}
00104 {\cf20                                 delete widget;}\par
{\bkmkstart AAAAAAAFES}{\bkmkend AAAAAAAFES}
00105 {\cf20                         \}}\par
{\bkmkstart AAAAAAAFET}{\bkmkend AAAAAAAFET}
00106 {\cf20                 \}}\par
{\bkmkstart AAAAAAAFEU}{\bkmkend AAAAAAAFEU}
00107 {\cf20 }\par
{\bkmkstart AAAAAAAFEV}{\bkmkend AAAAAAAFEV}
00108 {\cf20                 delete d_widgetList;}\par
{\bkmkstart AAAAAAAFEW}{\bkmkend AAAAAAAFEW}
00109 {\cf20         \}}\par
{\bkmkstart AAAAAAAFEX}{\bkmkend AAAAAAAFEX}
00110 {\cf20 */}\par
{\bkmkstart AAAAAAAFEY}{\bkmkend AAAAAAAFEY}
00111         {\cf17 delete} d_mainWindow;\par
{\bkmkstart AAAAAAAFEZ}{\bkmkend AAAAAAAFEZ}
00112         d_Application->exit (0);\par
{\bkmkstart AAAAAAAFFA}{\bkmkend AAAAAAAFFA}
00113         {\cf17 delete} d_Application;\par
{\bkmkstart AAAAAAAFFB}{\bkmkend AAAAAAAFFB}
00114         exit (0);\par
{\bkmkstart AAAAAAAFFC}{\bkmkend AAAAAAAFFC}
00115 \}\par
{\bkmkstart AAAAAAAFFD}{\bkmkend AAAAAAAFFD}
00116 \par
{\bkmkstart AAAAAAAFFE}{\bkmkend AAAAAAAFFE}
00117 \par
{\bkmkstart AAAAAAAFFF}{\bkmkend AAAAAAAFFF}
00118 \par
{\bkmkstart AAAAAAAFFG}{\bkmkend AAAAAAAFFG}
00119 {\cf18 int}\par
{\bkmkstart AAAAAAAFFH}{\bkmkend AAAAAAAFFH}
00120 mx::setDisplayMode ({\cf18 int} w, {\cf18 int} h, {\cf18 int} bpp)\par
{\bkmkstart AAAAAAAFFI}{\bkmkend AAAAAAAFFI}
00121 \{\par
{\bkmkstart AAAAAAAFFJ}{\bkmkend AAAAAAAFFJ}
00122         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAFFK}{\bkmkend AAAAAAAFFK}
00123 \}\par
{\bkmkstart AAAAAAAFFL}{\bkmkend AAAAAAAFFL}
00124 \par
{\bkmkstart AAAAAAAFFM}{\bkmkend AAAAAAAFFM}
00125 \par
{\bkmkstart AAAAAAAFFN}{\bkmkend AAAAAAAFFN}
00126 \par
{\bkmkstart AAAAAAAFFO}{\bkmkend AAAAAAAFFO}
00127 {\cf18 void}\par
{\bkmkstart AAAAAAAFFP}{\bkmkend AAAAAAAFFP}
00128 mx::setIdleWindow (mxWindow *window)\par
{\bkmkstart AAAAAAAFFQ}{\bkmkend AAAAAAAFFQ}
00129 \{\par
{\bkmkstart AAAAAAAFFR}{\bkmkend AAAAAAAFFR}
00130         {\cf19 if} (d_timer)\par
{\bkmkstart AAAAAAAFFS}{\bkmkend AAAAAAAFFS}
00131         \{\par
{\bkmkstart AAAAAAAFFT}{\bkmkend AAAAAAAFFT}
00132                 d_timer->stop ();\par
{\bkmkstart AAAAAAAFFU}{\bkmkend AAAAAAAFFU}
00133                 {\cf17 delete} d_timer;\par
{\bkmkstart AAAAAAAFFV}{\bkmkend AAAAAAAFFV}
00134                 d_timer = 0;\par
{\bkmkstart AAAAAAAFFW}{\bkmkend AAAAAAAFFW}
00135         \}\par
{\bkmkstart AAAAAAAFFX}{\bkmkend AAAAAAAFFX}
00136         \par
{\bkmkstart AAAAAAAFFY}{\bkmkend AAAAAAAFFY}
00137         {\cf19 if} (window)\par
{\bkmkstart AAAAAAAFFZ}{\bkmkend AAAAAAAFFZ}
00138         \{\par
{\bkmkstart AAAAAAAFGA}{\bkmkend AAAAAAAFGA}
00139                 QWidget *w = (QWidget *) window->getHandle ();\par
{\bkmkstart AAAAAAAFGB}{\bkmkend AAAAAAAFGB}
00140                 d_timer = {\cf17 new} QTimer (w);\par
{\bkmkstart AAAAAAAFGC}{\bkmkend AAAAAAAFGC}
00141                 QObject::connect (d_timer, SIGNAL (timeout ()), w, SLOT (idleEvent ()));\par
{\bkmkstart AAAAAAAFGD}{\bkmkend AAAAAAAFGD}
00142                 d_timer->start (1);\par
{\bkmkstart AAAAAAAFGE}{\bkmkend AAAAAAAFGE}
00143         \}\par
{\bkmkstart AAAAAAAFGF}{\bkmkend AAAAAAAFGF}
00144 \}\par
{\bkmkstart AAAAAAAFGG}{\bkmkend AAAAAAAFGG}
00145 \par
{\bkmkstart AAAAAAAFGH}{\bkmkend AAAAAAAFGH}
00146 \par
{\bkmkstart AAAAAAAFGI}{\bkmkend AAAAAAAFGI}
00147  \par
{\bkmkstart AAAAAAAFGJ}{\bkmkend AAAAAAAFGJ}
00148 {\cf18 int}\par
{\bkmkstart AAAAAAAFGK}{\bkmkend AAAAAAAFGK}
00149 mx::getDisplayWidth ()\par
{\bkmkstart AAAAAAAFGL}{\bkmkend AAAAAAAFGL}
00150 \{\par
{\bkmkstart AAAAAAAFGM}{\bkmkend AAAAAAAFGM}
00151         {\cf19 return} QApplication::desktop ()->width ();\par
{\bkmkstart AAAAAAAFGN}{\bkmkend AAAAAAAFGN}
00152 \}\par
{\bkmkstart AAAAAAAFGO}{\bkmkend AAAAAAAFGO}
00153 \par
{\bkmkstart AAAAAAAFGP}{\bkmkend AAAAAAAFGP}
00154 \par
{\bkmkstart AAAAAAAFGQ}{\bkmkend AAAAAAAFGQ}
00155 \par
{\bkmkstart AAAAAAAFGR}{\bkmkend AAAAAAAFGR}
00156 {\cf18 int}\par
{\bkmkstart AAAAAAAFGS}{\bkmkend AAAAAAAFGS}
00157 mx::getDisplayHeight ()\par
{\bkmkstart AAAAAAAFGT}{\bkmkend AAAAAAAFGT}
00158 \{\par
{\bkmkstart AAAAAAAFGU}{\bkmkend AAAAAAAFGU}
00159         {\cf19 return} QApplication::desktop ()->height ();\par
{\bkmkstart AAAAAAAFGV}{\bkmkend AAAAAAAFGV}
00160 \}\par
{\bkmkstart AAAAAAAFGW}{\bkmkend AAAAAAAFGW}
00161 \par
{\bkmkstart AAAAAAAFGX}{\bkmkend AAAAAAAFGX}
00162 \par
{\bkmkstart AAAAAAAFGY}{\bkmkend AAAAAAAFGY}
00163 \par
{\bkmkstart AAAAAAAFGZ}{\bkmkend AAAAAAAFGZ}
00164 \par
{\bkmkstart AAAAAAAFHA}{\bkmkend AAAAAAAFHA}
00165 mxWindow*\par
{\bkmkstart AAAAAAAFHB}{\bkmkend AAAAAAAFHB}
00166 mx::getMainWindow ()\par
{\bkmkstart AAAAAAAFHC}{\bkmkend AAAAAAAFHC}
00167 \{\par
{\bkmkstart AAAAAAAFHD}{\bkmkend AAAAAAAFHD}
00168         {\cf19 return} d_mainWindow;\par
{\bkmkstart AAAAAAAFHE}{\bkmkend AAAAAAAFHE}
00169 \}\par
{\bkmkstart AAAAAAAFHF}{\bkmkend AAAAAAAFHF}
00170 \par
{\bkmkstart AAAAAAAFHG}{\bkmkend AAAAAAAFHG}
00171 \par
{\bkmkstart AAAAAAAFHH}{\bkmkend AAAAAAAFHH}
00172 \par
{\bkmkstart AAAAAAAFHI}{\bkmkend AAAAAAAFHI}
00173 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAAFHJ}{\bkmkend AAAAAAAFHJ}
00174 mx::getApplicationPath ()\par
{\bkmkstart AAAAAAAFHK}{\bkmkend AAAAAAAFHK}
00175 \{\par
{\bkmkstart AAAAAAAFHL}{\bkmkend AAAAAAAFHL}
00176         {\cf19 return} d_appPath;\par
{\bkmkstart AAAAAAAFHM}{\bkmkend AAAAAAAFHM}
00177 \}\par
{\bkmkstart AAAAAAAFHN}{\bkmkend AAAAAAAFHN}
00178 \par
{\bkmkstart AAAAAAAFHO}{\bkmkend AAAAAAAFHO}
00179 \par
{\bkmkstart AAAAAAAFHP}{\bkmkend AAAAAAAFHP}
00180 \par
{\bkmkstart AAAAAAAFHQ}{\bkmkend AAAAAAAFHQ}
00181 {\cf18 int}\par
{\bkmkstart AAAAAAAFHR}{\bkmkend AAAAAAAFHR}
00182 mx::getTickCount ()\par
{\bkmkstart AAAAAAAFHS}{\bkmkend AAAAAAAFHS}
00183 \{\par
{\bkmkstart AAAAAAAFHT}{\bkmkend AAAAAAAFHT}
00184         {\cf19 return} clock () * 1000  / CLOCKS_PER_SEC;\par
{\bkmkstart AAAAAAAFHU}{\bkmkend AAAAAAAFHU}
00185 \}\par
{\bkmkstart AAAAAAAFHV}{\bkmkend AAAAAAAFHV}
00186 \par
{\bkmkstart AAAAAAAFHW}{\bkmkend AAAAAAAFHW}
00187 {\cf18 void}\par
{\bkmkstart AAAAAAAFHX}{\bkmkend AAAAAAAFHX}
00188 mx::cleanup ()\par
{\bkmkstart AAAAAAAFHY}{\bkmkend AAAAAAAFHY}
00189 \{\par
{\bkmkstart AAAAAAAFHZ}{\bkmkend AAAAAAAFHZ}
00190 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxButton.cpp\par \pard\plain 
{\tc\tcl2 \v mxButton.cpp}
{\xe \v mxButton.cpp}
{\bkmkstart AAAAAAAFIA}
{\bkmkend AAAAAAAFIA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFIB}{\bkmkend AAAAAAAFIB}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFIC}{\bkmkend AAAAAAAFIC}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFID}{\bkmkend AAAAAAAFID}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFIE}{\bkmkend AAAAAAAFIE}
00004 {\cf20 // file:           mxButton.cpp}\par
{\bkmkstart AAAAAAAFIF}{\bkmkend AAAAAAAFIF}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFIG}{\bkmkend AAAAAAAFIG}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFIH}{\bkmkend AAAAAAAFIH}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFII}{\bkmkend AAAAAAAFII}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFIJ}{\bkmkend AAAAAAAFIJ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFIK}{\bkmkend AAAAAAAFIK}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFIL}{\bkmkend AAAAAAAFIL}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFIM}{\bkmkend AAAAAAAFIM}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFIN}{\bkmkend AAAAAAAFIN}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFIO}{\bkmkend AAAAAAAFIO}
00014 {\cf21 #include "mxButton_i.h"}\par
{\bkmkstart AAAAAAAFIP}{\bkmkend AAAAAAAFIP}
00015 \par
{\bkmkstart AAAAAAAFIQ}{\bkmkend AAAAAAAFIQ}
00016 \par
{\bkmkstart AAAAAAAFIR}{\bkmkend AAAAAAAFIR}
00017 \par
{\bkmkstart AAAAAAAFIS}{\bkmkend AAAAAAAFIS}
00018 mxButton::mxButton (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label, {\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAFIT}{\bkmkend AAAAAAAFIT}
00019 : mxWidget (parent, x, y, w, h, label)\par
{\bkmkstart AAAAAAAFIU}{\bkmkend AAAAAAAFIU}
00020 \{\par
{\bkmkstart AAAAAAAFIV}{\bkmkend AAAAAAAFIV}
00021         QWidget *p = 0;\par
{\bkmkstart AAAAAAAFIW}{\bkmkend AAAAAAAFIW}
00022         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAFIX}{\bkmkend AAAAAAAFIX}
00023                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAFIY}{\bkmkend AAAAAAAFIY}
00024 \par
{\bkmkstart AAAAAAAFIZ}{\bkmkend AAAAAAAFIZ}
00025         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJA" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAFJB}{\bkmkend AAAAAAAFJB}
00026         d_this->connect (d_this, SIGNAL (clicked ()), d_this, SLOT (clickedEvent ()));\par
{\bkmkstart AAAAAAAFJC}{\bkmkend AAAAAAAFJC}
00027         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAFJD}{\bkmkend AAAAAAAFJD}
00028         setType (MX_BUTTON);\par
{\bkmkstart AAAAAAAFJE}{\bkmkend AAAAAAAFJE}
00029         setParent (parent);\par
{\bkmkstart AAAAAAAFJF}{\bkmkend AAAAAAAFJF}
00030         \par
{\bkmkstart AAAAAAAFJG}{\bkmkend AAAAAAAFJG}
00031         setLabel (label);\par
{\bkmkstart AAAAAAAFJH}{\bkmkend AAAAAAAFJH}
00032         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAFJI}{\bkmkend AAAAAAAFJI}
00033         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAFJJ}{\bkmkend AAAAAAAFJJ}
00034         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAFJK}{\bkmkend AAAAAAAFJK}
00035 \}\par
{\bkmkstart AAAAAAAFJL}{\bkmkend AAAAAAAFJL}
00036 \par
{\bkmkstart AAAAAAAFJM}{\bkmkend AAAAAAAFJM}
00037 \par
{\bkmkstart AAAAAAAFJN}{\bkmkend AAAAAAAFJN}
00038 \par
{\bkmkstart AAAAAAAFJO}{\bkmkend AAAAAAAFJO}
00039 mxButton::~mxButton ()\par
{\bkmkstart AAAAAAAFJP}{\bkmkend AAAAAAAFJP}
00040 \{\par
{\bkmkstart AAAAAAAFJQ}{\bkmkend AAAAAAAFJQ}
00041         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAFJR}{\bkmkend AAAAAAAFJR}
00042 \}\par
{\bkmkstart AAAAAAAFJS}{\bkmkend AAAAAAAFJS}
00043 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxButton_i.h\par \pard\plain 
{\tc\tcl2 \v mxButton_i.h}
{\xe \v mxButton_i.h}
{\bkmkstart AAAAAAAFJT}
{\bkmkend AAAAAAAFJT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFJU}{\bkmkend AAAAAAAFJU}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFJV}{\bkmkend AAAAAAAFJV}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFJW}{\bkmkend AAAAAAAFJW}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFJX}{\bkmkend AAAAAAAFJX}
00004 {\cf20 // file:           mxButton_i.h}\par
{\bkmkstart AAAAAAAFJY}{\bkmkend AAAAAAAFJY}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFJZ}{\bkmkend AAAAAAAFJZ}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFKA}{\bkmkend AAAAAAAFKA}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFKB}{\bkmkend AAAAAAAFKB}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFKC}{\bkmkend AAAAAAAFKC}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFKD}{\bkmkend AAAAAAAFKD}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFKE}{\bkmkend AAAAAAAFKE}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFKF}{\bkmkend AAAAAAAFKF}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFKG}{\bkmkend AAAAAAAFKG}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFKH}{\bkmkend AAAAAAAFKH}
00014 {\cf21 #include <mx/mxButton.h>}\par
{\bkmkstart AAAAAAAFKI}{\bkmkend AAAAAAAFKI}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAFKJ}{\bkmkend AAAAAAAFKJ}
00016 {\cf21 #include <QPushButton>}\par
{\bkmkstart AAAAAAAFKK}{\bkmkend AAAAAAAFKK}
00017 \par
{\bkmkstart AAAAAAAFKL}{\bkmkend AAAAAAAFKL}
00018 \par
{\bkmkstart AAAAAAAFKM}{\bkmkend AAAAAAAFKM}
00019 \par
{\bkmkstart AAAAAAAFKN}{\bkmkend AAAAAAAFKN}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJA" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJA" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i}}}
 : {\cf17 public} QPushButton\par
{\bkmkstart AAAAAAAFKO}{\bkmkend AAAAAAAFKO}
00021 \{\par
{\bkmkstart AAAAAAAFKP}{\bkmkend AAAAAAAFKP}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAFKQ}{\bkmkend AAAAAAAFKQ}
00023         mxButton *d_widget;\par
{\bkmkstart AAAAAAAFKR}{\bkmkend AAAAAAAFKR}
00024 \par
{\bkmkstart AAAAAAAFKS}{\bkmkend AAAAAAAFKS}
00025 {\cf17 public}:\par
{\bkmkstart AAAAAAAFKT}{\bkmkend AAAAAAAFKT}
00026         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJA" }{}}{\fldrslt {\cs37\ul\cf2 mxButton_i}}}
 (QWidget *parent, mxButton *widget) : QPushButton (parent)\par
{\bkmkstart AAAAAAAFKU}{\bkmkend AAAAAAAFKU}
00027         \{\par
{\bkmkstart AAAAAAAFKV}{\bkmkend AAAAAAAFKV}
00028                 d_widget = widget;\par
{\bkmkstart AAAAAAAFKW}{\bkmkend AAAAAAAFKW}
00029         \}\par
{\bkmkstart AAAAAAAFKX}{\bkmkend AAAAAAAFKX}
00030 \par
{\bkmkstart AAAAAAAFKY}{\bkmkend AAAAAAAFKY}
00031         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFJA" }{}}{\fldrslt {\cs37\ul\cf2 ~mxButton_i}}}
 () \{\}\par
{\bkmkstart AAAAAAAFKZ}{\bkmkend AAAAAAAFKZ}
00032 \par
{\bkmkstart AAAAAAAFLA}{\bkmkend AAAAAAAFLA}
00033 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAFLB}{\bkmkend AAAAAAAFLB}
00034         {\cf18 void} clickedEvent ()\par
{\bkmkstart AAAAAAAFLC}{\bkmkend AAAAAAAFLC}
00035         \{\par
{\bkmkstart AAAAAAAFLD}{\bkmkend AAAAAAAFLD}
00036                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAFLE}{\bkmkend AAAAAAAFLE}
00037                 \{\par
{\bkmkstart AAAAAAAFLF}{\bkmkend AAAAAAAFLF}
00038                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAFLG}{\bkmkend AAAAAAAFLG}
00039                         mxEvent event;\par
{\bkmkstart AAAAAAAFLH}{\bkmkend AAAAAAAFLH}
00040                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAFLI}{\bkmkend AAAAAAAFLI}
00041                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAFLJ}{\bkmkend AAAAAAAFLJ}
00042                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAFLK}{\bkmkend AAAAAAAFLK}
00043                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAFLL}{\bkmkend AAAAAAAFLL}
00044                         \{\par
{\bkmkstart AAAAAAAFLM}{\bkmkend AAAAAAAFLM}
00045                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAFLN}{\bkmkend AAAAAAAFLN}
00046                                         {\cf19 break};\par
{\bkmkstart AAAAAAAFLO}{\bkmkend AAAAAAAFLO}
00047                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAFLP}{\bkmkend AAAAAAAFLP}
00048                         \}\par
{\bkmkstart AAAAAAAFLQ}{\bkmkend AAAAAAAFLQ}
00049                 \}\par
{\bkmkstart AAAAAAAFLR}{\bkmkend AAAAAAAFLR}
00050         \}\par
{\bkmkstart AAAAAAAFLS}{\bkmkend AAAAAAAFLS}
00051 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxCheckBox.cpp\par \pard\plain 
{\tc\tcl2 \v mxCheckBox.cpp}
{\xe \v mxCheckBox.cpp}
{\bkmkstart AAAAAAAFLT}
{\bkmkend AAAAAAAFLT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFLU}{\bkmkend AAAAAAAFLU}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFLV}{\bkmkend AAAAAAAFLV}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFLW}{\bkmkend AAAAAAAFLW}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFLX}{\bkmkend AAAAAAAFLX}
00004 {\cf20 // file:           mxCheckBox.cpp}\par
{\bkmkstart AAAAAAAFLY}{\bkmkend AAAAAAAFLY}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFLZ}{\bkmkend AAAAAAAFLZ}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFMA}{\bkmkend AAAAAAAFMA}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFMB}{\bkmkend AAAAAAAFMB}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFMC}{\bkmkend AAAAAAAFMC}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFMD}{\bkmkend AAAAAAAFMD}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFME}{\bkmkend AAAAAAAFME}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFMF}{\bkmkend AAAAAAAFMF}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFMG}{\bkmkend AAAAAAAFMG}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFMH}{\bkmkend AAAAAAAFMH}
00014 {\cf21 #include "mxCheckBox_i.h"}\par
{\bkmkstart AAAAAAAFMI}{\bkmkend AAAAAAAFMI}
00015 \par
{\bkmkstart AAAAAAAFMJ}{\bkmkend AAAAAAAFMJ}
00016 \par
{\bkmkstart AAAAAAAFMK}{\bkmkend AAAAAAAFMK}
00017 \par
{\bkmkstart AAAAAAAFML}{\bkmkend AAAAAAAFML}
00018 mxCheckBox::mxCheckBox (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label, {\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAFMM}{\bkmkend AAAAAAAFMM}
00019 : mxWidget (parent, x, y, w, h, label)\par
{\bkmkstart AAAAAAAFMN}{\bkmkend AAAAAAAFMN}
00020 \{\par
{\bkmkstart AAAAAAAFMO}{\bkmkend AAAAAAAFMO}
00021         QWidget *p = 0;\par
{\bkmkstart AAAAAAAFMP}{\bkmkend AAAAAAAFMP}
00022         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAFMQ}{\bkmkend AAAAAAAFMQ}
00023                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAFMR}{\bkmkend AAAAAAAFMR}
00024 \par
{\bkmkstart AAAAAAAFMS}{\bkmkend AAAAAAAFMS}
00025         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFMT" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAFMU}{\bkmkend AAAAAAAFMU}
00026         d_this->connect (d_this, SIGNAL (clicked ()), d_this, SLOT (clickedEvent ()));\par
{\bkmkstart AAAAAAAFMV}{\bkmkend AAAAAAAFMV}
00027 \par
{\bkmkstart AAAAAAAFMW}{\bkmkend AAAAAAAFMW}
00028         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAFMX}{\bkmkend AAAAAAAFMX}
00029         setType (MX_CHECKBOX);\par
{\bkmkstart AAAAAAAFMY}{\bkmkend AAAAAAAFMY}
00030         setParent (parent);\par
{\bkmkstart AAAAAAAFMZ}{\bkmkend AAAAAAAFMZ}
00031         \par
{\bkmkstart AAAAAAAFNA}{\bkmkend AAAAAAAFNA}
00032         setLabel (label);\par
{\bkmkstart AAAAAAAFNB}{\bkmkend AAAAAAAFNB}
00033         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAFNC}{\bkmkend AAAAAAAFNC}
00034         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAFND}{\bkmkend AAAAAAAFND}
00035         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAFNE}{\bkmkend AAAAAAAFNE}
00036 \}\par
{\bkmkstart AAAAAAAFNF}{\bkmkend AAAAAAAFNF}
00037 \par
{\bkmkstart AAAAAAAFNG}{\bkmkend AAAAAAAFNG}
00038 \par
{\bkmkstart AAAAAAAFNH}{\bkmkend AAAAAAAFNH}
00039 \par
{\bkmkstart AAAAAAAFNI}{\bkmkend AAAAAAAFNI}
00040 mxCheckBox::~mxCheckBox ()\par
{\bkmkstart AAAAAAAFNJ}{\bkmkend AAAAAAAFNJ}
00041 \{\par
{\bkmkstart AAAAAAAFNK}{\bkmkend AAAAAAAFNK}
00042         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAFNL}{\bkmkend AAAAAAAFNL}
00043 \}\par
{\bkmkstart AAAAAAAFNM}{\bkmkend AAAAAAAFNM}
00044 \par
{\bkmkstart AAAAAAAFNN}{\bkmkend AAAAAAAFNN}
00045 \par
{\bkmkstart AAAAAAAFNO}{\bkmkend AAAAAAAFNO}
00046 \par
{\bkmkstart AAAAAAAFNP}{\bkmkend AAAAAAAFNP}
00047 {\cf18 void}\par
{\bkmkstart AAAAAAAFNQ}{\bkmkend AAAAAAAFNQ}
00048 mxCheckBox::setChecked ({\cf18 bool} b)\par
{\bkmkstart AAAAAAAFNR}{\bkmkend AAAAAAAFNR}
00049 \{\par
{\bkmkstart AAAAAAAFNS}{\bkmkend AAAAAAAFNS}
00050         QObject::disconnect (d_this, SIGNAL (clicked ()), d_this, SLOT (clickedEvent ()));\par
{\bkmkstart AAAAAAAFNT}{\bkmkend AAAAAAAFNT}
00051         d_this->setChecked (b);\par
{\bkmkstart AAAAAAAFNU}{\bkmkend AAAAAAAFNU}
00052         d_this->connect (d_this, SIGNAL (clicked ()), d_this, SLOT (clickedEvent ()));\par
{\bkmkstart AAAAAAAFNV}{\bkmkend AAAAAAAFNV}
00053 \}\par
{\bkmkstart AAAAAAAFNW}{\bkmkend AAAAAAAFNW}
00054 \par
{\bkmkstart AAAAAAAFNX}{\bkmkend AAAAAAAFNX}
00055 \par
{\bkmkstart AAAAAAAFNY}{\bkmkend AAAAAAAFNY}
00056 \par
{\bkmkstart AAAAAAAFNZ}{\bkmkend AAAAAAAFNZ}
00057 {\cf18 bool}\par
{\bkmkstart AAAAAAAFOA}{\bkmkend AAAAAAAFOA}
00058 mxCheckBox::isChecked (){\cf17  const}\par
{\bkmkstart AAAAAAAFOB}{\bkmkend AAAAAAAFOB}
00059 {\cf17 }\{\par
{\bkmkstart AAAAAAAFOC}{\bkmkend AAAAAAAFOC}
00060         {\cf19 return} d_this->isChecked ();\par
{\bkmkstart AAAAAAAFOD}{\bkmkend AAAAAAAFOD}
00061 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxCheckBox_i.h\par \pard\plain 
{\tc\tcl2 \v mxCheckBox_i.h}
{\xe \v mxCheckBox_i.h}
{\bkmkstart AAAAAAAFOE}
{\bkmkend AAAAAAAFOE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFOF}{\bkmkend AAAAAAAFOF}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFOG}{\bkmkend AAAAAAAFOG}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFOH}{\bkmkend AAAAAAAFOH}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFOI}{\bkmkend AAAAAAAFOI}
00004 {\cf20 // file:           mxCheckBox_i.h}\par
{\bkmkstart AAAAAAAFOJ}{\bkmkend AAAAAAAFOJ}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFOK}{\bkmkend AAAAAAAFOK}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFOL}{\bkmkend AAAAAAAFOL}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFOM}{\bkmkend AAAAAAAFOM}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFON}{\bkmkend AAAAAAAFON}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFOO}{\bkmkend AAAAAAAFOO}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFOP}{\bkmkend AAAAAAAFOP}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFOQ}{\bkmkend AAAAAAAFOQ}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFOR}{\bkmkend AAAAAAAFOR}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFOS}{\bkmkend AAAAAAAFOS}
00014 {\cf21 #include <mx/mxCheckBox.h>}\par
{\bkmkstart AAAAAAAFOT}{\bkmkend AAAAAAAFOT}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAFOU}{\bkmkend AAAAAAAFOU}
00016 {\cf21 #include <QCheckBox>}\par
{\bkmkstart AAAAAAAFOV}{\bkmkend AAAAAAAFOV}
00017 \par
{\bkmkstart AAAAAAAFOW}{\bkmkend AAAAAAAFOW}
00018 \par
{\bkmkstart AAAAAAAFOX}{\bkmkend AAAAAAAFOX}
00019 \par
{\bkmkstart AAAAAAAFOY}{\bkmkend AAAAAAAFOY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFMT" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFMT" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i}}}
 : {\cf17 public} QCheckBox\par
{\bkmkstart AAAAAAAFOZ}{\bkmkend AAAAAAAFOZ}
00021 \{\par
{\bkmkstart AAAAAAAFPA}{\bkmkend AAAAAAAFPA}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAFPB}{\bkmkend AAAAAAAFPB}
00023         mxCheckBox *d_widget;\par
{\bkmkstart AAAAAAAFPC}{\bkmkend AAAAAAAFPC}
00024 \par
{\bkmkstart AAAAAAAFPD}{\bkmkend AAAAAAAFPD}
00025 {\cf17 public}:\par
{\bkmkstart AAAAAAAFPE}{\bkmkend AAAAAAAFPE}
00026         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFMT" }{}}{\fldrslt {\cs37\ul\cf2 mxCheckBox_i}}}
 (QWidget *parent, mxCheckBox *widget) : QCheckBox (parent)\par
{\bkmkstart AAAAAAAFPF}{\bkmkend AAAAAAAFPF}
00027         \{\par
{\bkmkstart AAAAAAAFPG}{\bkmkend AAAAAAAFPG}
00028                 d_widget = widget;\par
{\bkmkstart AAAAAAAFPH}{\bkmkend AAAAAAAFPH}
00029         \}\par
{\bkmkstart AAAAAAAFPI}{\bkmkend AAAAAAAFPI}
00030 \par
{\bkmkstart AAAAAAAFPJ}{\bkmkend AAAAAAAFPJ}
00031         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFMT" }{}}{\fldrslt {\cs37\ul\cf2 ~mxCheckBox_i}}}
 () \{\}\par
{\bkmkstart AAAAAAAFPK}{\bkmkend AAAAAAAFPK}
00032 \par
{\bkmkstart AAAAAAAFPL}{\bkmkend AAAAAAAFPL}
00033 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAFPM}{\bkmkend AAAAAAAFPM}
00034         {\cf18 void} clickedEvent ()\par
{\bkmkstart AAAAAAAFPN}{\bkmkend AAAAAAAFPN}
00035         \{\par
{\bkmkstart AAAAAAAFPO}{\bkmkend AAAAAAAFPO}
00036                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAFPP}{\bkmkend AAAAAAAFPP}
00037                 \{\par
{\bkmkstart AAAAAAAFPQ}{\bkmkend AAAAAAAFPQ}
00038                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAFPR}{\bkmkend AAAAAAAFPR}
00039                         mxEvent event;\par
{\bkmkstart AAAAAAAFPS}{\bkmkend AAAAAAAFPS}
00040                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAFPT}{\bkmkend AAAAAAAFPT}
00041                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAFPU}{\bkmkend AAAAAAAFPU}
00042                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAFPV}{\bkmkend AAAAAAAFPV}
00043                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAFPW}{\bkmkend AAAAAAAFPW}
00044                         \{\par
{\bkmkstart AAAAAAAFPX}{\bkmkend AAAAAAAFPX}
00045                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAFPY}{\bkmkend AAAAAAAFPY}
00046                                         {\cf19 break};\par
{\bkmkstart AAAAAAAFPZ}{\bkmkend AAAAAAAFPZ}
00047                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAFQA}{\bkmkend AAAAAAAFQA}
00048                         \}\par
{\bkmkstart AAAAAAAFQB}{\bkmkend AAAAAAAFQB}
00049                 \}\par
{\bkmkstart AAAAAAAFQC}{\bkmkend AAAAAAAFQC}
00050         \}\par
{\bkmkstart AAAAAAAFQD}{\bkmkend AAAAAAAFQD}
00051 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxChoice.cpp\par \pard\plain 
{\tc\tcl2 \v mxChoice.cpp}
{\xe \v mxChoice.cpp}
{\bkmkstart AAAAAAAFQE}
{\bkmkend AAAAAAAFQE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFQF}{\bkmkend AAAAAAAFQF}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFQG}{\bkmkend AAAAAAAFQG}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFQH}{\bkmkend AAAAAAAFQH}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFQI}{\bkmkend AAAAAAAFQI}
00004 {\cf20 // file:           mxChoice.cpp}\par
{\bkmkstart AAAAAAAFQJ}{\bkmkend AAAAAAAFQJ}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFQK}{\bkmkend AAAAAAAFQK}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFQL}{\bkmkend AAAAAAAFQL}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFQM}{\bkmkend AAAAAAAFQM}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFQN}{\bkmkend AAAAAAAFQN}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFQO}{\bkmkend AAAAAAAFQO}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFQP}{\bkmkend AAAAAAAFQP}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFQQ}{\bkmkend AAAAAAAFQQ}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFQR}{\bkmkend AAAAAAAFQR}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFQS}{\bkmkend AAAAAAAFQS}
00014 {\cf21 #include "mxChoice_i.h"}\par
{\bkmkstart AAAAAAAFQT}{\bkmkend AAAAAAAFQT}
00015 \par
{\bkmkstart AAAAAAAFQU}{\bkmkend AAAAAAAFQU}
00016 \par
{\bkmkstart AAAAAAAFQV}{\bkmkend AAAAAAAFQV}
00017 \par
{\bkmkstart AAAAAAAFQW}{\bkmkend AAAAAAAFQW}
00018 mxChoice::mxChoice (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAFQX}{\bkmkend AAAAAAAFQX}
00019 : mxWidget (parent, x, y, w, h)\par
{\bkmkstart AAAAAAAFQY}{\bkmkend AAAAAAAFQY}
00020 \{\par
{\bkmkstart AAAAAAAFQZ}{\bkmkend AAAAAAAFQZ}
00021         QWidget *p = 0;\par
{\bkmkstart AAAAAAAFRA}{\bkmkend AAAAAAAFRA}
00022         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAFRB}{\bkmkend AAAAAAAFRB}
00023                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAFRC}{\bkmkend AAAAAAAFRC}
00024 \par
{\bkmkstart AAAAAAAFRD}{\bkmkend AAAAAAAFRD}
00025         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFRE" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAFRF}{\bkmkend AAAAAAAFRF}
00026         d_this->connect (d_this, SIGNAL (activated ({\cf18 int})), d_this, SLOT (activatedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAFRG}{\bkmkend AAAAAAAFRG}
00027 \par
{\bkmkstart AAAAAAAFRH}{\bkmkend AAAAAAAFRH}
00028         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAFRI}{\bkmkend AAAAAAAFRI}
00029         setParent (parent);\par
{\bkmkstart AAAAAAAFRJ}{\bkmkend AAAAAAAFRJ}
00030         setType (MX_CHOICE);\par
{\bkmkstart AAAAAAAFRK}{\bkmkend AAAAAAAFRK}
00031         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAFRL}{\bkmkend AAAAAAAFRL}
00032         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAFRM}{\bkmkend AAAAAAAFRM}
00033         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAFRN}{\bkmkend AAAAAAAFRN}
00034 \}\par
{\bkmkstart AAAAAAAFRO}{\bkmkend AAAAAAAFRO}
00035 \par
{\bkmkstart AAAAAAAFRP}{\bkmkend AAAAAAAFRP}
00036 \par
{\bkmkstart AAAAAAAFRQ}{\bkmkend AAAAAAAFRQ}
00037 \par
{\bkmkstart AAAAAAAFRR}{\bkmkend AAAAAAAFRR}
00038 mxChoice::~mxChoice ()\par
{\bkmkstart AAAAAAAFRS}{\bkmkend AAAAAAAFRS}
00039 \{\par
{\bkmkstart AAAAAAAFRT}{\bkmkend AAAAAAAFRT}
00040         removeAll ();\par
{\bkmkstart AAAAAAAFRU}{\bkmkend AAAAAAAFRU}
00041         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAFRV}{\bkmkend AAAAAAAFRV}
00042 \}\par
{\bkmkstart AAAAAAAFRW}{\bkmkend AAAAAAAFRW}
00043 \par
{\bkmkstart AAAAAAAFRX}{\bkmkend AAAAAAAFRX}
00044 \par
{\bkmkstart AAAAAAAFRY}{\bkmkend AAAAAAAFRY}
00045 \par
{\bkmkstart AAAAAAAFRZ}{\bkmkend AAAAAAAFRZ}
00046 {\cf18 void}\par
{\bkmkstart AAAAAAAFSA}{\bkmkend AAAAAAAFSA}
00047 mxChoice::add ({\cf17 const} {\cf18 char} *item)\par
{\bkmkstart AAAAAAAFSB}{\bkmkend AAAAAAAFSB}
00048 \{\par
{\bkmkstart AAAAAAAFSC}{\bkmkend AAAAAAAFSC}
00049         d_this->addItem (item);\par
{\bkmkstart AAAAAAAFSD}{\bkmkend AAAAAAAFSD}
00050 \}\par
{\bkmkstart AAAAAAAFSE}{\bkmkend AAAAAAAFSE}
00051 \par
{\bkmkstart AAAAAAAFSF}{\bkmkend AAAAAAAFSF}
00052 \par
{\bkmkstart AAAAAAAFSG}{\bkmkend AAAAAAAFSG}
00053 \par
{\bkmkstart AAAAAAAFSH}{\bkmkend AAAAAAAFSH}
00054 {\cf18 void}\par
{\bkmkstart AAAAAAAFSI}{\bkmkend AAAAAAAFSI}
00055 mxChoice::select ({\cf18 int} index)\par
{\bkmkstart AAAAAAAFSJ}{\bkmkend AAAAAAAFSJ}
00056 \{\par
{\bkmkstart AAAAAAAFSK}{\bkmkend AAAAAAAFSK}
00057         QObject::disconnect (d_this, SIGNAL (activated ({\cf18 int})), d_this, SLOT (activatedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAFSL}{\bkmkend AAAAAAAFSL}
00058         d_this->d_currentItem = index;\par
{\bkmkstart AAAAAAAFSM}{\bkmkend AAAAAAAFSM}
00059         d_this->setCurrentIndex (index);\par
{\bkmkstart AAAAAAAFSN}{\bkmkend AAAAAAAFSN}
00060         d_this->connect (d_this, SIGNAL (activated ({\cf18 int})), d_this, SLOT (activatedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAFSO}{\bkmkend AAAAAAAFSO}
00061 \}\par
{\bkmkstart AAAAAAAFSP}{\bkmkend AAAAAAAFSP}
00062 \par
{\bkmkstart AAAAAAAFSQ}{\bkmkend AAAAAAAFSQ}
00063 \par
{\bkmkstart AAAAAAAFSR}{\bkmkend AAAAAAAFSR}
00064 \par
{\bkmkstart AAAAAAAFSS}{\bkmkend AAAAAAAFSS}
00065 {\cf18 void}\par
{\bkmkstart AAAAAAAFST}{\bkmkend AAAAAAAFST}
00066 mxChoice::remove ({\cf18 int} index)\par
{\bkmkstart AAAAAAAFSU}{\bkmkend AAAAAAAFSU}
00067 \{\par
{\bkmkstart AAAAAAAFSV}{\bkmkend AAAAAAAFSV}
00068         d_this->removeItem (index);\par
{\bkmkstart AAAAAAAFSW}{\bkmkend AAAAAAAFSW}
00069 \}\par
{\bkmkstart AAAAAAAFSX}{\bkmkend AAAAAAAFSX}
00070 \par
{\bkmkstart AAAAAAAFSY}{\bkmkend AAAAAAAFSY}
00071 \par
{\bkmkstart AAAAAAAFSZ}{\bkmkend AAAAAAAFSZ}
00072 \par
{\bkmkstart AAAAAAAFTA}{\bkmkend AAAAAAAFTA}
00073 {\cf18 void}\par
{\bkmkstart AAAAAAAFTB}{\bkmkend AAAAAAAFTB}
00074 mxChoice::removeAll ()\par
{\bkmkstart AAAAAAAFTC}{\bkmkend AAAAAAAFTC}
00075 \{\par
{\bkmkstart AAAAAAAFTD}{\bkmkend AAAAAAAFTD}
00076         d_this->clear ();\par
{\bkmkstart AAAAAAAFTE}{\bkmkend AAAAAAAFTE}
00077 \}\par
{\bkmkstart AAAAAAAFTF}{\bkmkend AAAAAAAFTF}
00078 \par
{\bkmkstart AAAAAAAFTG}{\bkmkend AAAAAAAFTG}
00079 \par
{\bkmkstart AAAAAAAFTH}{\bkmkend AAAAAAAFTH}
00080 \par
{\bkmkstart AAAAAAAFTI}{\bkmkend AAAAAAAFTI}
00081 {\cf18 int}\par
{\bkmkstart AAAAAAAFTJ}{\bkmkend AAAAAAAFTJ}
00082 mxChoice::getItemCount (){\cf17  const}\par
{\bkmkstart AAAAAAAFTK}{\bkmkend AAAAAAAFTK}
00083 {\cf17 }\{\par
{\bkmkstart AAAAAAAFTL}{\bkmkend AAAAAAAFTL}
00084         {\cf19 return} d_this->count ();\par
{\bkmkstart AAAAAAAFTM}{\bkmkend AAAAAAAFTM}
00085 \}\par
{\bkmkstart AAAAAAAFTN}{\bkmkend AAAAAAAFTN}
00086 \par
{\bkmkstart AAAAAAAFTO}{\bkmkend AAAAAAAFTO}
00087 \par
{\bkmkstart AAAAAAAFTP}{\bkmkend AAAAAAAFTP}
00088 \par
{\bkmkstart AAAAAAAFTQ}{\bkmkend AAAAAAAFTQ}
00089 {\cf18 int}\par
{\bkmkstart AAAAAAAFTR}{\bkmkend AAAAAAAFTR}
00090 mxChoice::getSelectedIndex (){\cf17  const}\par
{\bkmkstart AAAAAAAFTS}{\bkmkend AAAAAAAFTS}
00091 {\cf17 }\{\par
{\bkmkstart AAAAAAAFTT}{\bkmkend AAAAAAAFTT}
00092         {\cf19 return} d_this->currentIndex ();\par
{\bkmkstart AAAAAAAFTU}{\bkmkend AAAAAAAFTU}
00093 \}\par
{\bkmkstart AAAAAAAFTV}{\bkmkend AAAAAAAFTV}
00094 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxChoice_i.h\par \pard\plain 
{\tc\tcl2 \v mxChoice_i.h}
{\xe \v mxChoice_i.h}
{\bkmkstart AAAAAAAFTW}
{\bkmkend AAAAAAAFTW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFTX}{\bkmkend AAAAAAAFTX}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFTY}{\bkmkend AAAAAAAFTY}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFTZ}{\bkmkend AAAAAAAFTZ}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFUA}{\bkmkend AAAAAAAFUA}
00004 {\cf20 // file:           mxChoice_i.h}\par
{\bkmkstart AAAAAAAFUB}{\bkmkend AAAAAAAFUB}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFUC}{\bkmkend AAAAAAAFUC}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFUD}{\bkmkend AAAAAAAFUD}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFUE}{\bkmkend AAAAAAAFUE}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFUF}{\bkmkend AAAAAAAFUF}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFUG}{\bkmkend AAAAAAAFUG}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFUH}{\bkmkend AAAAAAAFUH}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFUI}{\bkmkend AAAAAAAFUI}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFUJ}{\bkmkend AAAAAAAFUJ}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFUK}{\bkmkend AAAAAAAFUK}
00014 {\cf21 #include <mx/mxChoice.h>}\par
{\bkmkstart AAAAAAAFUL}{\bkmkend AAAAAAAFUL}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAFUM}{\bkmkend AAAAAAAFUM}
00016 {\cf21 #include <QComboBox>}\par
{\bkmkstart AAAAAAAFUN}{\bkmkend AAAAAAAFUN}
00017 \par
{\bkmkstart AAAAAAAFUO}{\bkmkend AAAAAAAFUO}
00018 \par
{\bkmkstart AAAAAAAFUP}{\bkmkend AAAAAAAFUP}
00019 \par
{\bkmkstart AAAAAAAFUQ}{\bkmkend AAAAAAAFUQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFRE" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFRE" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i}}}
 : {\cf17 public} QComboBox\par
{\bkmkstart AAAAAAAFUR}{\bkmkend AAAAAAAFUR}
00021 \{\par
{\bkmkstart AAAAAAAFUS}{\bkmkend AAAAAAAFUS}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAFUT}{\bkmkend AAAAAAAFUT}
00023         mxChoice *d_widget;\par
{\bkmkstart AAAAAAAFUU}{\bkmkend AAAAAAAFUU}
00024 \par
{\bkmkstart AAAAAAAFUV}{\bkmkend AAAAAAAFUV}
00025 {\cf17 public}:\par
{\bkmkstart AAAAAAAFUW}{\bkmkend AAAAAAAFUW}
00026         {\cf18 int} d_currentItem;\par
{\bkmkstart AAAAAAAFUX}{\bkmkend AAAAAAAFUX}
00027 \par
{\bkmkstart AAAAAAAFUY}{\bkmkend AAAAAAAFUY}
00028         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFRE" }{}}{\fldrslt {\cs37\ul\cf2 mxChoice_i}}}
 (QWidget *parent, mxChoice *widget) : QComboBox (parent)\par
{\bkmkstart AAAAAAAFUZ}{\bkmkend AAAAAAAFUZ}
00029         \{\par
{\bkmkstart AAAAAAAFVA}{\bkmkend AAAAAAAFVA}
00030                 d_widget = widget;\par
{\bkmkstart AAAAAAAFVB}{\bkmkend AAAAAAAFVB}
00031                 d_currentItem = 0;\par
{\bkmkstart AAAAAAAFVC}{\bkmkend AAAAAAAFVC}
00032         \}\par
{\bkmkstart AAAAAAAFVD}{\bkmkend AAAAAAAFVD}
00033 \par
{\bkmkstart AAAAAAAFVE}{\bkmkend AAAAAAAFVE}
00034         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFRE" }{}}{\fldrslt {\cs37\ul\cf2 ~mxChoice_i}}}
 () \{\}\par
{\bkmkstart AAAAAAAFVF}{\bkmkend AAAAAAAFVF}
00035 \par
{\bkmkstart AAAAAAAFVG}{\bkmkend AAAAAAAFVG}
00036 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAFVH}{\bkmkend AAAAAAAFVH}
00037         {\cf18 void} activatedEvent ({\cf18 int} index)\par
{\bkmkstart AAAAAAAFVI}{\bkmkend AAAAAAAFVI}
00038         \{\par
{\bkmkstart AAAAAAAFVJ}{\bkmkend AAAAAAAFVJ}
00039                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAFVK}{\bkmkend AAAAAAAFVK}
00040                 \{\par
{\bkmkstart AAAAAAAFVL}{\bkmkend AAAAAAAFVL}
00041                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAFVM}{\bkmkend AAAAAAAFVM}
00042                         mxEvent event;\par
{\bkmkstart AAAAAAAFVN}{\bkmkend AAAAAAAFVN}
00043                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAFVO}{\bkmkend AAAAAAAFVO}
00044                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAFVP}{\bkmkend AAAAAAAFVP}
00045                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAFVQ}{\bkmkend AAAAAAAFVQ}
00046                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAFVR}{\bkmkend AAAAAAAFVR}
00047                         \{\par
{\bkmkstart AAAAAAAFVS}{\bkmkend AAAAAAAFVS}
00048                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAFVT}{\bkmkend AAAAAAAFVT}
00049                                         {\cf19 break};\par
{\bkmkstart AAAAAAAFVU}{\bkmkend AAAAAAAFVU}
00050                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAFVV}{\bkmkend AAAAAAAFVV}
00051                         \}\par
{\bkmkstart AAAAAAAFVW}{\bkmkend AAAAAAAFVW}
00052                 \}\par
{\bkmkstart AAAAAAAFVX}{\bkmkend AAAAAAAFVX}
00053         \}\par
{\bkmkstart AAAAAAAFVY}{\bkmkend AAAAAAAFVY}
00054 \};\par
{\bkmkstart AAAAAAAFVZ}{\bkmkend AAAAAAAFVZ}
00055 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxChooseColor.cpp\par \pard\plain 
{\tc\tcl2 \v mxChooseColor.cpp}
{\xe \v mxChooseColor.cpp}
{\bkmkstart AAAAAAAFWA}
{\bkmkend AAAAAAAFWA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFWB}{\bkmkend AAAAAAAFWB}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFWC}{\bkmkend AAAAAAAFWC}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFWD}{\bkmkend AAAAAAAFWD}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFWE}{\bkmkend AAAAAAAFWE}
00004 {\cf20 // file:           mxColorDialog.cpp}\par
{\bkmkstart AAAAAAAFWF}{\bkmkend AAAAAAAFWF}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFWG}{\bkmkend AAAAAAAFWG}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFWH}{\bkmkend AAAAAAAFWH}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFWI}{\bkmkend AAAAAAAFWI}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFWJ}{\bkmkend AAAAAAAFWJ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFWK}{\bkmkend AAAAAAAFWK}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFWL}{\bkmkend AAAAAAAFWL}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFWM}{\bkmkend AAAAAAAFWM}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFWN}{\bkmkend AAAAAAAFWN}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFWO}{\bkmkend AAAAAAAFWO}
00014 {\cf21 #include <mx/mxChooseColor.h>}\par
{\bkmkstart AAAAAAAFWP}{\bkmkend AAAAAAAFWP}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAFWQ}{\bkmkend AAAAAAAFWQ}
00016 {\cf21 #include <QColorDialog>}\par
{\bkmkstart AAAAAAAFWR}{\bkmkend AAAAAAAFWR}
00017 \par
{\bkmkstart AAAAAAAFWS}{\bkmkend AAAAAAAFWS}
00018 \par
{\bkmkstart AAAAAAAFWT}{\bkmkend AAAAAAAFWT}
00019 \par
{\bkmkstart AAAAAAAFWU}{\bkmkend AAAAAAAFWU}
00020 {\cf18 bool}\par
{\bkmkstart AAAAAAAFWV}{\bkmkend AAAAAAAFWV}
00021 mxChooseColor (mxWindow *parent, {\cf18 int} *r, {\cf18 int} *g, {\cf18 int} *b)\par
{\bkmkstart AAAAAAAFWW}{\bkmkend AAAAAAAFWW}
00022 \{\par
{\bkmkstart AAAAAAAFWX}{\bkmkend AAAAAAAFWX}
00023         QWidget *p = 0;\par
{\bkmkstart AAAAAAAFWY}{\bkmkend AAAAAAAFWY}
00024         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAFWZ}{\bkmkend AAAAAAAFWZ}
00025         \{\par
{\bkmkstart AAAAAAAFXA}{\bkmkend AAAAAAAFXA}
00026                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAFXB}{\bkmkend AAAAAAAFXB}
00027                 QColor cc (*r, *g, *b);\par
{\bkmkstart AAAAAAAFXC}{\bkmkend AAAAAAAFXC}
00028                 cc = QColorDialog::getColor (cc, p, {\cf22 "Color"});\par
{\bkmkstart AAAAAAAFXD}{\bkmkend AAAAAAAFXD}
00029                 {\cf19 if} (cc.isValid ())\par
{\bkmkstart AAAAAAAFXE}{\bkmkend AAAAAAAFXE}
00030                 \{\par
{\bkmkstart AAAAAAAFXF}{\bkmkend AAAAAAAFXF}
00031                         *r = cc.red ();\par
{\bkmkstart AAAAAAAFXG}{\bkmkend AAAAAAAFXG}
00032                         *g = cc.green ();\par
{\bkmkstart AAAAAAAFXH}{\bkmkend AAAAAAAFXH}
00033                         *b = cc.blue ();\par
{\bkmkstart AAAAAAAFXI}{\bkmkend AAAAAAAFXI}
00034                 \}\par
{\bkmkstart AAAAAAAFXJ}{\bkmkend AAAAAAAFXJ}
00035                 {\cf19 return} {\cf17 true};\par
{\bkmkstart AAAAAAAFXK}{\bkmkend AAAAAAAFXK}
00036         \}\par
{\bkmkstart AAAAAAAFXL}{\bkmkend AAAAAAAFXL}
00037         {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAAFXM}{\bkmkend AAAAAAAFXM}
00038 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxFileDialog.cpp\par \pard\plain 
{\tc\tcl2 \v mxFileDialog.cpp}
{\xe \v mxFileDialog.cpp}
{\bkmkstart AAAAAAAFXN}
{\bkmkend AAAAAAAFXN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAFXO}{\bkmkend AAAAAAAFXO}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAFXP}{\bkmkend AAAAAAAFXP}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAFXQ}{\bkmkend AAAAAAAFXQ}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAFXR}{\bkmkend AAAAAAAFXR}
00004 {\cf20 // file:           mxFileDialog.cpp}\par
{\bkmkstart AAAAAAAFXS}{\bkmkend AAAAAAAFXS}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAFXT}{\bkmkend AAAAAAAFXT}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAFXU}{\bkmkend AAAAAAAFXU}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAFXV}{\bkmkend AAAAAAAFXV}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAFXW}{\bkmkend AAAAAAAFXW}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAFXX}{\bkmkend AAAAAAAFXX}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAFXY}{\bkmkend AAAAAAAFXY}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAFXZ}{\bkmkend AAAAAAAFXZ}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAFYA}{\bkmkend AAAAAAAFYA}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAFYB}{\bkmkend AAAAAAAFYB}
00014 {\cf21 #include <mx/mxFileDialog.h>}\par
{\bkmkstart AAAAAAAFYC}{\bkmkend AAAAAAAFYC}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAFYD}{\bkmkend AAAAAAAFYD}
00016 {\cf21 #include <QFileDialog>}\par
{\bkmkstart AAAAAAAFYE}{\bkmkend AAAAAAAFYE}
00017 \par
{\bkmkstart AAAAAAAFYF}{\bkmkend AAAAAAAFYF}
00018 \par
{\bkmkstart AAAAAAAFYG}{\bkmkend AAAAAAAFYG}
00019 \par
{\bkmkstart AAAAAAAFYH}{\bkmkend AAAAAAAFYH}
00020 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAAFYI}{\bkmkend AAAAAAAFYI}
00021 mxGetOpenFileName (mxWindow *parent, {\cf17 const} {\cf18 char} *path, {\cf17 const} {\cf18 char} *filter)\par
{\bkmkstart AAAAAAAFYJ}{\bkmkend AAAAAAAFYJ}
00022 \{\par
{\bkmkstart AAAAAAAFYK}{\bkmkend AAAAAAAFYK}
00023         QWidget *p = 0;\par
{\bkmkstart AAAAAAAFYL}{\bkmkend AAAAAAAFYL}
00024         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAFYM}{\bkmkend AAAAAAAFYM}
00025                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAFYN}{\bkmkend AAAAAAAFYN}
00026 \par
{\bkmkstart AAAAAAAFYO}{\bkmkend AAAAAAAFYO}
00027         {\cf17 static} {\cf18 char} filename[256];\par
{\bkmkstart AAAAAAAFYP}{\bkmkend AAAAAAAFYP}
00028         QString f = QFileDialog::getOpenFileName (p, {\cf22 "Open File"}, path, filter);\par
{\bkmkstart AAAAAAAFYQ}{\bkmkend AAAAAAAFYQ}
00029         {\cf19 if} (!f.isEmpty () && !f.isNull ())\par
{\bkmkstart AAAAAAAFYR}{\bkmkend AAAAAAAFYR}
00030         \{\par
{\bkmkstart AAAAAAAFYS}{\bkmkend AAAAAAAFYS}
00031                 strcpy (filename, qPrintable (f));\par
{\bkmkstart AAAAAAAFYT}{\bkmkend AAAAAAAFYT}
00032                 {\cf19 return} filename;\par
{\bkmkstart AAAAAAAFYU}{\bkmkend AAAAAAAFYU}
00033         \}\par
{\bkmkstart AAAAAAAFYV}{\bkmkend AAAAAAAFYV}
00034 \par
{\bkmkstart AAAAAAAFYW}{\bkmkend AAAAAAAFYW}
00035         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAFYX}{\bkmkend AAAAAAAFYX}
00036 \}\par
{\bkmkstart AAAAAAAFYY}{\bkmkend AAAAAAAFYY}
00037 \par
{\bkmkstart AAAAAAAFYZ}{\bkmkend AAAAAAAFYZ}
00038 \par
{\bkmkstart AAAAAAAFZA}{\bkmkend AAAAAAAFZA}
00039 \par
{\bkmkstart AAAAAAAFZB}{\bkmkend AAAAAAAFZB}
00040 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAAFZC}{\bkmkend AAAAAAAFZC}
00041 mxGetSaveFileName (mxWindow *parent, {\cf17 const} {\cf18 char} *path, {\cf17 const} {\cf18 char} *filter)\par
{\bkmkstart AAAAAAAFZD}{\bkmkend AAAAAAAFZD}
00042 \{\par
{\bkmkstart AAAAAAAFZE}{\bkmkend AAAAAAAFZE}
00043         QWidget *p = 0;\par
{\bkmkstart AAAAAAAFZF}{\bkmkend AAAAAAAFZF}
00044         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAFZG}{\bkmkend AAAAAAAFZG}
00045                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAFZH}{\bkmkend AAAAAAAFZH}
00046 \par
{\bkmkstart AAAAAAAFZI}{\bkmkend AAAAAAAFZI}
00047         {\cf17 static} {\cf18 char} filename[256];\par
{\bkmkstart AAAAAAAFZJ}{\bkmkend AAAAAAAFZJ}
00048         QString f = QFileDialog::getSaveFileName (p, {\cf22 "Save File"}, path, filter);\par
{\bkmkstart AAAAAAAFZK}{\bkmkend AAAAAAAFZK}
00049         {\cf19 if} (!f.isEmpty () && !f.isNull ())\par
{\bkmkstart AAAAAAAFZL}{\bkmkend AAAAAAAFZL}
00050         \{\par
{\bkmkstart AAAAAAAFZM}{\bkmkend AAAAAAAFZM}
00051                 strcpy (filename, qPrintable (f));\par
{\bkmkstart AAAAAAAFZN}{\bkmkend AAAAAAAFZN}
00052                 {\cf19 return} filename;\par
{\bkmkstart AAAAAAAFZO}{\bkmkend AAAAAAAFZO}
00053         \}\par
{\bkmkstart AAAAAAAFZP}{\bkmkend AAAAAAAFZP}
00054 \par
{\bkmkstart AAAAAAAFZQ}{\bkmkend AAAAAAAFZQ}
00055         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAFZR}{\bkmkend AAAAAAAFZR}
00056 \}\par
{\bkmkstart AAAAAAAFZS}{\bkmkend AAAAAAAFZS}
00057 \par
{\bkmkstart AAAAAAAFZT}{\bkmkend AAAAAAAFZT}
00058 \par
{\bkmkstart AAAAAAAFZU}{\bkmkend AAAAAAAFZU}
00059 \par
{\bkmkstart AAAAAAAFZV}{\bkmkend AAAAAAAFZV}
00060 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAAFZW}{\bkmkend AAAAAAAFZW}
00061 mxGetFolderPath (mxWindow *parent, {\cf17 const} {\cf18 char} *path)\par
{\bkmkstart AAAAAAAFZX}{\bkmkend AAAAAAAFZX}
00062 \{\par
{\bkmkstart AAAAAAAFZY}{\bkmkend AAAAAAAFZY}
00063         QWidget *p = 0;\par
{\bkmkstart AAAAAAAFZZ}{\bkmkend AAAAAAAFZZ}
00064         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAGAA}{\bkmkend AAAAAAAGAA}
00065                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAGAB}{\bkmkend AAAAAAAGAB}
00066 \par
{\bkmkstart AAAAAAAGAC}{\bkmkend AAAAAAAGAC}
00067         {\cf17 static} {\cf18 char} filename[256];\par
{\bkmkstart AAAAAAAGAD}{\bkmkend AAAAAAAGAD}
00068         QString f = QFileDialog::getExistingDirectory (p, {\cf22 "Pick a Folder"}, path);\par
{\bkmkstart AAAAAAAGAE}{\bkmkend AAAAAAAGAE}
00069         {\cf19 if} (!f.isEmpty () && !f.isNull ())\par
{\bkmkstart AAAAAAAGAF}{\bkmkend AAAAAAAGAF}
00070         \{\par
{\bkmkstart AAAAAAAGAG}{\bkmkend AAAAAAAGAG}
00071                 strcpy (filename, qPrintable (f));\par
{\bkmkstart AAAAAAAGAH}{\bkmkend AAAAAAAGAH}
00072                 {\cf19 return} filename;\par
{\bkmkstart AAAAAAAGAI}{\bkmkend AAAAAAAGAI}
00073         \}\par
{\bkmkstart AAAAAAAGAJ}{\bkmkend AAAAAAAGAJ}
00074 \par
{\bkmkstart AAAAAAAGAK}{\bkmkend AAAAAAAGAK}
00075         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAGAL}{\bkmkend AAAAAAAGAL}
00076 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxGlWindow.cpp\par \pard\plain 
{\tc\tcl2 \v mxGlWindow.cpp}
{\xe \v mxGlWindow.cpp}
{\bkmkstart AAAAAAAGAM}
{\bkmkend AAAAAAAGAM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGAN}{\bkmkend AAAAAAAGAN}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAGAO}{\bkmkend AAAAAAAGAO}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAGAP}{\bkmkend AAAAAAAGAP}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAGAQ}{\bkmkend AAAAAAAGAQ}
00004 {\cf20 // file:           mxGlWindow.cpp}\par
{\bkmkstart AAAAAAAGAR}{\bkmkend AAAAAAAGAR}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAGAS}{\bkmkend AAAAAAAGAS}
00006 {\cf20 // last modified:  Apr 20 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAGAT}{\bkmkend AAAAAAAGAT}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAGAU}{\bkmkend AAAAAAAGAU}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAGAV}{\bkmkend AAAAAAAGAV}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAGAW}{\bkmkend AAAAAAAGAW}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAGAX}{\bkmkend AAAAAAAGAX}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAGAY}{\bkmkend AAAAAAAGAY}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAGAZ}{\bkmkend AAAAAAAGAZ}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAGBA}{\bkmkend AAAAAAAGBA}
00014 {\cf21 #include "mxGlWindow_i.h"}\par
{\bkmkstart AAAAAAAGBB}{\bkmkend AAAAAAAGBB}
00015 \par
{\bkmkstart AAAAAAAGBC}{\bkmkend AAAAAAAGBC}
00016 \par
{\bkmkstart AAAAAAAGBD}{\bkmkend AAAAAAAGBD}
00017 \par
{\bkmkstart AAAAAAAGBE}{\bkmkend AAAAAAAGBE}
00018 mxGlWindow::mxGlWindow (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label,\par
{\bkmkstart AAAAAAAGBF}{\bkmkend AAAAAAAGBF}
00019 {\cf18 int} style)\par
{\bkmkstart AAAAAAAGBG}{\bkmkend AAAAAAAGBG}
00020 : mxWindow (parent, x, y, w, h, label, style)\par
{\bkmkstart AAAAAAAGBH}{\bkmkend AAAAAAAGBH}
00021 \{\par
{\bkmkstart AAAAAAAGBI}{\bkmkend AAAAAAAGBI}
00022         QWidget *p = 0;\par
{\bkmkstart AAAAAAAGBJ}{\bkmkend AAAAAAAGBJ}
00023         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAGBK}{\bkmkend AAAAAAAGBK}
00024                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAGBL}{\bkmkend AAAAAAAGBL}
00025 \par
{\bkmkstart AAAAAAAGBM}{\bkmkend AAAAAAAGBM}
00026         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGBN" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAGBO}{\bkmkend AAAAAAAGBO}
00027 \par
{\bkmkstart AAAAAAAGBP}{\bkmkend AAAAAAAGBP}
00028         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAGBQ}{\bkmkend AAAAAAAGBQ}
00029         setType (MX_GLWINDOW);\par
{\bkmkstart AAAAAAAGBR}{\bkmkend AAAAAAAGBR}
00030         setParent (parent);\par
{\bkmkstart AAAAAAAGBS}{\bkmkend AAAAAAAGBS}
00031 \par
{\bkmkstart AAAAAAAGBT}{\bkmkend AAAAAAAGBT}
00032         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAGBU}{\bkmkend AAAAAAAGBU}
00033         setLabel (label);\par
{\bkmkstart AAAAAAAGBV}{\bkmkend AAAAAAAGBV}
00034         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAGBW}{\bkmkend AAAAAAAGBW}
00035 \}\par
{\bkmkstart AAAAAAAGBX}{\bkmkend AAAAAAAGBX}
00036 \par
{\bkmkstart AAAAAAAGBY}{\bkmkend AAAAAAAGBY}
00037 \par
{\bkmkstart AAAAAAAGBZ}{\bkmkend AAAAAAAGBZ}
00038 \par
{\bkmkstart AAAAAAAGCA}{\bkmkend AAAAAAAGCA}
00039 mxGlWindow::~mxGlWindow ()\par
{\bkmkstart AAAAAAAGCB}{\bkmkend AAAAAAAGCB}
00040 \{\par
{\bkmkstart AAAAAAAGCC}{\bkmkend AAAAAAAGCC}
00041         {\cf20 //d_this->killTimer ();}\par
{\bkmkstart AAAAAAAGCD}{\bkmkend AAAAAAAGCD}
00042         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAGCE}{\bkmkend AAAAAAAGCE}
00043 \}\par
{\bkmkstart AAAAAAAGCF}{\bkmkend AAAAAAAGCF}
00044 \par
{\bkmkstart AAAAAAAGCG}{\bkmkend AAAAAAAGCG}
00045 \par
{\bkmkstart AAAAAAAGCH}{\bkmkend AAAAAAAGCH}
00046 \par
{\bkmkstart AAAAAAAGCI}{\bkmkend AAAAAAAGCI}
00047 {\cf18 int}\par
{\bkmkstart AAAAAAAGCJ}{\bkmkend AAAAAAAGCJ}
00048 mxGlWindow::handleEvent (mxEvent *event)\par
{\bkmkstart AAAAAAAGCK}{\bkmkend AAAAAAAGCK}
00049 \{\par
{\bkmkstart AAAAAAAGCL}{\bkmkend AAAAAAAGCL}
00050         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAGCM}{\bkmkend AAAAAAAGCM}
00051 \}\par
{\bkmkstart AAAAAAAGCN}{\bkmkend AAAAAAAGCN}
00052 \par
{\bkmkstart AAAAAAAGCO}{\bkmkend AAAAAAAGCO}
00053 \par
{\bkmkstart AAAAAAAGCP}{\bkmkend AAAAAAAGCP}
00054 \par
{\bkmkstart AAAAAAAGCQ}{\bkmkend AAAAAAAGCQ}
00055 {\cf18 void}\par
{\bkmkstart AAAAAAAGCR}{\bkmkend AAAAAAAGCR}
00056 mxGlWindow::redraw ()\par
{\bkmkstart AAAAAAAGCS}{\bkmkend AAAAAAAGCS}
00057 \{\par
{\bkmkstart AAAAAAAGCT}{\bkmkend AAAAAAAGCT}
00058         {\cf19 if} (d_this->context ()-> create ())\par
{\bkmkstart AAAAAAAGCU}{\bkmkend AAAAAAAGCU}
00059         \{\par
{\bkmkstart AAAAAAAGCV}{\bkmkend AAAAAAAGCV}
00060                 makeCurrent ();\par
{\bkmkstart AAAAAAAGCW}{\bkmkend AAAAAAAGCW}
00061                 draw ();\par
{\bkmkstart AAAAAAAGCX}{\bkmkend AAAAAAAGCX}
00062                 swapBuffers ();\par
{\bkmkstart AAAAAAAGCY}{\bkmkend AAAAAAAGCY}
00063         \}\par
{\bkmkstart AAAAAAAGCZ}{\bkmkend AAAAAAAGCZ}
00064         {\cf20 // update() is not called if use mxEvent::Timer rather than mxEvent::Idle}\par
{\bkmkstart AAAAAAAGDA}{\bkmkend AAAAAAAGDA}
00065 \}\par
{\bkmkstart AAAAAAAGDB}{\bkmkend AAAAAAAGDB}
00066 \par
{\bkmkstart AAAAAAAGDC}{\bkmkend AAAAAAAGDC}
00067 \par
{\bkmkstart AAAAAAAGDD}{\bkmkend AAAAAAAGDD}
00068 \par
{\bkmkstart AAAAAAAGDE}{\bkmkend AAAAAAAGDE}
00069 {\cf18 void}\par
{\bkmkstart AAAAAAAGDF}{\bkmkend AAAAAAAGDF}
00070 mxGlWindow::draw ()\par
{\bkmkstart AAAAAAAGDG}{\bkmkend AAAAAAAGDG}
00071 \{\par
{\bkmkstart AAAAAAAGDH}{\bkmkend AAAAAAAGDH}
00072 \}\par
{\bkmkstart AAAAAAAGDI}{\bkmkend AAAAAAAGDI}
00073 \par
{\bkmkstart AAAAAAAGDJ}{\bkmkend AAAAAAAGDJ}
00074 \par
{\bkmkstart AAAAAAAGDK}{\bkmkend AAAAAAAGDK}
00075 \par
{\bkmkstart AAAAAAAGDL}{\bkmkend AAAAAAAGDL}
00076 {\cf18 int}\par
{\bkmkstart AAAAAAAGDM}{\bkmkend AAAAAAAGDM}
00077 mxGlWindow::makeCurrent ()\par
{\bkmkstart AAAAAAAGDN}{\bkmkend AAAAAAAGDN}
00078 \{\par
{\bkmkstart AAAAAAAGDO}{\bkmkend AAAAAAAGDO}
00079         d_this->makeCurrent ();\par
{\bkmkstart AAAAAAAGDP}{\bkmkend AAAAAAAGDP}
00080         {\cf19 return} 1;\par
{\bkmkstart AAAAAAAGDQ}{\bkmkend AAAAAAAGDQ}
00081 \}\par
{\bkmkstart AAAAAAAGDR}{\bkmkend AAAAAAAGDR}
00082 \par
{\bkmkstart AAAAAAAGDS}{\bkmkend AAAAAAAGDS}
00083 \par
{\bkmkstart AAAAAAAGDT}{\bkmkend AAAAAAAGDT}
00084 \par
{\bkmkstart AAAAAAAGDU}{\bkmkend AAAAAAAGDU}
00085 {\cf18 int}\par
{\bkmkstart AAAAAAAGDV}{\bkmkend AAAAAAAGDV}
00086 mxGlWindow::swapBuffers ()\par
{\bkmkstart AAAAAAAGDW}{\bkmkend AAAAAAAGDW}
00087 \{\par
{\bkmkstart AAAAAAAGDX}{\bkmkend AAAAAAAGDX}
00088         d_this->context()->swapBuffers(d_this->context()->surface());\par
{\bkmkstart AAAAAAAGDY}{\bkmkend AAAAAAAGDY}
00089         {\cf19 return} 1;\par
{\bkmkstart AAAAAAAGDZ}{\bkmkend AAAAAAAGDZ}
00090 \}\par
{\bkmkstart AAAAAAAGEA}{\bkmkend AAAAAAAGEA}
00091 \par
{\bkmkstart AAAAAAAGEB}{\bkmkend AAAAAAAGEB}
00092 \par
{\bkmkstart AAAAAAAGEC}{\bkmkend AAAAAAAGEC}
00093 \par
{\bkmkstart AAAAAAAGED}{\bkmkend AAAAAAAGED}
00094 {\cf18 void}\par
{\bkmkstart AAAAAAAGEE}{\bkmkend AAAAAAAGEE}
00095 mxGlWindow::setFormat ({\cf18 int} mode, {\cf18 int} colorBits, {\cf18 int} depthBits)\par
{\bkmkstart AAAAAAAGEF}{\bkmkend AAAAAAAGEF}
00096 \{\par
{\bkmkstart AAAAAAAGEG}{\bkmkend AAAAAAAGEG}
00097 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxGlWindow_i.h\par \pard\plain 
{\tc\tcl2 \v mxGlWindow_i.h}
{\xe \v mxGlWindow_i.h}
{\bkmkstart AAAAAAAGEH}
{\bkmkend AAAAAAAGEH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGEI}{\bkmkend AAAAAAAGEI}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAGEJ}{\bkmkend AAAAAAAGEJ}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAGEK}{\bkmkend AAAAAAAGEK}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAGEL}{\bkmkend AAAAAAAGEL}
00004 {\cf20 // file:           mxGlWindow_i.h}\par
{\bkmkstart AAAAAAAGEM}{\bkmkend AAAAAAAGEM}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAGEN}{\bkmkend AAAAAAAGEN}
00006 {\cf20 // last modified:  Apr 20 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAGEO}{\bkmkend AAAAAAAGEO}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAGEP}{\bkmkend AAAAAAAGEP}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAGEQ}{\bkmkend AAAAAAAGEQ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAGER}{\bkmkend AAAAAAAGER}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAGES}{\bkmkend AAAAAAAGES}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAGET}{\bkmkend AAAAAAAGET}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAGEU}{\bkmkend AAAAAAAGEU}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAGEV}{\bkmkend AAAAAAAGEV}
00014 {\cf21 #include <mx/mxGlWindow.h>}\par
{\bkmkstart AAAAAAAGEW}{\bkmkend AAAAAAAGEW}
00015 {\cf21 #include <mx/mx.h>}\par
{\bkmkstart AAAAAAAGEX}{\bkmkend AAAAAAAGEX}
00016 {\cf21 #include <QOpenGLWidget>}\par
{\bkmkstart AAAAAAAGEY}{\bkmkend AAAAAAAGEY}
00017 {\cf21 #include <QOpenGLContext>}\par
{\bkmkstart AAAAAAAGEZ}{\bkmkend AAAAAAAGEZ}
00018 {\cf21 #include <QMouseEvent>}\par
{\bkmkstart AAAAAAAGFA}{\bkmkend AAAAAAAGFA}
00019 \par
{\bkmkstart AAAAAAAGFB}{\bkmkend AAAAAAAGFB}
00020 \par
{\bkmkstart AAAAAAAGFC}{\bkmkend AAAAAAAGFC}
00021 \par
{\bkmkstart AAAAAAAGFD}{\bkmkend AAAAAAAGFD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGBN" }{}}{\fldrslt {\cs37\ul\cf2 00022}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGBN" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i}}}
 : {\cf17 public} QOpenGLWidget\par
{\bkmkstart AAAAAAAGFE}{\bkmkend AAAAAAAGFE}
00023 \{\par
{\bkmkstart AAAAAAAGFF}{\bkmkend AAAAAAAGFF}
00024         Q_OBJECT\par
{\bkmkstart AAAAAAAGFG}{\bkmkend AAAAAAAGFG}
00025         mxGlWindow *d_GlWindow;\par
{\bkmkstart AAAAAAAGFH}{\bkmkend AAAAAAAGFH}
00026         {\cf18 bool} d_dragging;\par
{\bkmkstart AAAAAAAGFI}{\bkmkend AAAAAAAGFI}
00027         {\cf18 int} d_button;\par
{\bkmkstart AAAAAAAGFJ}{\bkmkend AAAAAAAGFJ}
00028 \par
{\bkmkstart AAAAAAAGFK}{\bkmkend AAAAAAAGFK}
00029 {\cf17 public}:\par
{\bkmkstart AAAAAAAGFL}{\bkmkend AAAAAAAGFL}
00030 \par
{\bkmkstart AAAAAAAGFM}{\bkmkend AAAAAAAGFM}
00031         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGBN" }{}}{\fldrslt {\cs37\ul\cf2 mxGlWindow_i}}}
 (QWidget *parent, mxGlWindow *{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
) : QOpenGLWidget (parent)\par
{\bkmkstart AAAAAAAGFN}{\bkmkend AAAAAAAGFN}
00032         \{\par
{\bkmkstart AAAAAAAGFO}{\bkmkend AAAAAAAGFO}
00033                 d_GlWindow = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
;\par
{\bkmkstart AAAAAAAGFP}{\bkmkend AAAAAAAGFP}
00034                 d_dragging = {\cf17 false};\par
{\bkmkstart AAAAAAAGFQ}{\bkmkend AAAAAAAGFQ}
00035                 d_button = 0;\par
{\bkmkstart AAAAAAAGFR}{\bkmkend AAAAAAAGFR}
00036                 setMouseTracking ({\cf17 true});\par
{\bkmkstart AAAAAAAGFS}{\bkmkend AAAAAAAGFS}
00037                 installEventFilter ({\cf17 this});\par
{\bkmkstart AAAAAAAGFT}{\bkmkend AAAAAAAGFT}
00038         \}\par
{\bkmkstart AAAAAAAGFU}{\bkmkend AAAAAAAGFU}
00039 \par
{\bkmkstart AAAAAAAGFV}{\bkmkend AAAAAAAGFV}
00040         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGBN" }{}}{\fldrslt {\cs37\ul\cf2 ~mxGlWindow_i}}}
 ()\par
{\bkmkstart AAAAAAAGFW}{\bkmkend AAAAAAAGFW}
00041         \{\par
{\bkmkstart AAAAAAAGFX}{\bkmkend AAAAAAAGFX}
00042         \}\par
{\bkmkstart AAAAAAAGFY}{\bkmkend AAAAAAAGFY}
00043 \par
{\bkmkstart AAAAAAAGFZ}{\bkmkend AAAAAAAGFZ}
00044 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAGGA}{\bkmkend AAAAAAAGGA}
00045         {\cf18 void} idleEvent ()\par
{\bkmkstart AAAAAAAGGB}{\bkmkend AAAAAAAGGB}
00046         \{\par
{\bkmkstart AAAAAAAGGC}{\bkmkend AAAAAAAGGC}
00047                 mxEvent event;\par
{\bkmkstart AAAAAAAGGD}{\bkmkend AAAAAAAGGD}
00048 \par
{\bkmkstart AAAAAAAGGE}{\bkmkend AAAAAAAGGE}
00049                 {\cf17 event}.event = mxEvent::Idle;\par
{\bkmkstart AAAAAAAGGF}{\bkmkend AAAAAAAGGF}
00050                 d_GlWindow->handleEvent (&event);\par
{\bkmkstart AAAAAAAGGG}{\bkmkend AAAAAAAGGG}
00051         update();\par
{\bkmkstart AAAAAAAGGH}{\bkmkend AAAAAAAGGH}
00052         \}\par
{\bkmkstart AAAAAAAGGI}{\bkmkend AAAAAAAGGI}
00053 \par
{\bkmkstart AAAAAAAGGJ}{\bkmkend AAAAAAAGGJ}
00054 {\cf17 protected}:\par
{\bkmkstart AAAAAAAGGK}{\bkmkend AAAAAAAGGK}
00055         {\cf17 virtual} {\cf18 void} paintGL ()\par
{\bkmkstart AAAAAAAGGL}{\bkmkend AAAAAAAGGL}
00056         \{\par
{\bkmkstart AAAAAAAGGM}{\bkmkend AAAAAAAGGM}
00057                 d_GlWindow->draw ();\par
{\bkmkstart AAAAAAAGGN}{\bkmkend AAAAAAAGGN}
00058         update();\par
{\bkmkstart AAAAAAAGGO}{\bkmkend AAAAAAAGGO}
00059         \}\par
{\bkmkstart AAAAAAAGGP}{\bkmkend AAAAAAAGGP}
00060 \par
{\bkmkstart AAAAAAAGGQ}{\bkmkend AAAAAAAGGQ}
00061         {\cf17 virtual} {\cf18 void} resizeGL ({\cf18 int} w, {\cf18 int} h)\par
{\bkmkstart AAAAAAAGGR}{\bkmkend AAAAAAAGGR}
00062         \{\par
{\bkmkstart AAAAAAAGGS}{\bkmkend AAAAAAAGGS}
00063                 mxEvent event;\par
{\bkmkstart AAAAAAAGGT}{\bkmkend AAAAAAAGGT}
00064                 {\cf17 event}.event = mxEvent::Size;\par
{\bkmkstart AAAAAAAGGU}{\bkmkend AAAAAAAGGU}
00065                 {\cf17 event}.width = w;\par
{\bkmkstart AAAAAAAGGV}{\bkmkend AAAAAAAGGV}
00066                 {\cf17 event}.height = h;\par
{\bkmkstart AAAAAAAGGW}{\bkmkend AAAAAAAGGW}
00067                 d_GlWindow->handleEvent (&event);\par
{\bkmkstart AAAAAAAGGX}{\bkmkend AAAAAAAGGX}
00068         \}\par
{\bkmkstart AAAAAAAGGY}{\bkmkend AAAAAAAGGY}
00069 \par
{\bkmkstart AAAAAAAGGZ}{\bkmkend AAAAAAAGGZ}
00070         {\cf17 virtual} {\cf18 void} mousePressEvent (QMouseEvent *e)\par
{\bkmkstart AAAAAAAGHA}{\bkmkend AAAAAAAGHA}
00071         \{\par
{\bkmkstart AAAAAAAGHB}{\bkmkend AAAAAAAGHB}
00072                 QOpenGLWidget::mousePressEvent (e);\par
{\bkmkstart AAAAAAAGHC}{\bkmkend AAAAAAAGHC}
00073                 d_dragging = {\cf17 true};\par
{\bkmkstart AAAAAAAGHD}{\bkmkend AAAAAAAGHD}
00074 \par
{\bkmkstart AAAAAAAGHE}{\bkmkend AAAAAAAGHE}
00075                 d_button = 0;\par
{\bkmkstart AAAAAAAGHF}{\bkmkend AAAAAAAGHF}
00076                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
{\bkmkstart AAAAAAAGHG}{\bkmkend AAAAAAAGHG}
00077                         d_button |= mxEvent::MouseLeftButton;\par
{\bkmkstart AAAAAAAGHH}{\bkmkend AAAAAAAGHH}
00078                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
{\bkmkstart AAAAAAAGHI}{\bkmkend AAAAAAAGHI}
00079                         d_button |= mxEvent::MouseRightButton;\par
{\bkmkstart AAAAAAAGHJ}{\bkmkend AAAAAAAGHJ}
00080                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
{\bkmkstart AAAAAAAGHK}{\bkmkend AAAAAAAGHK}
00081                         d_button |= mxEvent::MouseMiddleButton;\par
{\bkmkstart AAAAAAAGHL}{\bkmkend AAAAAAAGHL}
00082 \par
{\bkmkstart AAAAAAAGHM}{\bkmkend AAAAAAAGHM}
00083                 mxEvent event;\par
{\bkmkstart AAAAAAAGHN}{\bkmkend AAAAAAAGHN}
00084                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
{\bkmkstart AAAAAAAGHO}{\bkmkend AAAAAAAGHO}
00085                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
{\bkmkstart AAAAAAAGHP}{\bkmkend AAAAAAAGHP}
00086                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
{\bkmkstart AAAAAAAGHQ}{\bkmkend AAAAAAAGHQ}
00087                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
{\bkmkstart AAAAAAAGHR}{\bkmkend AAAAAAAGHR}
00088                 {\cf17 event}.event = mxEvent::MouseDown;\par
{\bkmkstart AAAAAAAGHS}{\bkmkend AAAAAAAGHS}
00089                 {\cf17 event}.buttons = d_button;\par
{\bkmkstart AAAAAAAGHT}{\bkmkend AAAAAAAGHT}
00090                 {\cf17 event}.x = e->x ();\par
{\bkmkstart AAAAAAAGHU}{\bkmkend AAAAAAAGHU}
00091                 {\cf17 event}.y = e->y ();\par
{\bkmkstart AAAAAAAGHV}{\bkmkend AAAAAAAGHV}
00092                 d_GlWindow->handleEvent (&event);\par
{\bkmkstart AAAAAAAGHW}{\bkmkend AAAAAAAGHW}
00093         \}\par
{\bkmkstart AAAAAAAGHX}{\bkmkend AAAAAAAGHX}
00094 \par
{\bkmkstart AAAAAAAGHY}{\bkmkend AAAAAAAGHY}
00095         {\cf17 virtual} {\cf18 void} mouseMoveEvent (QMouseEvent *e)\par
{\bkmkstart AAAAAAAGHZ}{\bkmkend AAAAAAAGHZ}
00096         \{\par
{\bkmkstart AAAAAAAGIA}{\bkmkend AAAAAAAGIA}
00097                 QOpenGLWidget::mouseMoveEvent (e);\par
{\bkmkstart AAAAAAAGIB}{\bkmkend AAAAAAAGIB}
00098 \par
{\bkmkstart AAAAAAAGIC}{\bkmkend AAAAAAAGIC}
00099                 d_button = 0;\par
{\bkmkstart AAAAAAAGID}{\bkmkend AAAAAAAGID}
00100                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
{\bkmkstart AAAAAAAGIE}{\bkmkend AAAAAAAGIE}
00101                         d_button |= mxEvent::MouseLeftButton;\par
{\bkmkstart AAAAAAAGIF}{\bkmkend AAAAAAAGIF}
00102                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
{\bkmkstart AAAAAAAGIG}{\bkmkend AAAAAAAGIG}
00103                         d_button |= mxEvent::MouseRightButton;\par
{\bkmkstart AAAAAAAGIH}{\bkmkend AAAAAAAGIH}
00104                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
{\bkmkstart AAAAAAAGII}{\bkmkend AAAAAAAGII}
00105                         d_button |= mxEvent::MouseMiddleButton;\par
{\bkmkstart AAAAAAAGIJ}{\bkmkend AAAAAAAGIJ}
00106 \par
{\bkmkstart AAAAAAAGIK}{\bkmkend AAAAAAAGIK}
00107                 mxEvent event;\par
{\bkmkstart AAAAAAAGIL}{\bkmkend AAAAAAAGIL}
00108                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
{\bkmkstart AAAAAAAGIM}{\bkmkend AAAAAAAGIM}
00109                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
{\bkmkstart AAAAAAAGIN}{\bkmkend AAAAAAAGIN}
00110                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
{\bkmkstart AAAAAAAGIO}{\bkmkend AAAAAAAGIO}
00111                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
{\bkmkstart AAAAAAAGIP}{\bkmkend AAAAAAAGIP}
00112 \par
{\bkmkstart AAAAAAAGIQ}{\bkmkend AAAAAAAGIQ}
00113                 {\cf17 event}.buttons = d_button;\par
{\bkmkstart AAAAAAAGIR}{\bkmkend AAAAAAAGIR}
00114                 {\cf17 event}.x = e->x ();\par
{\bkmkstart AAAAAAAGIS}{\bkmkend AAAAAAAGIS}
00115                 {\cf17 event}.y = e->y ();\par
{\bkmkstart AAAAAAAGIT}{\bkmkend AAAAAAAGIT}
00116 \par
{\bkmkstart AAAAAAAGIU}{\bkmkend AAAAAAAGIU}
00117                 {\cf19 if} (d_dragging)\par
{\bkmkstart AAAAAAAGIV}{\bkmkend AAAAAAAGIV}
00118                         {\cf17 event}.event = mxEvent::MouseDrag;\par
{\bkmkstart AAAAAAAGIW}{\bkmkend AAAAAAAGIW}
00119                 {\cf19 else}\par
{\bkmkstart AAAAAAAGIX}{\bkmkend AAAAAAAGIX}
00120                         {\cf17 event}.event = mxEvent::MouseMove;\par
{\bkmkstart AAAAAAAGIY}{\bkmkend AAAAAAAGIY}
00121 \par
{\bkmkstart AAAAAAAGIZ}{\bkmkend AAAAAAAGIZ}
00122                 d_GlWindow->handleEvent (&event);\par
{\bkmkstart AAAAAAAGJA}{\bkmkend AAAAAAAGJA}
00123         \}\par
{\bkmkstart AAAAAAAGJB}{\bkmkend AAAAAAAGJB}
00124 \par
{\bkmkstart AAAAAAAGJC}{\bkmkend AAAAAAAGJC}
00125         {\cf17 virtual} {\cf18 void} mouseReleaseEvent (QMouseEvent *e)\par
{\bkmkstart AAAAAAAGJD}{\bkmkend AAAAAAAGJD}
00126         \{\par
{\bkmkstart AAAAAAAGJE}{\bkmkend AAAAAAAGJE}
00127                 QOpenGLWidget::mouseReleaseEvent (e);\par
{\bkmkstart AAAAAAAGJF}{\bkmkend AAAAAAAGJF}
00128                 d_dragging = {\cf17 false};\par
{\bkmkstart AAAAAAAGJG}{\bkmkend AAAAAAAGJG}
00129 \par
{\bkmkstart AAAAAAAGJH}{\bkmkend AAAAAAAGJH}
00130                 d_button = 0;\par
{\bkmkstart AAAAAAAGJI}{\bkmkend AAAAAAAGJI}
00131                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
{\bkmkstart AAAAAAAGJJ}{\bkmkend AAAAAAAGJJ}
00132                         d_button |= mxEvent::MouseLeftButton;\par
{\bkmkstart AAAAAAAGJK}{\bkmkend AAAAAAAGJK}
00133                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
{\bkmkstart AAAAAAAGJL}{\bkmkend AAAAAAAGJL}
00134                         d_button |= mxEvent::MouseRightButton;\par
{\bkmkstart AAAAAAAGJM}{\bkmkend AAAAAAAGJM}
00135                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
{\bkmkstart AAAAAAAGJN}{\bkmkend AAAAAAAGJN}
00136                         d_button |= mxEvent::MouseMiddleButton;\par
{\bkmkstart AAAAAAAGJO}{\bkmkend AAAAAAAGJO}
00137 \par
{\bkmkstart AAAAAAAGJP}{\bkmkend AAAAAAAGJP}
00138                 mxEvent event;\par
{\bkmkstart AAAAAAAGJQ}{\bkmkend AAAAAAAGJQ}
00139                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
{\bkmkstart AAAAAAAGJR}{\bkmkend AAAAAAAGJR}
00140                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
{\bkmkstart AAAAAAAGJS}{\bkmkend AAAAAAAGJS}
00141                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
{\bkmkstart AAAAAAAGJT}{\bkmkend AAAAAAAGJT}
00142                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
{\bkmkstart AAAAAAAGJU}{\bkmkend AAAAAAAGJU}
00143 \par
{\bkmkstart AAAAAAAGJV}{\bkmkend AAAAAAAGJV}
00144                 {\cf17 event}.event = mxEvent::MouseUp;\par
{\bkmkstart AAAAAAAGJW}{\bkmkend AAAAAAAGJW}
00145                 {\cf17 event}.buttons = d_button;\par
{\bkmkstart AAAAAAAGJX}{\bkmkend AAAAAAAGJX}
00146                 {\cf17 event}.x = e->x ();\par
{\bkmkstart AAAAAAAGJY}{\bkmkend AAAAAAAGJY}
00147                 {\cf17 event}.y = e->y ();\par
{\bkmkstart AAAAAAAGJZ}{\bkmkend AAAAAAAGJZ}
00148 \par
{\bkmkstart AAAAAAAGKA}{\bkmkend AAAAAAAGKA}
00149                 d_GlWindow->handleEvent (&event);\par
{\bkmkstart AAAAAAAGKB}{\bkmkend AAAAAAAGKB}
00150                 d_button = 0;\par
{\bkmkstart AAAAAAAGKC}{\bkmkend AAAAAAAGKC}
00151         \}\par
{\bkmkstart AAAAAAAGKD}{\bkmkend AAAAAAAGKD}
00152 \par
{\bkmkstart AAAAAAAGKE}{\bkmkend AAAAAAAGKE}
00153         {\cf17 virtual} {\cf18 void} keyPressEvent (QKeyEvent *e)\par
{\bkmkstart AAAAAAAGKF}{\bkmkend AAAAAAAGKF}
00154         \{\par
{\bkmkstart AAAAAAAGKG}{\bkmkend AAAAAAAGKG}
00155                 QOpenGLWidget::keyPressEvent (e);\par
{\bkmkstart AAAAAAAGKH}{\bkmkend AAAAAAAGKH}
00156 \par
{\bkmkstart AAAAAAAGKI}{\bkmkend AAAAAAAGKI}
00157                 mxEvent event;\par
{\bkmkstart AAAAAAAGKJ}{\bkmkend AAAAAAAGKJ}
00158 \par
{\bkmkstart AAAAAAAGKK}{\bkmkend AAAAAAAGKK}
00159                 {\cf17 event}.key = tolower (e->key ());\par
{\bkmkstart AAAAAAAGKL}{\bkmkend AAAAAAAGKL}
00160 \par
{\bkmkstart AAAAAAAGKM}{\bkmkend AAAAAAAGKM}
00161                 {\cf19 if} (e->modifiers () & Qt::ControlModifier)\par
{\bkmkstart AAAAAAAGKN}{\bkmkend AAAAAAAGKN}
00162                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
{\bkmkstart AAAAAAAGKO}{\bkmkend AAAAAAAGKO}
00163                 {\cf19 if} (e->modifiers () & Qt::ShiftModifier)\par
{\bkmkstart AAAAAAAGKP}{\bkmkend AAAAAAAGKP}
00164                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
{\bkmkstart AAAAAAAGKQ}{\bkmkend AAAAAAAGKQ}
00165 \par
{\bkmkstart AAAAAAAGKR}{\bkmkend AAAAAAAGKR}
00166                 {\cf17 event}.event = mxEvent::KeyDown;\par
{\bkmkstart AAAAAAAGKS}{\bkmkend AAAAAAAGKS}
00167                 d_GlWindow->handleEvent (&event);\par
{\bkmkstart AAAAAAAGKT}{\bkmkend AAAAAAAGKT}
00168         \}\par
{\bkmkstart AAAAAAAGKU}{\bkmkend AAAAAAAGKU}
00169 \par
{\bkmkstart AAAAAAAGKV}{\bkmkend AAAAAAAGKV}
00170         {\cf17 virtual} {\cf18 void} timerEvent (QTimerEvent *e)\par
{\bkmkstart AAAAAAAGKW}{\bkmkend AAAAAAAGKW}
00171         \{\par
{\bkmkstart AAAAAAAGKX}{\bkmkend AAAAAAAGKX}
00172                 mxEvent event;\par
{\bkmkstart AAAAAAAGKY}{\bkmkend AAAAAAAGKY}
00173                 {\cf17 event}.event = mxEvent::Timer;\par
{\bkmkstart AAAAAAAGKZ}{\bkmkend AAAAAAAGKZ}
00174                 d_GlWindow->handleEvent (&event);\par
{\bkmkstart AAAAAAAGLA}{\bkmkend AAAAAAAGLA}
00175         {\cf20 //update();}\par
{\bkmkstart AAAAAAAGLB}{\bkmkend AAAAAAAGLB}
00176         \}\par
{\bkmkstart AAAAAAAGLC}{\bkmkend AAAAAAAGLC}
00177 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxGroupBox.cpp\par \pard\plain 
{\tc\tcl2 \v mxGroupBox.cpp}
{\xe \v mxGroupBox.cpp}
{\bkmkstart AAAAAAAGLD}
{\bkmkend AAAAAAAGLD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGLE}{\bkmkend AAAAAAAGLE}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAGLF}{\bkmkend AAAAAAAGLF}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAGLG}{\bkmkend AAAAAAAGLG}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAGLH}{\bkmkend AAAAAAAGLH}
00004 {\cf20 // file:           mxGroupBox.cpp}\par
{\bkmkstart AAAAAAAGLI}{\bkmkend AAAAAAAGLI}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAGLJ}{\bkmkend AAAAAAAGLJ}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAGLK}{\bkmkend AAAAAAAGLK}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAGLL}{\bkmkend AAAAAAAGLL}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAGLM}{\bkmkend AAAAAAAGLM}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAGLN}{\bkmkend AAAAAAAGLN}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAGLO}{\bkmkend AAAAAAAGLO}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAGLP}{\bkmkend AAAAAAAGLP}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAGLQ}{\bkmkend AAAAAAAGLQ}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAGLR}{\bkmkend AAAAAAAGLR}
00014 {\cf21 #include <mx/mxGroupBox.h>}\par
{\bkmkstart AAAAAAAGLS}{\bkmkend AAAAAAAGLS}
00015 {\cf21 #include <QGroupBox>}\par
{\bkmkstart AAAAAAAGLT}{\bkmkend AAAAAAAGLT}
00016 \par
{\bkmkstart AAAAAAAGLU}{\bkmkend AAAAAAAGLU}
00017 \par
{\bkmkstart AAAAAAAGLV}{\bkmkend AAAAAAAGLV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLW" }{}}{\fldrslt {\cs37\ul\cf2 00018}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLW" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox_i}}}
 : {\cf17 public} QGroupBox\par
{\bkmkstart AAAAAAAGLX}{\bkmkend AAAAAAAGLX}
00019 \{\par
{\bkmkstart AAAAAAAGLY}{\bkmkend AAAAAAAGLY}
00020         mxGroupBox *d_widget;\par
{\bkmkstart AAAAAAAGLZ}{\bkmkend AAAAAAAGLZ}
00021 \par
{\bkmkstart AAAAAAAGMA}{\bkmkend AAAAAAAGMA}
00022 {\cf17 public}:\par
{\bkmkstart AAAAAAAGMB}{\bkmkend AAAAAAAGMB}
00023         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLW" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox_i}}}
 (QWidget *parent, mxGroupBox *widget) : QGroupBox (parent)\par
{\bkmkstart AAAAAAAGMC}{\bkmkend AAAAAAAGMC}
00024         \{\par
{\bkmkstart AAAAAAAGMD}{\bkmkend AAAAAAAGMD}
00025                 d_widget = widget;\par
{\bkmkstart AAAAAAAGME}{\bkmkend AAAAAAAGME}
00026         \}\par
{\bkmkstart AAAAAAAGMF}{\bkmkend AAAAAAAGMF}
00027 \par
{\bkmkstart AAAAAAAGMG}{\bkmkend AAAAAAAGMG}
00028         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLW" }{}}{\fldrslt {\cs37\ul\cf2 ~mxGroupBox_i}}}
 ()\par
{\bkmkstart AAAAAAAGMH}{\bkmkend AAAAAAAGMH}
00029         \{\par
{\bkmkstart AAAAAAAGMI}{\bkmkend AAAAAAAGMI}
00030         \}\par
{\bkmkstart AAAAAAAGMJ}{\bkmkend AAAAAAAGMJ}
00031 \};\par
{\bkmkstart AAAAAAAGMK}{\bkmkend AAAAAAAGMK}
00032 \par
{\bkmkstart AAAAAAAGML}{\bkmkend AAAAAAAGML}
00033 \par
{\bkmkstart AAAAAAAGMM}{\bkmkend AAAAAAAGMM}
00034 \par
{\bkmkstart AAAAAAAGMN}{\bkmkend AAAAAAAGMN}
00035 mxGroupBox::mxGroupBox (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label)\par
{\bkmkstart AAAAAAAGMO}{\bkmkend AAAAAAAGMO}
00036 : mxWidget (parent, x, y, w, h, label)\par
{\bkmkstart AAAAAAAGMP}{\bkmkend AAAAAAAGMP}
00037 \{\par
{\bkmkstart AAAAAAAGMQ}{\bkmkend AAAAAAAGMQ}
00038         QWidget *p = 0;\par
{\bkmkstart AAAAAAAGMR}{\bkmkend AAAAAAAGMR}
00039         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAGMS}{\bkmkend AAAAAAAGMS}
00040                 p = (QWidget *) ((mxWidget *) parent)->getHandle ();\par
{\bkmkstart AAAAAAAGMT}{\bkmkend AAAAAAAGMT}
00041         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGLW" }{}}{\fldrslt {\cs37\ul\cf2 mxGroupBox_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAGMU}{\bkmkend AAAAAAAGMU}
00042 \par
{\bkmkstart AAAAAAAGMV}{\bkmkend AAAAAAAGMV}
00043         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAGMW}{\bkmkend AAAAAAAGMW}
00044         setType (MX_GROUPBOX);\par
{\bkmkstart AAAAAAAGMX}{\bkmkend AAAAAAAGMX}
00045         setParent (parent);\par
{\bkmkstart AAAAAAAGMY}{\bkmkend AAAAAAAGMY}
00046         \par
{\bkmkstart AAAAAAAGMZ}{\bkmkend AAAAAAAGMZ}
00047         setLabel (label);\par
{\bkmkstart AAAAAAAGNA}{\bkmkend AAAAAAAGNA}
00048         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAGNB}{\bkmkend AAAAAAAGNB}
00049         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAGNC}{\bkmkend AAAAAAAGNC}
00050 \}\par
{\bkmkstart AAAAAAAGND}{\bkmkend AAAAAAAGND}
00051 \par
{\bkmkstart AAAAAAAGNE}{\bkmkend AAAAAAAGNE}
00052 \par
{\bkmkstart AAAAAAAGNF}{\bkmkend AAAAAAAGNF}
00053 \par
{\bkmkstart AAAAAAAGNG}{\bkmkend AAAAAAAGNG}
00054 mxGroupBox::~mxGroupBox ()\par
{\bkmkstart AAAAAAAGNH}{\bkmkend AAAAAAAGNH}
00055 \{\par
{\bkmkstart AAAAAAAGNI}{\bkmkend AAAAAAAGNI}
00056         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAGNJ}{\bkmkend AAAAAAAGNJ}
00057 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxLabel.cpp\par \pard\plain 
{\tc\tcl2 \v mxLabel.cpp}
{\xe \v mxLabel.cpp}
{\bkmkstart AAAAAAAGNK}
{\bkmkend AAAAAAAGNK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGNL}{\bkmkend AAAAAAAGNL}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAGNM}{\bkmkend AAAAAAAGNM}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAGNN}{\bkmkend AAAAAAAGNN}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAGNO}{\bkmkend AAAAAAAGNO}
00004 {\cf20 // file:           mxLabel.cpp}\par
{\bkmkstart AAAAAAAGNP}{\bkmkend AAAAAAAGNP}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAGNQ}{\bkmkend AAAAAAAGNQ}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAGNR}{\bkmkend AAAAAAAGNR}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAGNS}{\bkmkend AAAAAAAGNS}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAGNT}{\bkmkend AAAAAAAGNT}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAGNU}{\bkmkend AAAAAAAGNU}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAGNV}{\bkmkend AAAAAAAGNV}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAGNW}{\bkmkend AAAAAAAGNW}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAGNX}{\bkmkend AAAAAAAGNX}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAGNY}{\bkmkend AAAAAAAGNY}
00014 {\cf21 #include <mx/mxLabel.h>}\par
{\bkmkstart AAAAAAAGNZ}{\bkmkend AAAAAAAGNZ}
00015 {\cf21 #include <QLabel>}\par
{\bkmkstart AAAAAAAGOA}{\bkmkend AAAAAAAGOA}
00016 \par
{\bkmkstart AAAAAAAGOB}{\bkmkend AAAAAAAGOB}
00017 \par
{\bkmkstart AAAAAAAGOC}{\bkmkend AAAAAAAGOC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOD" }{}}{\fldrslt {\cs37\ul\cf2 00018}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOD" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel_i}}}
 : {\cf17 public} QLabel\par
{\bkmkstart AAAAAAAGOE}{\bkmkend AAAAAAAGOE}
00019 \{\par
{\bkmkstart AAAAAAAGOF}{\bkmkend AAAAAAAGOF}
00020         mxLabel *d_widget;\par
{\bkmkstart AAAAAAAGOG}{\bkmkend AAAAAAAGOG}
00021 \par
{\bkmkstart AAAAAAAGOH}{\bkmkend AAAAAAAGOH}
00022 {\cf17 public}:\par
{\bkmkstart AAAAAAAGOI}{\bkmkend AAAAAAAGOI}
00023         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOD" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel_i}}}
 (QWidget *parent, mxLabel *widget) : QLabel (parent)\par
{\bkmkstart AAAAAAAGOJ}{\bkmkend AAAAAAAGOJ}
00024         \{\par
{\bkmkstart AAAAAAAGOK}{\bkmkend AAAAAAAGOK}
00025                 d_widget = widget;\par
{\bkmkstart AAAAAAAGOL}{\bkmkend AAAAAAAGOL}
00026                 setAlignment (Qt::AlignLeft | Qt::AlignTop);\par
{\bkmkstart AAAAAAAGOM}{\bkmkend AAAAAAAGOM}
00027         \}\par
{\bkmkstart AAAAAAAGON}{\bkmkend AAAAAAAGON}
00028 \par
{\bkmkstart AAAAAAAGOO}{\bkmkend AAAAAAAGOO}
00029         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOD" }{}}{\fldrslt {\cs37\ul\cf2 ~mxLabel_i}}}
 ()\par
{\bkmkstart AAAAAAAGOP}{\bkmkend AAAAAAAGOP}
00030         \{\par
{\bkmkstart AAAAAAAGOQ}{\bkmkend AAAAAAAGOQ}
00031         \}\par
{\bkmkstart AAAAAAAGOR}{\bkmkend AAAAAAAGOR}
00032 \};\par
{\bkmkstart AAAAAAAGOS}{\bkmkend AAAAAAAGOS}
00033 \par
{\bkmkstart AAAAAAAGOT}{\bkmkend AAAAAAAGOT}
00034 \par
{\bkmkstart AAAAAAAGOU}{\bkmkend AAAAAAAGOU}
00035 \par
{\bkmkstart AAAAAAAGOV}{\bkmkend AAAAAAAGOV}
00036 mxLabel::mxLabel (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label)\par
{\bkmkstart AAAAAAAGOW}{\bkmkend AAAAAAAGOW}
00037 : mxWidget (parent, x, y, w, h, label)\par
{\bkmkstart AAAAAAAGOX}{\bkmkend AAAAAAAGOX}
00038 \{\par
{\bkmkstart AAAAAAAGOY}{\bkmkend AAAAAAAGOY}
00039         QWidget *p = 0;\par
{\bkmkstart AAAAAAAGOZ}{\bkmkend AAAAAAAGOZ}
00040         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAGPA}{\bkmkend AAAAAAAGPA}
00041                 p = (QWidget *) ((mxWidget *) parent)->getHandle ();\par
{\bkmkstart AAAAAAAGPB}{\bkmkend AAAAAAAGPB}
00042         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGOD" }{}}{\fldrslt {\cs37\ul\cf2 mxLabel_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAGPC}{\bkmkend AAAAAAAGPC}
00043 \par
{\bkmkstart AAAAAAAGPD}{\bkmkend AAAAAAAGPD}
00044         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAGPE}{\bkmkend AAAAAAAGPE}
00045         setType (MX_LABEL);\par
{\bkmkstart AAAAAAAGPF}{\bkmkend AAAAAAAGPF}
00046         setParent (parent);\par
{\bkmkstart AAAAAAAGPG}{\bkmkend AAAAAAAGPG}
00047         \par
{\bkmkstart AAAAAAAGPH}{\bkmkend AAAAAAAGPH}
00048         setLabel (label);\par
{\bkmkstart AAAAAAAGPI}{\bkmkend AAAAAAAGPI}
00049         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAGPJ}{\bkmkend AAAAAAAGPJ}
00050         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAGPK}{\bkmkend AAAAAAAGPK}
00051 \}\par
{\bkmkstart AAAAAAAGPL}{\bkmkend AAAAAAAGPL}
00052 \par
{\bkmkstart AAAAAAAGPM}{\bkmkend AAAAAAAGPM}
00053 \par
{\bkmkstart AAAAAAAGPN}{\bkmkend AAAAAAAGPN}
00054 \par
{\bkmkstart AAAAAAAGPO}{\bkmkend AAAAAAAGPO}
00055 mxLabel::~mxLabel ()\par
{\bkmkstart AAAAAAAGPP}{\bkmkend AAAAAAAGPP}
00056 \{\par
{\bkmkstart AAAAAAAGPQ}{\bkmkend AAAAAAAGPQ}
00057         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAGPR}{\bkmkend AAAAAAAGPR}
00058 \}\par
{\bkmkstart AAAAAAAGPS}{\bkmkend AAAAAAAGPS}
00059 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxLineEdit.cpp\par \pard\plain 
{\tc\tcl2 \v mxLineEdit.cpp}
{\xe \v mxLineEdit.cpp}
{\bkmkstart AAAAAAAGPT}
{\bkmkend AAAAAAAGPT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGPU}{\bkmkend AAAAAAAGPU}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAGPV}{\bkmkend AAAAAAAGPV}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAGPW}{\bkmkend AAAAAAAGPW}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAGPX}{\bkmkend AAAAAAAGPX}
00004 {\cf20 // file:           mxEditBox.cpp}\par
{\bkmkstart AAAAAAAGPY}{\bkmkend AAAAAAAGPY}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAGPZ}{\bkmkend AAAAAAAGPZ}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAGQA}{\bkmkend AAAAAAAGQA}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAGQB}{\bkmkend AAAAAAAGQB}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAGQC}{\bkmkend AAAAAAAGQC}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAGQD}{\bkmkend AAAAAAAGQD}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAGQE}{\bkmkend AAAAAAAGQE}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAGQF}{\bkmkend AAAAAAAGQF}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAGQG}{\bkmkend AAAAAAAGQG}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAGQH}{\bkmkend AAAAAAAGQH}
00014 {\cf21 #include "mxLineEdit_i.h"}\par
{\bkmkstart AAAAAAAGQI}{\bkmkend AAAAAAAGQI}
00015 \par
{\bkmkstart AAAAAAAGQJ}{\bkmkend AAAAAAAGQJ}
00016 \par
{\bkmkstart AAAAAAAGQK}{\bkmkend AAAAAAAGQK}
00017 \par
{\bkmkstart AAAAAAAGQL}{\bkmkend AAAAAAAGQL}
00018 mxLineEdit::mxLineEdit (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char}\par
{\bkmkstart AAAAAAAGQM}{\bkmkend AAAAAAAGQM}
00019 *label, {\cf18 int} {\cf18 id}, {\cf18 int} style)\par
{\bkmkstart AAAAAAAGQN}{\bkmkend AAAAAAAGQN}
00020 : mxWidget (parent, x, y, w, h, label)\par
{\bkmkstart AAAAAAAGQO}{\bkmkend AAAAAAAGQO}
00021 \{\par
{\bkmkstart AAAAAAAGQP}{\bkmkend AAAAAAAGQP}
00022         QWidget *p = 0;\par
{\bkmkstart AAAAAAAGQQ}{\bkmkend AAAAAAAGQQ}
00023         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAGQR}{\bkmkend AAAAAAAGQR}
00024                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAGQS}{\bkmkend AAAAAAAGQS}
00025 \par
{\bkmkstart AAAAAAAGQT}{\bkmkend AAAAAAAGQT}
00026         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGQU" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAGQV}{\bkmkend AAAAAAAGQV}
00027         d_this->connect (d_this, SIGNAL(textChanged ({\cf17 const} QString &)), d_this, SLOT (textChangedEvent ({\cf17 const} QString &)));\par
{\bkmkstart AAAAAAAGQW}{\bkmkend AAAAAAAGQW}
00028 \par
{\bkmkstart AAAAAAAGQX}{\bkmkend AAAAAAAGQX}
00029         {\cf19 if} (style == Password)\par
{\bkmkstart AAAAAAAGQY}{\bkmkend AAAAAAAGQY}
00030                 d_this->setEchoMode (QLineEdit::Password);\par
{\bkmkstart AAAAAAAGQZ}{\bkmkend AAAAAAAGQZ}
00031 \par
{\bkmkstart AAAAAAAGRA}{\bkmkend AAAAAAAGRA}
00032         {\cf19 else} {\cf19 if} (style == ReadOnly)\par
{\bkmkstart AAAAAAAGRB}{\bkmkend AAAAAAAGRB}
00033                 setEnabled ({\cf17 false});\par
{\bkmkstart AAAAAAAGRC}{\bkmkend AAAAAAAGRC}
00034                                 \par
{\bkmkstart AAAAAAAGRD}{\bkmkend AAAAAAAGRD}
00035         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAGRE}{\bkmkend AAAAAAAGRE}
00036         setType (MX_LINEEDIT);\par
{\bkmkstart AAAAAAAGRF}{\bkmkend AAAAAAAGRF}
00037         setParent (parent);\par
{\bkmkstart AAAAAAAGRG}{\bkmkend AAAAAAAGRG}
00038         \par
{\bkmkstart AAAAAAAGRH}{\bkmkend AAAAAAAGRH}
00039         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAGRI}{\bkmkend AAAAAAAGRI}
00040         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAGRJ}{\bkmkend AAAAAAAGRJ}
00041         setLabel (label);\par
{\bkmkstart AAAAAAAGRK}{\bkmkend AAAAAAAGRK}
00042         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAGRL}{\bkmkend AAAAAAAGRL}
00043 \}\par
{\bkmkstart AAAAAAAGRM}{\bkmkend AAAAAAAGRM}
00044 \par
{\bkmkstart AAAAAAAGRN}{\bkmkend AAAAAAAGRN}
00045 \par
{\bkmkstart AAAAAAAGRO}{\bkmkend AAAAAAAGRO}
00046 \par
{\bkmkstart AAAAAAAGRP}{\bkmkend AAAAAAAGRP}
00047 mxLineEdit::~mxLineEdit ()\par
{\bkmkstart AAAAAAAGRQ}{\bkmkend AAAAAAAGRQ}
00048 \{\par
{\bkmkstart AAAAAAAGRR}{\bkmkend AAAAAAAGRR}
00049         QObject::disconnect (d_this, SIGNAL(textChanged ({\cf17 const} QString &)), d_this, SLOT (textChangedEvent ({\cf17 const} QString &)));\par
{\bkmkstart AAAAAAAGRS}{\bkmkend AAAAAAAGRS}
00050         d_this->setText ({\cf22 ""});\par
{\bkmkstart AAAAAAAGRT}{\bkmkend AAAAAAAGRT}
00051         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAGRU}{\bkmkend AAAAAAAGRU}
00052 \}\par
{\bkmkstart AAAAAAAGRV}{\bkmkend AAAAAAAGRV}
00053 \par
{\bkmkstart AAAAAAAGRW}{\bkmkend AAAAAAAGRW}
00054 \par
{\bkmkstart AAAAAAAGRX}{\bkmkend AAAAAAAGRX}
00055 \par
{\bkmkstart AAAAAAAGRY}{\bkmkend AAAAAAAGRY}
00056 {\cf18 void}\par
{\bkmkstart AAAAAAAGRZ}{\bkmkend AAAAAAAGRZ}
00057 mxLineEdit::setMaxLength ({\cf18 int} max)\par
{\bkmkstart AAAAAAAGSA}{\bkmkend AAAAAAAGSA}
00058 \{\par
{\bkmkstart AAAAAAAGSB}{\bkmkend AAAAAAAGSB}
00059         d_this->setMaxLength (max);\par
{\bkmkstart AAAAAAAGSC}{\bkmkend AAAAAAAGSC}
00060 \}\par
{\bkmkstart AAAAAAAGSD}{\bkmkend AAAAAAAGSD}
00061 \par
{\bkmkstart AAAAAAAGSE}{\bkmkend AAAAAAAGSE}
00062 \par
{\bkmkstart AAAAAAAGSF}{\bkmkend AAAAAAAGSF}
00063 \par
{\bkmkstart AAAAAAAGSG}{\bkmkend AAAAAAAGSG}
00064 {\cf18 int}\par
{\bkmkstart AAAAAAAGSH}{\bkmkend AAAAAAAGSH}
00065 mxLineEdit::getMaxLength (){\cf17  const}\par
{\bkmkstart AAAAAAAGSI}{\bkmkend AAAAAAAGSI}
00066 {\cf17 }\{\par
{\bkmkstart AAAAAAAGSJ}{\bkmkend AAAAAAAGSJ}
00067         {\cf19 return} d_this->maxLength ();\par
{\bkmkstart AAAAAAAGSK}{\bkmkend AAAAAAAGSK}
00068 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxLineEdit_i.h\par \pard\plain 
{\tc\tcl2 \v mxLineEdit_i.h}
{\xe \v mxLineEdit_i.h}
{\bkmkstart AAAAAAAGSL}
{\bkmkend AAAAAAAGSL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGSM}{\bkmkend AAAAAAAGSM}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAGSN}{\bkmkend AAAAAAAGSN}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAGSO}{\bkmkend AAAAAAAGSO}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAGSP}{\bkmkend AAAAAAAGSP}
00004 {\cf20 // file:           mxLineEdit_i.h}\par
{\bkmkstart AAAAAAAGSQ}{\bkmkend AAAAAAAGSQ}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAGSR}{\bkmkend AAAAAAAGSR}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAGSS}{\bkmkend AAAAAAAGSS}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAGST}{\bkmkend AAAAAAAGST}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAGSU}{\bkmkend AAAAAAAGSU}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAGSV}{\bkmkend AAAAAAAGSV}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAGSW}{\bkmkend AAAAAAAGSW}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAGSX}{\bkmkend AAAAAAAGSX}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAGSY}{\bkmkend AAAAAAAGSY}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAGSZ}{\bkmkend AAAAAAAGSZ}
00014 {\cf21 #include <mx/mxLineEdit.h>}\par
{\bkmkstart AAAAAAAGTA}{\bkmkend AAAAAAAGTA}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAGTB}{\bkmkend AAAAAAAGTB}
00016 {\cf21 #include <QLineEdit>}\par
{\bkmkstart AAAAAAAGTC}{\bkmkend AAAAAAAGTC}
00017 \par
{\bkmkstart AAAAAAAGTD}{\bkmkend AAAAAAAGTD}
00018 \par
{\bkmkstart AAAAAAAGTE}{\bkmkend AAAAAAAGTE}
00019 \par
{\bkmkstart AAAAAAAGTF}{\bkmkend AAAAAAAGTF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGQU" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGQU" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i}}}
 : {\cf17 public} QLineEdit\par
{\bkmkstart AAAAAAAGTG}{\bkmkend AAAAAAAGTG}
00021 \{\par
{\bkmkstart AAAAAAAGTH}{\bkmkend AAAAAAAGTH}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAGTI}{\bkmkend AAAAAAAGTI}
00023 \par
{\bkmkstart AAAAAAAGTJ}{\bkmkend AAAAAAAGTJ}
00024         mxLineEdit *d_widget;\par
{\bkmkstart AAAAAAAGTK}{\bkmkend AAAAAAAGTK}
00025 \par
{\bkmkstart AAAAAAAGTL}{\bkmkend AAAAAAAGTL}
00026 {\cf17 public}:\par
{\bkmkstart AAAAAAAGTM}{\bkmkend AAAAAAAGTM}
00027         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGQU" }{}}{\fldrslt {\cs37\ul\cf2 mxLineEdit_i}}}
 (QWidget *parent, mxLineEdit *widget) : QLineEdit (parent)\par
{\bkmkstart AAAAAAAGTN}{\bkmkend AAAAAAAGTN}
00028         \{\par
{\bkmkstart AAAAAAAGTO}{\bkmkend AAAAAAAGTO}
00029                 d_widget = widget;\par
{\bkmkstart AAAAAAAGTP}{\bkmkend AAAAAAAGTP}
00030                 setFrame ({\cf17 true});\par
{\bkmkstart AAAAAAAGTQ}{\bkmkend AAAAAAAGTQ}
00031         \}\par
{\bkmkstart AAAAAAAGTR}{\bkmkend AAAAAAAGTR}
00032 \par
{\bkmkstart AAAAAAAGTS}{\bkmkend AAAAAAAGTS}
00033         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGQU" }{}}{\fldrslt {\cs37\ul\cf2 ~mxLineEdit_i}}}
 ()\par
{\bkmkstart AAAAAAAGTT}{\bkmkend AAAAAAAGTT}
00034         \{\par
{\bkmkstart AAAAAAAGTU}{\bkmkend AAAAAAAGTU}
00035         \}\par
{\bkmkstart AAAAAAAGTV}{\bkmkend AAAAAAAGTV}
00036 \par
{\bkmkstart AAAAAAAGTW}{\bkmkend AAAAAAAGTW}
00037 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAGTX}{\bkmkend AAAAAAAGTX}
00038         {\cf18 void} textChangedEvent ({\cf17 const} QString &text)\par
{\bkmkstart AAAAAAAGTY}{\bkmkend AAAAAAAGTY}
00039         \{\par
{\bkmkstart AAAAAAAGTZ}{\bkmkend AAAAAAAGTZ}
00040                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAGUA}{\bkmkend AAAAAAAGUA}
00041                 \{\par
{\bkmkstart AAAAAAAGUB}{\bkmkend AAAAAAAGUB}
00042                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAGUC}{\bkmkend AAAAAAAGUC}
00043                         mxEvent event;\par
{\bkmkstart AAAAAAAGUD}{\bkmkend AAAAAAAGUD}
00044                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAGUE}{\bkmkend AAAAAAAGUE}
00045                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAGUF}{\bkmkend AAAAAAAGUF}
00046                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAGUG}{\bkmkend AAAAAAAGUG}
00047                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAGUH}{\bkmkend AAAAAAAGUH}
00048                         \{\par
{\bkmkstart AAAAAAAGUI}{\bkmkend AAAAAAAGUI}
00049                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAGUJ}{\bkmkend AAAAAAAGUJ}
00050                                         {\cf19 break};\par
{\bkmkstart AAAAAAAGUK}{\bkmkend AAAAAAAGUK}
00051                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAGUL}{\bkmkend AAAAAAAGUL}
00052                         \}\par
{\bkmkstart AAAAAAAGUM}{\bkmkend AAAAAAAGUM}
00053                 \}\par
{\bkmkstart AAAAAAAGUN}{\bkmkend AAAAAAAGUN}
00054         \}\par
{\bkmkstart AAAAAAAGUO}{\bkmkend AAAAAAAGUO}
00055 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxListBox.cpp\par \pard\plain 
{\tc\tcl2 \v mxListBox.cpp}
{\xe \v mxListBox.cpp}
{\bkmkstart AAAAAAAGUP}
{\bkmkend AAAAAAAGUP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGUQ}{\bkmkend AAAAAAAGUQ}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAGUR}{\bkmkend AAAAAAAGUR}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAGUS}{\bkmkend AAAAAAAGUS}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAGUT}{\bkmkend AAAAAAAGUT}
00004 {\cf20 // file:           mxListBoxBox.cpp}\par
{\bkmkstart AAAAAAAGUU}{\bkmkend AAAAAAAGUU}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAGUV}{\bkmkend AAAAAAAGUV}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAGUW}{\bkmkend AAAAAAAGUW}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAGUX}{\bkmkend AAAAAAAGUX}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAGUY}{\bkmkend AAAAAAAGUY}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAGUZ}{\bkmkend AAAAAAAGUZ}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAGVA}{\bkmkend AAAAAAAGVA}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAGVB}{\bkmkend AAAAAAAGVB}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAGVC}{\bkmkend AAAAAAAGVC}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAGVD}{\bkmkend AAAAAAAGVD}
00014 {\cf21 #include "mxListBox_i.h"}\par
{\bkmkstart AAAAAAAGVE}{\bkmkend AAAAAAAGVE}
00015 \par
{\bkmkstart AAAAAAAGVF}{\bkmkend AAAAAAAGVF}
00016 \par
{\bkmkstart AAAAAAAGVG}{\bkmkend AAAAAAAGVG}
00017 \par
{\bkmkstart AAAAAAAGVH}{\bkmkend AAAAAAAGVH}
00018 mxListBox::mxListBox (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf18 int} {\cf18 id}, {\cf18 int}\par
{\bkmkstart AAAAAAAGVI}{\bkmkend AAAAAAAGVI}
00019 style)\par
{\bkmkstart AAAAAAAGVJ}{\bkmkend AAAAAAAGVJ}
00020 : mxWidget (parent, x, y, w, h)\par
{\bkmkstart AAAAAAAGVK}{\bkmkend AAAAAAAGVK}
00021 \{\par
{\bkmkstart AAAAAAAGVL}{\bkmkend AAAAAAAGVL}
00022         QWidget *p = 0;\par
{\bkmkstart AAAAAAAGVM}{\bkmkend AAAAAAAGVM}
00023         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAGVN}{\bkmkend AAAAAAAGVN}
00024                 p = (QWidget *) ((mxWidget *) parent)->getHandle ();\par
{\bkmkstart AAAAAAAGVO}{\bkmkend AAAAAAAGVO}
00025         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGVP" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAGVQ}{\bkmkend AAAAAAAGVQ}
00026 \par
{\bkmkstart AAAAAAAGVR}{\bkmkend AAAAAAAGVR}
00027         {\cf19 if} (style == MultiSelection)\par
{\bkmkstart AAAAAAAGVS}{\bkmkend AAAAAAAGVS}
00028                 d_this->setSelectionMode( QAbstractItemView::ExtendedSelection );\par
{\bkmkstart AAAAAAAGVT}{\bkmkend AAAAAAAGVT}
00029         d_this->connect (d_this, SIGNAL (itemSelectionChanged ()), d_this, SLOT (selectedEvent ()));\par
{\bkmkstart AAAAAAAGVU}{\bkmkend AAAAAAAGVU}
00030 \par
{\bkmkstart AAAAAAAGVV}{\bkmkend AAAAAAAGVV}
00031         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAGVW}{\bkmkend AAAAAAAGVW}
00032         setType (MX_LISTBOX);\par
{\bkmkstart AAAAAAAGVX}{\bkmkend AAAAAAAGVX}
00033         setParent (parent);\par
{\bkmkstart AAAAAAAGVY}{\bkmkend AAAAAAAGVY}
00034         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAGVZ}{\bkmkend AAAAAAAGVZ}
00035         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAGWA}{\bkmkend AAAAAAAGWA}
00036         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAGWB}{\bkmkend AAAAAAAGWB}
00037 \}\par
{\bkmkstart AAAAAAAGWC}{\bkmkend AAAAAAAGWC}
00038 \par
{\bkmkstart AAAAAAAGWD}{\bkmkend AAAAAAAGWD}
00039 \par
{\bkmkstart AAAAAAAGWE}{\bkmkend AAAAAAAGWE}
00040 \par
{\bkmkstart AAAAAAAGWF}{\bkmkend AAAAAAAGWF}
00041 mxListBox::~ mxListBox ()\par
{\bkmkstart AAAAAAAGWG}{\bkmkend AAAAAAAGWG}
00042 \{\par
{\bkmkstart AAAAAAAGWH}{\bkmkend AAAAAAAGWH}
00043         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAGWI}{\bkmkend AAAAAAAGWI}
00044 \}\par
{\bkmkstart AAAAAAAGWJ}{\bkmkend AAAAAAAGWJ}
00045 \par
{\bkmkstart AAAAAAAGWK}{\bkmkend AAAAAAAGWK}
00046 \par
{\bkmkstart AAAAAAAGWL}{\bkmkend AAAAAAAGWL}
00047 \par
{\bkmkstart AAAAAAAGWM}{\bkmkend AAAAAAAGWM}
00048 {\cf18 void}\par
{\bkmkstart AAAAAAAGWN}{\bkmkend AAAAAAAGWN}
00049 mxListBox::add ({\cf17 const} {\cf18 char} *item)\par
{\bkmkstart AAAAAAAGWO}{\bkmkend AAAAAAAGWO}
00050 \{\par
{\bkmkstart AAAAAAAGWP}{\bkmkend AAAAAAAGWP}
00051         d_this->addItem (item);\par
{\bkmkstart AAAAAAAGWQ}{\bkmkend AAAAAAAGWQ}
00052 \}\par
{\bkmkstart AAAAAAAGWR}{\bkmkend AAAAAAAGWR}
00053 \par
{\bkmkstart AAAAAAAGWS}{\bkmkend AAAAAAAGWS}
00054 \par
{\bkmkstart AAAAAAAGWT}{\bkmkend AAAAAAAGWT}
00055 \par
{\bkmkstart AAAAAAAGWU}{\bkmkend AAAAAAAGWU}
00056 {\cf18 void}\par
{\bkmkstart AAAAAAAGWV}{\bkmkend AAAAAAAGWV}
00057 mxListBox::select ({\cf18 int} index)\par
{\bkmkstart AAAAAAAGWW}{\bkmkend AAAAAAAGWW}
00058 \{\par
{\bkmkstart AAAAAAAGWX}{\bkmkend AAAAAAAGWX}
00059         QObject::disconnect (d_this, SIGNAL (itemSelectionChanged ()), d_this, SLOT (selectedEvent ()));\par
{\bkmkstart AAAAAAAGWY}{\bkmkend AAAAAAAGWY}
00060         d_this->setCurrentRow (index, QItemSelectionModel::Select);\par
{\bkmkstart AAAAAAAGWZ}{\bkmkend AAAAAAAGWZ}
00061         d_this->connect (d_this, SIGNAL (itemSelectionChanged ()), d_this, SLOT (selectedEvent ()));\par
{\bkmkstart AAAAAAAGXA}{\bkmkend AAAAAAAGXA}
00062 \}\par
{\bkmkstart AAAAAAAGXB}{\bkmkend AAAAAAAGXB}
00063 \par
{\bkmkstart AAAAAAAGXC}{\bkmkend AAAAAAAGXC}
00064 \par
{\bkmkstart AAAAAAAGXD}{\bkmkend AAAAAAAGXD}
00065 \par
{\bkmkstart AAAAAAAGXE}{\bkmkend AAAAAAAGXE}
00066 {\cf18 void}\par
{\bkmkstart AAAAAAAGXF}{\bkmkend AAAAAAAGXF}
00067 mxListBox::deselect ({\cf18 int} index)\par
{\bkmkstart AAAAAAAGXG}{\bkmkend AAAAAAAGXG}
00068 \{\par
{\bkmkstart AAAAAAAGXH}{\bkmkend AAAAAAAGXH}
00069         QObject::disconnect (d_this, SIGNAL (itemSelectionChanged ()), d_this, SLOT (selectedEvent ()));\par
{\bkmkstart AAAAAAAGXI}{\bkmkend AAAAAAAGXI}
00070         d_this->setCurrentRow (index, QItemSelectionModel::Deselect);\par
{\bkmkstart AAAAAAAGXJ}{\bkmkend AAAAAAAGXJ}
00071         d_this->connect (d_this, SIGNAL (itemSelectionChanged ()), d_this, SLOT (selectedEvent ()));\par
{\bkmkstart AAAAAAAGXK}{\bkmkend AAAAAAAGXK}
00072 \}\par
{\bkmkstart AAAAAAAGXL}{\bkmkend AAAAAAAGXL}
00073 \par
{\bkmkstart AAAAAAAGXM}{\bkmkend AAAAAAAGXM}
00074 \par
{\bkmkstart AAAAAAAGXN}{\bkmkend AAAAAAAGXN}
00075 \par
{\bkmkstart AAAAAAAGXO}{\bkmkend AAAAAAAGXO}
00076 {\cf18 void}\par
{\bkmkstart AAAAAAAGXP}{\bkmkend AAAAAAAGXP}
00077 mxListBox::remove ({\cf18 int} index)\par
{\bkmkstart AAAAAAAGXQ}{\bkmkend AAAAAAAGXQ}
00078 \{\par
{\bkmkstart AAAAAAAGXR}{\bkmkend AAAAAAAGXR}
00079         d_this->removeItemWidget (d_this->takeItem(index));\par
{\bkmkstart AAAAAAAGXS}{\bkmkend AAAAAAAGXS}
00080 \}\par
{\bkmkstart AAAAAAAGXT}{\bkmkend AAAAAAAGXT}
00081 \par
{\bkmkstart AAAAAAAGXU}{\bkmkend AAAAAAAGXU}
00082 \par
{\bkmkstart AAAAAAAGXV}{\bkmkend AAAAAAAGXV}
00083 \par
{\bkmkstart AAAAAAAGXW}{\bkmkend AAAAAAAGXW}
00084 {\cf18 void}\par
{\bkmkstart AAAAAAAGXX}{\bkmkend AAAAAAAGXX}
00085 mxListBox::removeAll ()\par
{\bkmkstart AAAAAAAGXY}{\bkmkend AAAAAAAGXY}
00086 \{\par
{\bkmkstart AAAAAAAGXZ}{\bkmkend AAAAAAAGXZ}
00087         d_this->clear ();\par
{\bkmkstart AAAAAAAGYA}{\bkmkend AAAAAAAGYA}
00088 \}\par
{\bkmkstart AAAAAAAGYB}{\bkmkend AAAAAAAGYB}
00089 \par
{\bkmkstart AAAAAAAGYC}{\bkmkend AAAAAAAGYC}
00090 \par
{\bkmkstart AAAAAAAGYD}{\bkmkend AAAAAAAGYD}
00091 {\cf18 int}\par
{\bkmkstart AAAAAAAGYE}{\bkmkend AAAAAAAGYE}
00092 mxListBox::getItemCount (){\cf17  const}\par
{\bkmkstart AAAAAAAGYF}{\bkmkend AAAAAAAGYF}
00093 {\cf17 }\{\par
{\bkmkstart AAAAAAAGYG}{\bkmkend AAAAAAAGYG}
00094         {\cf19 return} ({\cf18 int}) d_this->count ();\par
{\bkmkstart AAAAAAAGYH}{\bkmkend AAAAAAAGYH}
00095 \}\par
{\bkmkstart AAAAAAAGYI}{\bkmkend AAAAAAAGYI}
00096 \par
{\bkmkstart AAAAAAAGYJ}{\bkmkend AAAAAAAGYJ}
00097 \par
{\bkmkstart AAAAAAAGYK}{\bkmkend AAAAAAAGYK}
00098 \par
{\bkmkstart AAAAAAAGYL}{\bkmkend AAAAAAAGYL}
00099 {\cf18 int}\par
{\bkmkstart AAAAAAAGYM}{\bkmkend AAAAAAAGYM}
00100 mxListBox::getSelectedIndex (){\cf17  const}\par
{\bkmkstart AAAAAAAGYN}{\bkmkend AAAAAAAGYN}
00101 {\cf17 }\{\par
{\bkmkstart AAAAAAAGYO}{\bkmkend AAAAAAAGYO}
00102         {\cf19 return} d_this->currentRow ();\par
{\bkmkstart AAAAAAAGYP}{\bkmkend AAAAAAAGYP}
00103 \}\par
{\bkmkstart AAAAAAAGYQ}{\bkmkend AAAAAAAGYQ}
00104 \par
{\bkmkstart AAAAAAAGYR}{\bkmkend AAAAAAAGYR}
00105 \par
{\bkmkstart AAAAAAAGYS}{\bkmkend AAAAAAAGYS}
00106 \par
{\bkmkstart AAAAAAAGYT}{\bkmkend AAAAAAAGYT}
00107 {\cf18 bool}\par
{\bkmkstart AAAAAAAGYU}{\bkmkend AAAAAAAGYU}
00108 mxListBox::isSelected ({\cf18 int} index){\cf17  const}\par
{\bkmkstart AAAAAAAGYV}{\bkmkend AAAAAAAGYV}
00109 {\cf17 }\{\par
{\bkmkstart AAAAAAAGYW}{\bkmkend AAAAAAAGYW}
00110         {\cf19 return} d_this->takeItem (index)->isSelected();\par
{\bkmkstart AAAAAAAGYX}{\bkmkend AAAAAAAGYX}
00111 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxListBox_i.h\par \pard\plain 
{\tc\tcl2 \v mxListBox_i.h}
{\xe \v mxListBox_i.h}
{\bkmkstart AAAAAAAGYY}
{\bkmkend AAAAAAAGYY}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAGYZ}{\bkmkend AAAAAAAGYZ}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAGZA}{\bkmkend AAAAAAAGZA}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAGZB}{\bkmkend AAAAAAAGZB}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAGZC}{\bkmkend AAAAAAAGZC}
00004 {\cf20 // file:           mxListBox_i.h}\par
{\bkmkstart AAAAAAAGZD}{\bkmkend AAAAAAAGZD}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAGZE}{\bkmkend AAAAAAAGZE}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAGZF}{\bkmkend AAAAAAAGZF}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAGZG}{\bkmkend AAAAAAAGZG}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAGZH}{\bkmkend AAAAAAAGZH}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAGZI}{\bkmkend AAAAAAAGZI}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAGZJ}{\bkmkend AAAAAAAGZJ}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAGZK}{\bkmkend AAAAAAAGZK}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAGZL}{\bkmkend AAAAAAAGZL}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAGZM}{\bkmkend AAAAAAAGZM}
00014 {\cf21 #include <mx/mxListBox.h>}\par
{\bkmkstart AAAAAAAGZN}{\bkmkend AAAAAAAGZN}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAGZO}{\bkmkend AAAAAAAGZO}
00016 {\cf21 #include <QListWidget>}\par
{\bkmkstart AAAAAAAGZP}{\bkmkend AAAAAAAGZP}
00017 \par
{\bkmkstart AAAAAAAGZQ}{\bkmkend AAAAAAAGZQ}
00018 \par
{\bkmkstart AAAAAAAGZR}{\bkmkend AAAAAAAGZR}
00019 \par
{\bkmkstart AAAAAAAGZS}{\bkmkend AAAAAAAGZS}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGVP" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGVP" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i}}}
 : {\cf17 public} QListWidget\par
{\bkmkstart AAAAAAAGZT}{\bkmkend AAAAAAAGZT}
00021 \{\par
{\bkmkstart AAAAAAAGZU}{\bkmkend AAAAAAAGZU}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAGZV}{\bkmkend AAAAAAAGZV}
00023         mxListBox *d_widget;\par
{\bkmkstart AAAAAAAGZW}{\bkmkend AAAAAAAGZW}
00024 \par
{\bkmkstart AAAAAAAGZX}{\bkmkend AAAAAAAGZX}
00025 {\cf17 public}:\par
{\bkmkstart AAAAAAAGZY}{\bkmkend AAAAAAAGZY}
00026         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGVP" }{}}{\fldrslt {\cs37\ul\cf2 mxListBox_i}}}
 (QWidget *parent, mxListBox *widget) : QListWidget (parent)\par
{\bkmkstart AAAAAAAGZZ}{\bkmkend AAAAAAAGZZ}
00027         \{\par
{\bkmkstart AAAAAAAHAA}{\bkmkend AAAAAAAHAA}
00028                 d_widget = widget;\par
{\bkmkstart AAAAAAAHAB}{\bkmkend AAAAAAAHAB}
00029         \}\par
{\bkmkstart AAAAAAAHAC}{\bkmkend AAAAAAAHAC}
00030 \par
{\bkmkstart AAAAAAAHAD}{\bkmkend AAAAAAAHAD}
00031         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGVP" }{}}{\fldrslt {\cs37\ul\cf2 ~mxListBox_i}}}
 ()\par
{\bkmkstart AAAAAAAHAE}{\bkmkend AAAAAAAHAE}
00032         \{\par
{\bkmkstart AAAAAAAHAF}{\bkmkend AAAAAAAHAF}
00033         \}\par
{\bkmkstart AAAAAAAHAG}{\bkmkend AAAAAAAHAG}
00034 \par
{\bkmkstart AAAAAAAHAH}{\bkmkend AAAAAAAHAH}
00035 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAHAI}{\bkmkend AAAAAAAHAI}
00036         {\cf18 void} selectedEvent ()\par
{\bkmkstart AAAAAAAHAJ}{\bkmkend AAAAAAAHAJ}
00037         \{\par
{\bkmkstart AAAAAAAHAK}{\bkmkend AAAAAAAHAK}
00038                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAHAL}{\bkmkend AAAAAAAHAL}
00039                 \{\par
{\bkmkstart AAAAAAAHAM}{\bkmkend AAAAAAAHAM}
00040                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAHAN}{\bkmkend AAAAAAAHAN}
00041                         mxEvent event;\par
{\bkmkstart AAAAAAAHAO}{\bkmkend AAAAAAAHAO}
00042                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAHAP}{\bkmkend AAAAAAAHAP}
00043                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAHAQ}{\bkmkend AAAAAAAHAQ}
00044                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAHAR}{\bkmkend AAAAAAAHAR}
00045                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAHAS}{\bkmkend AAAAAAAHAS}
00046                         \{\par
{\bkmkstart AAAAAAAHAT}{\bkmkend AAAAAAAHAT}
00047                                 {\cf19 if} (d_widget->getParent ()->handleEvent (&event))\par
{\bkmkstart AAAAAAAHAU}{\bkmkend AAAAAAAHAU}
00048                                         {\cf19 break};\par
{\bkmkstart AAAAAAAHAV}{\bkmkend AAAAAAAHAV}
00049                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAHAW}{\bkmkend AAAAAAAHAW}
00050                         \}\par
{\bkmkstart AAAAAAAHAX}{\bkmkend AAAAAAAHAX}
00051                 \}\par
{\bkmkstart AAAAAAAHAY}{\bkmkend AAAAAAAHAY}
00052         \}\par
{\bkmkstart AAAAAAAHAZ}{\bkmkend AAAAAAAHAZ}
00053 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxMenu.cpp\par \pard\plain 
{\tc\tcl2 \v mxMenu.cpp}
{\xe \v mxMenu.cpp}
{\bkmkstart AAAAAAAHBA}
{\bkmkend AAAAAAAHBA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAHBB}{\bkmkend AAAAAAAHBB}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAHBC}{\bkmkend AAAAAAAHBC}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAHBD}{\bkmkend AAAAAAAHBD}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAHBE}{\bkmkend AAAAAAAHBE}
00004 {\cf20 // file:           mxMenu.cpp}\par
{\bkmkstart AAAAAAAHBF}{\bkmkend AAAAAAAHBF}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAHBG}{\bkmkend AAAAAAAHBG}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAHBH}{\bkmkend AAAAAAAHBH}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAHBI}{\bkmkend AAAAAAAHBI}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAHBJ}{\bkmkend AAAAAAAHBJ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAHBK}{\bkmkend AAAAAAAHBK}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAHBL}{\bkmkend AAAAAAAHBL}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAHBM}{\bkmkend AAAAAAAHBM}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAHBN}{\bkmkend AAAAAAAHBN}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAHBO}{\bkmkend AAAAAAAHBO}
00014 {\cf21 #include <mx/mxMenu.h>}\par
{\bkmkstart AAAAAAAHBP}{\bkmkend AAAAAAAHBP}
00015 {\cf21 #include <QMenu>}\par
{\bkmkstart AAAAAAAHBQ}{\bkmkend AAAAAAAHBQ}
00016 \par
{\bkmkstart AAAAAAAHBR}{\bkmkend AAAAAAAHBR}
00017 {\cf17 extern} QMap<int, QAction*> g_actionList;\par
{\bkmkstart AAAAAAAHBS}{\bkmkend AAAAAAAHBS}
00018 \par
{\bkmkstart AAAAAAAHBT}{\bkmkend AAAAAAAHBT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBU" }{}}{\fldrslt {\cs37\ul\cf2 00019}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBU" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu_i}}}
 : {\cf17 public} QMenu\par
{\bkmkstart AAAAAAAHBV}{\bkmkend AAAAAAAHBV}
00020 \{\par
{\bkmkstart AAAAAAAHBW}{\bkmkend AAAAAAAHBW}
00021         mxMenu *d_widget;\par
{\bkmkstart AAAAAAAHBX}{\bkmkend AAAAAAAHBX}
00022 \par
{\bkmkstart AAAAAAAHBY}{\bkmkend AAAAAAAHBY}
00023 {\cf17 public}:\par
{\bkmkstart AAAAAAAHBZ}{\bkmkend AAAAAAAHBZ}
00024         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBU" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu_i}}}
 (mxMenu *menu) : QMenu ()\par
{\bkmkstart AAAAAAAHCA}{\bkmkend AAAAAAAHCA}
00025         \{\par
{\bkmkstart AAAAAAAHCB}{\bkmkend AAAAAAAHCB}
00026                 d_widget = menu;\par
{\bkmkstart AAAAAAAHCC}{\bkmkend AAAAAAAHCC}
00027         \}\par
{\bkmkstart AAAAAAAHCD}{\bkmkend AAAAAAAHCD}
00028 \par
{\bkmkstart AAAAAAAHCE}{\bkmkend AAAAAAAHCE}
00029         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBU" }{}}{\fldrslt {\cs37\ul\cf2 ~mxMenu_i}}}
 ()\par
{\bkmkstart AAAAAAAHCF}{\bkmkend AAAAAAAHCF}
00030         \{\par
{\bkmkstart AAAAAAAHCG}{\bkmkend AAAAAAAHCG}
00031         \}\par
{\bkmkstart AAAAAAAHCH}{\bkmkend AAAAAAAHCH}
00032 \};\par
{\bkmkstart AAAAAAAHCI}{\bkmkend AAAAAAAHCI}
00033 \par
{\bkmkstart AAAAAAAHCJ}{\bkmkend AAAAAAAHCJ}
00034 \par
{\bkmkstart AAAAAAAHCK}{\bkmkend AAAAAAAHCK}
00035 \par
{\bkmkstart AAAAAAAHCL}{\bkmkend AAAAAAAHCL}
00036 mxMenu::mxMenu ()\par
{\bkmkstart AAAAAAAHCM}{\bkmkend AAAAAAAHCM}
00037 : mxWidget (0, 0, 0, 0, 0)\par
{\bkmkstart AAAAAAAHCN}{\bkmkend AAAAAAAHCN}
00038 \{\par
{\bkmkstart AAAAAAAHCO}{\bkmkend AAAAAAAHCO}
00039         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHBU" }{}}{\fldrslt {\cs37\ul\cf2 mxMenu_i}}}
 ({\cf17 this});\par
{\bkmkstart AAAAAAAHCP}{\bkmkend AAAAAAAHCP}
00040 \par
{\bkmkstart AAAAAAAHCQ}{\bkmkend AAAAAAAHCQ}
00041         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAHCR}{\bkmkend AAAAAAAHCR}
00042         setType (MX_MENU);\par
{\bkmkstart AAAAAAAHCS}{\bkmkend AAAAAAAHCS}
00043 \}\par
{\bkmkstart AAAAAAAHCT}{\bkmkend AAAAAAAHCT}
00044 \par
{\bkmkstart AAAAAAAHCU}{\bkmkend AAAAAAAHCU}
00045 \par
{\bkmkstart AAAAAAAHCV}{\bkmkend AAAAAAAHCV}
00046 \par
{\bkmkstart AAAAAAAHCW}{\bkmkend AAAAAAAHCW}
00047 mxMenu::~mxMenu ()\par
{\bkmkstart AAAAAAAHCX}{\bkmkend AAAAAAAHCX}
00048 \{\par
{\bkmkstart AAAAAAAHCY}{\bkmkend AAAAAAAHCY}
00049         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAHCZ}{\bkmkend AAAAAAAHCZ}
00050 \}\par
{\bkmkstart AAAAAAAHDA}{\bkmkend AAAAAAAHDA}
00051 \par
{\bkmkstart AAAAAAAHDB}{\bkmkend AAAAAAAHDB}
00052 \par
{\bkmkstart AAAAAAAHDC}{\bkmkend AAAAAAAHDC}
00053 \par
{\bkmkstart AAAAAAAHDD}{\bkmkend AAAAAAAHDD}
00054 {\cf18 void}\par
{\bkmkstart AAAAAAAHDE}{\bkmkend AAAAAAAHDE}
00055 mxMenu::add ({\cf17 const} {\cf18 char} *item, {\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAHDF}{\bkmkend AAAAAAAHDF}
00056 \{\par
{\bkmkstart AAAAAAAHDG}{\bkmkend AAAAAAAHDG}
00057         g_actionList[id] = d_this->addAction (item);\par
{\bkmkstart AAAAAAAHDH}{\bkmkend AAAAAAAHDH}
00058 \}\par
{\bkmkstart AAAAAAAHDI}{\bkmkend AAAAAAAHDI}
00059 \par
{\bkmkstart AAAAAAAHDJ}{\bkmkend AAAAAAAHDJ}
00060 \par
{\bkmkstart AAAAAAAHDK}{\bkmkend AAAAAAAHDK}
00061 \par
{\bkmkstart AAAAAAAHDL}{\bkmkend AAAAAAAHDL}
00062 {\cf18 void}\par
{\bkmkstart AAAAAAAHDM}{\bkmkend AAAAAAAHDM}
00063 mxMenu::addMenu ({\cf17 const} {\cf18 char} *item, mxMenu *menu)\par
{\bkmkstart AAAAAAAHDN}{\bkmkend AAAAAAAHDN}
00064 \{\par
{\bkmkstart AAAAAAAHDO}{\bkmkend AAAAAAAHDO}
00065         QMenu *_menu = (QMenu*)menu->getHandle ();\par
{\bkmkstart AAAAAAAHDP}{\bkmkend AAAAAAAHDP}
00066         _menu->setTitle (item);\par
{\bkmkstart AAAAAAAHDQ}{\bkmkend AAAAAAAHDQ}
00067         d_this->addMenu (_menu);\par
{\bkmkstart AAAAAAAHDR}{\bkmkend AAAAAAAHDR}
00068 \}\par
{\bkmkstart AAAAAAAHDS}{\bkmkend AAAAAAAHDS}
00069 \par
{\bkmkstart AAAAAAAHDT}{\bkmkend AAAAAAAHDT}
00070 \par
{\bkmkstart AAAAAAAHDU}{\bkmkend AAAAAAAHDU}
00071 \par
{\bkmkstart AAAAAAAHDV}{\bkmkend AAAAAAAHDV}
00072 {\cf18 void}\par
{\bkmkstart AAAAAAAHDW}{\bkmkend AAAAAAAHDW}
00073 mxMenu::addSeparator ()\par
{\bkmkstart AAAAAAAHDX}{\bkmkend AAAAAAAHDX}
00074 \{\par
{\bkmkstart AAAAAAAHDY}{\bkmkend AAAAAAAHDY}
00075         d_this->addSeparator ();\par
{\bkmkstart AAAAAAAHDZ}{\bkmkend AAAAAAAHDZ}
00076 \}\par
{\bkmkstart AAAAAAAHEA}{\bkmkend AAAAAAAHEA}
00077 \par
{\bkmkstart AAAAAAAHEB}{\bkmkend AAAAAAAHEB}
00078 \par
{\bkmkstart AAAAAAAHEC}{\bkmkend AAAAAAAHEC}
00079 \par
{\bkmkstart AAAAAAAHED}{\bkmkend AAAAAAAHED}
00080 {\cf18 void}\par
{\bkmkstart AAAAAAAHEE}{\bkmkend AAAAAAAHEE}
00081 mxMenu::setEnabled ({\cf18 int} {\cf18 id}, {\cf18 bool} b)\par
{\bkmkstart AAAAAAAHEF}{\bkmkend AAAAAAAHEF}
00082 \{\par
{\bkmkstart AAAAAAAHEG}{\bkmkend AAAAAAAHEG}
00083         g_actionList[id]->setEnabled (b);\par
{\bkmkstart AAAAAAAHEH}{\bkmkend AAAAAAAHEH}
00084 \}\par
{\bkmkstart AAAAAAAHEI}{\bkmkend AAAAAAAHEI}
00085 \par
{\bkmkstart AAAAAAAHEJ}{\bkmkend AAAAAAAHEJ}
00086 \par
{\bkmkstart AAAAAAAHEK}{\bkmkend AAAAAAAHEK}
00087 \par
{\bkmkstart AAAAAAAHEL}{\bkmkend AAAAAAAHEL}
00088 {\cf18 void}\par
{\bkmkstart AAAAAAAHEM}{\bkmkend AAAAAAAHEM}
00089 mxMenu::setChecked ({\cf18 int} {\cf18 id}, {\cf18 bool} b)\par
{\bkmkstart AAAAAAAHEN}{\bkmkend AAAAAAAHEN}
00090 \{\par
{\bkmkstart AAAAAAAHEO}{\bkmkend AAAAAAAHEO}
00091         g_actionList[id]->setCheckable ({\cf17 true});\par
{\bkmkstart AAAAAAAHEP}{\bkmkend AAAAAAAHEP}
00092         g_actionList[id]->setChecked (b);\par
{\bkmkstart AAAAAAAHEQ}{\bkmkend AAAAAAAHEQ}
00093 \}\par
{\bkmkstart AAAAAAAHER}{\bkmkend AAAAAAAHER}
00094 \par
{\bkmkstart AAAAAAAHES}{\bkmkend AAAAAAAHES}
00095 \par
{\bkmkstart AAAAAAAHET}{\bkmkend AAAAAAAHET}
00096 \par
{\bkmkstart AAAAAAAHEU}{\bkmkend AAAAAAAHEU}
00097 {\cf18 bool}\par
{\bkmkstart AAAAAAAHEV}{\bkmkend AAAAAAAHEV}
00098 mxMenu::isEnabled ({\cf18 int} {\cf18 id}){\cf17  const}\par
{\bkmkstart AAAAAAAHEW}{\bkmkend AAAAAAAHEW}
00099 {\cf17 }\{\par
{\bkmkstart AAAAAAAHEX}{\bkmkend AAAAAAAHEX}
00100         {\cf19 return} g_actionList[id]->isEnabled ();\par
{\bkmkstart AAAAAAAHEY}{\bkmkend AAAAAAAHEY}
00101 \}\par
{\bkmkstart AAAAAAAHEZ}{\bkmkend AAAAAAAHEZ}
00102 \par
{\bkmkstart AAAAAAAHFA}{\bkmkend AAAAAAAHFA}
00103 \par
{\bkmkstart AAAAAAAHFB}{\bkmkend AAAAAAAHFB}
00104 \par
{\bkmkstart AAAAAAAHFC}{\bkmkend AAAAAAAHFC}
00105 {\cf18 bool}\par
{\bkmkstart AAAAAAAHFD}{\bkmkend AAAAAAAHFD}
00106 mxMenu::isChecked ({\cf18 int} {\cf18 id}){\cf17  const}\par
{\bkmkstart AAAAAAAHFE}{\bkmkend AAAAAAAHFE}
00107 {\cf17 }\{\par
{\bkmkstart AAAAAAAHFF}{\bkmkend AAAAAAAHFF}
00108         {\cf19 return} g_actionList[id]->isChecked ();\par
{\bkmkstart AAAAAAAHFG}{\bkmkend AAAAAAAHFG}
00109 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxMenuBar.cpp\par \pard\plain 
{\tc\tcl2 \v mxMenuBar.cpp}
{\xe \v mxMenuBar.cpp}
{\bkmkstart AAAAAAAHFH}
{\bkmkend AAAAAAAHFH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAHFI}{\bkmkend AAAAAAAHFI}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAHFJ}{\bkmkend AAAAAAAHFJ}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAHFK}{\bkmkend AAAAAAAHFK}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAHFL}{\bkmkend AAAAAAAHFL}
00004 {\cf20 // file:           mxMenuBar.cpp}\par
{\bkmkstart AAAAAAAHFM}{\bkmkend AAAAAAAHFM}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAHFN}{\bkmkend AAAAAAAHFN}
00006 {\cf20 // last modified:  May 04 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAHFO}{\bkmkend AAAAAAAHFO}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAHFP}{\bkmkend AAAAAAAHFP}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAHFQ}{\bkmkend AAAAAAAHFQ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAHFR}{\bkmkend AAAAAAAHFR}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAHFS}{\bkmkend AAAAAAAHFS}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAHFT}{\bkmkend AAAAAAAHFT}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAHFU}{\bkmkend AAAAAAAHFU}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAHFV}{\bkmkend AAAAAAAHFV}
00014 {\cf21 #include "mxMenuBar_i.h"}\par
{\bkmkstart AAAAAAAHFW}{\bkmkend AAAAAAAHFW}
00015 \par
{\bkmkstart AAAAAAAHFX}{\bkmkend AAAAAAAHFX}
00016 QMap<int, QAction*> g_actionList;\par
{\bkmkstart AAAAAAAHFY}{\bkmkend AAAAAAAHFY}
00017 \par
{\bkmkstart AAAAAAAHFZ}{\bkmkend AAAAAAAHFZ}
00018 mxMenuBar::mxMenuBar (mxWindow *parent)\par
{\bkmkstart AAAAAAAHGA}{\bkmkend AAAAAAAHGA}
00019 : mxWidget (parent, 0, 0, 0, 0)\par
{\bkmkstart AAAAAAAHGB}{\bkmkend AAAAAAAHGB}
00020 \{\par
{\bkmkstart AAAAAAAHGC}{\bkmkend AAAAAAAHGC}
00021         QWidget *p = {\cf17 nullptr};\par
{\bkmkstart AAAAAAAHGD}{\bkmkend AAAAAAAHGD}
00022         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAHGE}{\bkmkend AAAAAAAHGE}
00023                 p = (QWidget *) ((mxWidget *) parent)->getHandle ();\par
{\bkmkstart AAAAAAAHGF}{\bkmkend AAAAAAAHGF}
00024 \par
{\bkmkstart AAAAAAAHGG}{\bkmkend AAAAAAAHGG}
00025         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHGH" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAHGI}{\bkmkend AAAAAAAHGI}
00026         d_this->connect (d_this, SIGNAL (triggered (QAction*)), d_this, SLOT (activatedEvent (QAction*)));\par
{\bkmkstart AAAAAAAHGJ}{\bkmkend AAAAAAAHGJ}
00027 \par
{\bkmkstart AAAAAAAHGK}{\bkmkend AAAAAAAHGK}
00028         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAHGL}{\bkmkend AAAAAAAHGL}
00029         setType (MX_MENUBAR);\par
{\bkmkstart AAAAAAAHGM}{\bkmkend AAAAAAAHGM}
00030         setParent (parent);\par
{\bkmkstart AAAAAAAHGN}{\bkmkend AAAAAAAHGN}
00031         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAHGO}{\bkmkend AAAAAAAHGO}
00032 \}\par
{\bkmkstart AAAAAAAHGP}{\bkmkend AAAAAAAHGP}
00033 \par
{\bkmkstart AAAAAAAHGQ}{\bkmkend AAAAAAAHGQ}
00034 \par
{\bkmkstart AAAAAAAHGR}{\bkmkend AAAAAAAHGR}
00035 \par
{\bkmkstart AAAAAAAHGS}{\bkmkend AAAAAAAHGS}
00036 mxMenuBar::~mxMenuBar ()\par
{\bkmkstart AAAAAAAHGT}{\bkmkend AAAAAAAHGT}
00037 \{\par
{\bkmkstart AAAAAAAHGU}{\bkmkend AAAAAAAHGU}
00038         g_actionList.clear ();\par
{\bkmkstart AAAAAAAHGV}{\bkmkend AAAAAAAHGV}
00039         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAHGW}{\bkmkend AAAAAAAHGW}
00040 \}\par
{\bkmkstart AAAAAAAHGX}{\bkmkend AAAAAAAHGX}
00041 \par
{\bkmkstart AAAAAAAHGY}{\bkmkend AAAAAAAHGY}
00042 \par
{\bkmkstart AAAAAAAHGZ}{\bkmkend AAAAAAAHGZ}
00043 \par
{\bkmkstart AAAAAAAHHA}{\bkmkend AAAAAAAHHA}
00044 {\cf18 void}\par
{\bkmkstart AAAAAAAHHB}{\bkmkend AAAAAAAHHB}
00045 mxMenuBar::addMenu ({\cf17 const} {\cf18 char} *item, mxMenu *menu)\par
{\bkmkstart AAAAAAAHHC}{\bkmkend AAAAAAAHHC}
00046 \{\par
{\bkmkstart AAAAAAAHHD}{\bkmkend AAAAAAAHHD}
00047         QMenu *_menu = (QMenu *) ((mxWidget *) menu)->getHandle ();\par
{\bkmkstart AAAAAAAHHE}{\bkmkend AAAAAAAHHE}
00048         _menu->setTitle (item);\par
{\bkmkstart AAAAAAAHHF}{\bkmkend AAAAAAAHHF}
00049         d_this->addMenu (_menu);\par
{\bkmkstart AAAAAAAHHG}{\bkmkend AAAAAAAHHG}
00050 \}\par
{\bkmkstart AAAAAAAHHH}{\bkmkend AAAAAAAHHH}
00051 \par
{\bkmkstart AAAAAAAHHI}{\bkmkend AAAAAAAHHI}
00052 \par
{\bkmkstart AAAAAAAHHJ}{\bkmkend AAAAAAAHHJ}
00053 \par
{\bkmkstart AAAAAAAHHK}{\bkmkend AAAAAAAHHK}
00054 {\cf18 void}\par
{\bkmkstart AAAAAAAHHL}{\bkmkend AAAAAAAHHL}
00055 mxMenuBar::setEnabled ({\cf18 int} {\cf18 id}, {\cf18 bool} b)\par
{\bkmkstart AAAAAAAHHM}{\bkmkend AAAAAAAHHM}
00056 \{\par
{\bkmkstart AAAAAAAHHN}{\bkmkend AAAAAAAHHN}
00057         g_actionList[id]->setEnabled (b);\par
{\bkmkstart AAAAAAAHHO}{\bkmkend AAAAAAAHHO}
00058 \}\par
{\bkmkstart AAAAAAAHHP}{\bkmkend AAAAAAAHHP}
00059 \par
{\bkmkstart AAAAAAAHHQ}{\bkmkend AAAAAAAHHQ}
00060 \par
{\bkmkstart AAAAAAAHHR}{\bkmkend AAAAAAAHHR}
00061 \par
{\bkmkstart AAAAAAAHHS}{\bkmkend AAAAAAAHHS}
00062 {\cf18 void}\par
{\bkmkstart AAAAAAAHHT}{\bkmkend AAAAAAAHHT}
00063 mxMenuBar::setChecked ({\cf18 int} {\cf18 id}, {\cf18 bool} b)\par
{\bkmkstart AAAAAAAHHU}{\bkmkend AAAAAAAHHU}
00064 \{\par
{\bkmkstart AAAAAAAHHV}{\bkmkend AAAAAAAHHV}
00065         g_actionList[id]->setCheckable ({\cf17 true});\par
{\bkmkstart AAAAAAAHHW}{\bkmkend AAAAAAAHHW}
00066         g_actionList[id]->setChecked (b);\par
{\bkmkstart AAAAAAAHHX}{\bkmkend AAAAAAAHHX}
00067 \}\par
{\bkmkstart AAAAAAAHHY}{\bkmkend AAAAAAAHHY}
00068 \par
{\bkmkstart AAAAAAAHHZ}{\bkmkend AAAAAAAHHZ}
00069 \par
{\bkmkstart AAAAAAAHIA}{\bkmkend AAAAAAAHIA}
00070 \par
{\bkmkstart AAAAAAAHIB}{\bkmkend AAAAAAAHIB}
00071 {\cf18 void}\par
{\bkmkstart AAAAAAAHIC}{\bkmkend AAAAAAAHIC}
00072 mxMenuBar::modify ({\cf18 int} {\cf18 id}, {\cf18 int} newId, {\cf17 const} {\cf18 char} *newItem)\par
{\bkmkstart AAAAAAAHID}{\bkmkend AAAAAAAHID}
00073 \{\par
{\bkmkstart AAAAAAAHIE}{\bkmkend AAAAAAAHIE}
00074         {\cf20 // probably, id will be always the same}\par
{\bkmkstart AAAAAAAHIF}{\bkmkend AAAAAAAHIF}
00075         QAction *action = g_actionList.value ({\cf18 id});\par
{\bkmkstart AAAAAAAHIG}{\bkmkend AAAAAAAHIG}
00076         action->setText (newItem);\par
{\bkmkstart AAAAAAAHIH}{\bkmkend AAAAAAAHIH}
00077         {\cf20 // g_actionList[newId] = action;}\par
{\bkmkstart AAAAAAAHII}{\bkmkend AAAAAAAHII}
00078 \}\par
{\bkmkstart AAAAAAAHIJ}{\bkmkend AAAAAAAHIJ}
00079 \par
{\bkmkstart AAAAAAAHIK}{\bkmkend AAAAAAAHIK}
00080 \par
{\bkmkstart AAAAAAAHIL}{\bkmkend AAAAAAAHIL}
00081 \par
{\bkmkstart AAAAAAAHIM}{\bkmkend AAAAAAAHIM}
00082 {\cf18 bool}\par
{\bkmkstart AAAAAAAHIN}{\bkmkend AAAAAAAHIN}
00083 mxMenuBar::isEnabled ({\cf18 int} {\cf18 id}){\cf17  const}\par
{\bkmkstart AAAAAAAHIO}{\bkmkend AAAAAAAHIO}
00084 {\cf17 }\{\par
{\bkmkstart AAAAAAAHIP}{\bkmkend AAAAAAAHIP}
00085         {\cf19 return} g_actionList[id]->isEnabled ();\par
{\bkmkstart AAAAAAAHIQ}{\bkmkend AAAAAAAHIQ}
00086 \}\par
{\bkmkstart AAAAAAAHIR}{\bkmkend AAAAAAAHIR}
00087 \par
{\bkmkstart AAAAAAAHIS}{\bkmkend AAAAAAAHIS}
00088 \par
{\bkmkstart AAAAAAAHIT}{\bkmkend AAAAAAAHIT}
00089 \par
{\bkmkstart AAAAAAAHIU}{\bkmkend AAAAAAAHIU}
00090 {\cf18 bool}\par
{\bkmkstart AAAAAAAHIV}{\bkmkend AAAAAAAHIV}
00091 mxMenuBar::isChecked ({\cf18 int} {\cf18 id}){\cf17  const}\par
{\bkmkstart AAAAAAAHIW}{\bkmkend AAAAAAAHIW}
00092 {\cf17 }\{\par
{\bkmkstart AAAAAAAHIX}{\bkmkend AAAAAAAHIX}
00093         {\cf19 return} g_actionList[id]->isChecked ();\par
{\bkmkstart AAAAAAAHIY}{\bkmkend AAAAAAAHIY}
00094 \}\par
{\bkmkstart AAAAAAAHIZ}{\bkmkend AAAAAAAHIZ}
00095 \par
{\bkmkstart AAAAAAAHJA}{\bkmkend AAAAAAAHJA}
00096 \par
{\bkmkstart AAAAAAAHJB}{\bkmkend AAAAAAAHJB}
00097 \par
{\bkmkstart AAAAAAAHJC}{\bkmkend AAAAAAAHJC}
00098 {\cf18 int}\par
{\bkmkstart AAAAAAAHJD}{\bkmkend AAAAAAAHJD}
00099 mxMenuBar::getHeight (){\cf17  const}\par
{\bkmkstart AAAAAAAHJE}{\bkmkend AAAAAAAHJE}
00100 {\cf17 }\{\par
{\bkmkstart AAAAAAAHJF}{\bkmkend AAAAAAAHJF}
00101         mxWindow *window = getParent ();\par
{\bkmkstart AAAAAAAHJG}{\bkmkend AAAAAAAHJG}
00102 \par
{\bkmkstart AAAAAAAHJH}{\bkmkend AAAAAAAHJH}
00103         {\cf19 if} (window)\par
{\bkmkstart AAAAAAAHJI}{\bkmkend AAAAAAAHJI}
00104                 {\cf19 return} d_this->heightForWidth (window->w ());\par
{\bkmkstart AAAAAAAHJJ}{\bkmkend AAAAAAAHJJ}
00105 \par
{\bkmkstart AAAAAAAHJK}{\bkmkend AAAAAAAHJK}
00106         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAHJL}{\bkmkend AAAAAAAHJL}
00107 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxMenuBar_i.h\par \pard\plain 
{\tc\tcl2 \v mxMenuBar_i.h}
{\xe \v mxMenuBar_i.h}
{\bkmkstart AAAAAAAHJM}
{\bkmkend AAAAAAAHJM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAHJN}{\bkmkend AAAAAAAHJN}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAHJO}{\bkmkend AAAAAAAHJO}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAHJP}{\bkmkend AAAAAAAHJP}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAHJQ}{\bkmkend AAAAAAAHJQ}
00004 {\cf20 // file:           mxMenuBar_i.h}\par
{\bkmkstart AAAAAAAHJR}{\bkmkend AAAAAAAHJR}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAHJS}{\bkmkend AAAAAAAHJS}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAHJT}{\bkmkend AAAAAAAHJT}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAHJU}{\bkmkend AAAAAAAHJU}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAHJV}{\bkmkend AAAAAAAHJV}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAHJW}{\bkmkend AAAAAAAHJW}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAHJX}{\bkmkend AAAAAAAHJX}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAHJY}{\bkmkend AAAAAAAHJY}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAHJZ}{\bkmkend AAAAAAAHJZ}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAHKA}{\bkmkend AAAAAAAHKA}
00014 {\cf21 #include <mx/mxMenuBar.h>}\par
{\bkmkstart AAAAAAAHKB}{\bkmkend AAAAAAAHKB}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAHKC}{\bkmkend AAAAAAAHKC}
00016 {\cf21 #include <QMenuBar>}\par
{\bkmkstart AAAAAAAHKD}{\bkmkend AAAAAAAHKD}
00017 \par
{\bkmkstart AAAAAAAHKE}{\bkmkend AAAAAAAHKE}
00018 {\cf17 extern} QMap<int, QAction*> g_actionList;\par
{\bkmkstart AAAAAAAHKF}{\bkmkend AAAAAAAHKF}
00019 \par
{\bkmkstart AAAAAAAHKG}{\bkmkend AAAAAAAHKG}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHGH" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHGH" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i}}}
 : {\cf17 public} QMenuBar\par
{\bkmkstart AAAAAAAHKH}{\bkmkend AAAAAAAHKH}
00021 \{\par
{\bkmkstart AAAAAAAHKI}{\bkmkend AAAAAAAHKI}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAHKJ}{\bkmkend AAAAAAAHKJ}
00023         mxMenuBar *d_widget;\par
{\bkmkstart AAAAAAAHKK}{\bkmkend AAAAAAAHKK}
00024 {\cf17 public}:\par
{\bkmkstart AAAAAAAHKL}{\bkmkend AAAAAAAHKL}
00025         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHGH" }{}}{\fldrslt {\cs37\ul\cf2 mxMenuBar_i}}}
 (QWidget *parent, mxMenuBar *menuBar) : QMenuBar (parent)\par
{\bkmkstart AAAAAAAHKM}{\bkmkend AAAAAAAHKM}
00026         \{\par
{\bkmkstart AAAAAAAHKN}{\bkmkend AAAAAAAHKN}
00027                 d_widget = menuBar;\par
{\bkmkstart AAAAAAAHKO}{\bkmkend AAAAAAAHKO}
00028         \}\par
{\bkmkstart AAAAAAAHKP}{\bkmkend AAAAAAAHKP}
00029 \par
{\bkmkstart AAAAAAAHKQ}{\bkmkend AAAAAAAHKQ}
00030         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHGH" }{}}{\fldrslt {\cs37\ul\cf2 ~mxMenuBar_i}}}
 ()\par
{\bkmkstart AAAAAAAHKR}{\bkmkend AAAAAAAHKR}
00031         \{\par
{\bkmkstart AAAAAAAHKS}{\bkmkend AAAAAAAHKS}
00032         \}\par
{\bkmkstart AAAAAAAHKT}{\bkmkend AAAAAAAHKT}
00033 \par
{\bkmkstart AAAAAAAHKU}{\bkmkend AAAAAAAHKU}
00034 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAHKV}{\bkmkend AAAAAAAHKV}
00035         {\cf18 void} activatedEvent (QAction *action)\par
{\bkmkstart AAAAAAAHKW}{\bkmkend AAAAAAAHKW}
00036         \{\par
{\bkmkstart AAAAAAAHKX}{\bkmkend AAAAAAAHKX}
00037                 {\cf18 int} itemId = g_actionList.key(action);\par
{\bkmkstart AAAAAAAHKY}{\bkmkend AAAAAAAHKY}
00038                 {\cf19 if} (itemId > 0)\par
{\bkmkstart AAAAAAAHKZ}{\bkmkend AAAAAAAHKZ}
00039                 \{\par
{\bkmkstart AAAAAAAHLA}{\bkmkend AAAAAAAHLA}
00040                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAHLB}{\bkmkend AAAAAAAHLB}
00041                         mxEvent event;\par
{\bkmkstart AAAAAAAHLC}{\bkmkend AAAAAAAHLC}
00042                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAHLD}{\bkmkend AAAAAAAHLD}
00043                         {\cf17 event}.action = itemId;\par
{\bkmkstart AAAAAAAHLE}{\bkmkend AAAAAAAHLE}
00044                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAHLF}{\bkmkend AAAAAAAHLF}
00045                         \{\par
{\bkmkstart AAAAAAAHLG}{\bkmkend AAAAAAAHLG}
00046                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAHLH}{\bkmkend AAAAAAAHLH}
00047                                         {\cf19 break};\par
{\bkmkstart AAAAAAAHLI}{\bkmkend AAAAAAAHLI}
00048                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAHLJ}{\bkmkend AAAAAAAHLJ}
00049                         \}\par
{\bkmkstart AAAAAAAHLK}{\bkmkend AAAAAAAHLK}
00050                 \}\par
{\bkmkstart AAAAAAAHLL}{\bkmkend AAAAAAAHLL}
00051         \}\par
{\bkmkstart AAAAAAAHLM}{\bkmkend AAAAAAAHLM}
00052 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxMessageBox.cpp\par \pard\plain 
{\tc\tcl2 \v mxMessageBox.cpp}
{\xe \v mxMessageBox.cpp}
{\bkmkstart AAAAAAAHLN}
{\bkmkend AAAAAAAHLN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAHLO}{\bkmkend AAAAAAAHLO}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAHLP}{\bkmkend AAAAAAAHLP}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAHLQ}{\bkmkend AAAAAAAHLQ}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAHLR}{\bkmkend AAAAAAAHLR}
00004 {\cf20 // file:           mxMessageBox.cpp}\par
{\bkmkstart AAAAAAAHLS}{\bkmkend AAAAAAAHLS}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAHLT}{\bkmkend AAAAAAAHLT}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAHLU}{\bkmkend AAAAAAAHLU}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAHLV}{\bkmkend AAAAAAAHLV}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAHLW}{\bkmkend AAAAAAAHLW}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAHLX}{\bkmkend AAAAAAAHLX}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAHLY}{\bkmkend AAAAAAAHLY}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAHLZ}{\bkmkend AAAAAAAHLZ}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAHMA}{\bkmkend AAAAAAAHMA}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAHMB}{\bkmkend AAAAAAAHMB}
00014 {\cf21 #include <mx/mxMessageBox.h>}\par
{\bkmkstart AAAAAAAHMC}{\bkmkend AAAAAAAHMC}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAHMD}{\bkmkend AAAAAAAHMD}
00016 {\cf21 #include <QMessageBox>}\par
{\bkmkstart AAAAAAAHME}{\bkmkend AAAAAAAHME}
00017 \par
{\bkmkstart AAAAAAAHMF}{\bkmkend AAAAAAAHMF}
00018 \par
{\bkmkstart AAAAAAAHMG}{\bkmkend AAAAAAAHMG}
00019 {\cf18 int}\par
{\bkmkstart AAAAAAAHMH}{\bkmkend AAAAAAAHMH}
00020 mxMessageBox (mxWindow *parent, {\cf17 const} {\cf18 char} *msg, {\cf17 const} {\cf18 char} *title, {\cf18 int}\par
{\bkmkstart AAAAAAAHMI}{\bkmkend AAAAAAAHMI}
00021 style)\par
{\bkmkstart AAAAAAAHMJ}{\bkmkend AAAAAAAHMJ}
00022 \{\par
{\bkmkstart AAAAAAAHMK}{\bkmkend AAAAAAAHMK}
00023         QWidget *p = 0;\par
{\bkmkstart AAAAAAAHML}{\bkmkend AAAAAAAHML}
00024         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAHMM}{\bkmkend AAAAAAAHMM}
00025                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAHMN}{\bkmkend AAAAAAAHMN}
00026 \par
{\bkmkstart AAAAAAAHMO}{\bkmkend AAAAAAAHMO}
00027         {\cf18 int} b1 = 0, b2 = 0, b3 = 0;\par
{\bkmkstart AAAAAAAHMP}{\bkmkend AAAAAAAHMP}
00028         \par
{\bkmkstart AAAAAAAHMQ}{\bkmkend AAAAAAAHMQ}
00029         {\cf19 if} (style & MX_MB_OK)\par
{\bkmkstart AAAAAAAHMR}{\bkmkend AAAAAAAHMR}
00030         \{\par
{\bkmkstart AAAAAAAHMS}{\bkmkend AAAAAAAHMS}
00031                 b1 = QMessageBox::Ok;\par
{\bkmkstart AAAAAAAHMT}{\bkmkend AAAAAAAHMT}
00032         \}\par
{\bkmkstart AAAAAAAHMU}{\bkmkend AAAAAAAHMU}
00033         {\cf19 else} {\cf19 if} (style & MX_MB_YESNO)\par
{\bkmkstart AAAAAAAHMV}{\bkmkend AAAAAAAHMV}
00034         \{\par
{\bkmkstart AAAAAAAHMW}{\bkmkend AAAAAAAHMW}
00035                 b1 = QMessageBox::Yes;\par
{\bkmkstart AAAAAAAHMX}{\bkmkend AAAAAAAHMX}
00036                 b2 = QMessageBox::No;\par
{\bkmkstart AAAAAAAHMY}{\bkmkend AAAAAAAHMY}
00037         \}\par
{\bkmkstart AAAAAAAHMZ}{\bkmkend AAAAAAAHMZ}
00038         {\cf19 else} {\cf19 if} (style & MX_MB_YESNOCANCEL)\par
{\bkmkstart AAAAAAAHNA}{\bkmkend AAAAAAAHNA}
00039         \{\par
{\bkmkstart AAAAAAAHNB}{\bkmkend AAAAAAAHNB}
00040                 b1 = QMessageBox::Yes;\par
{\bkmkstart AAAAAAAHNC}{\bkmkend AAAAAAAHNC}
00041                 b2 = QMessageBox::No;\par
{\bkmkstart AAAAAAAHND}{\bkmkend AAAAAAAHND}
00042                 b3 = QMessageBox::Cancel;\par
{\bkmkstart AAAAAAAHNE}{\bkmkend AAAAAAAHNE}
00043         \}\par
{\bkmkstart AAAAAAAHNF}{\bkmkend AAAAAAAHNF}
00044 \par
{\bkmkstart AAAAAAAHNG}{\bkmkend AAAAAAAHNG}
00045         {\cf18 int} ret;\par
{\bkmkstart AAAAAAAHNH}{\bkmkend AAAAAAAHNH}
00046         {\cf19 if} (style & MX_MB_INFORMATION)\par
{\bkmkstart AAAAAAAHNI}{\bkmkend AAAAAAAHNI}
00047                 ret = QMessageBox::information (p, title, msg, b1, b2, b3);\par
{\bkmkstart AAAAAAAHNJ}{\bkmkend AAAAAAAHNJ}
00048         {\cf19 else} {\cf19 if} (style & MX_MB_ERROR)\par
{\bkmkstart AAAAAAAHNK}{\bkmkend AAAAAAAHNK}
00049                 ret = QMessageBox::critical (p, title, msg, b1, b2, b3);\par
{\bkmkstart AAAAAAAHNL}{\bkmkend AAAAAAAHNL}
00050         {\cf19 else} {\cf19 if} (style & MX_MB_WARNING)\par
{\bkmkstart AAAAAAAHNM}{\bkmkend AAAAAAAHNM}
00051                 ret = QMessageBox::warning (p, title, msg, b1, b2, b3);\par
{\bkmkstart AAAAAAAHNN}{\bkmkend AAAAAAAHNN}
00052         {\cf19 else} {\cf19 if} (style & MX_MB_QUESTION)\par
{\bkmkstart AAAAAAAHNO}{\bkmkend AAAAAAAHNO}
00053                 ret = QMessageBox::question (p, title, msg, b1, b2, b3);\par
{\bkmkstart AAAAAAAHNP}{\bkmkend AAAAAAAHNP}
00054 \par
{\bkmkstart AAAAAAAHNQ}{\bkmkend AAAAAAAHNQ}
00055         {\cf19 switch} (ret)\par
{\bkmkstart AAAAAAAHNR}{\bkmkend AAAAAAAHNR}
00056         \{\par
{\bkmkstart AAAAAAAHNS}{\bkmkend AAAAAAAHNS}
00057         {\cf19 case} 1:\par
{\bkmkstart AAAAAAAHNT}{\bkmkend AAAAAAAHNT}
00058         {\cf19 case} 3:\par
{\bkmkstart AAAAAAAHNU}{\bkmkend AAAAAAAHNU}
00059                 {\cf19 return} 0;\par
{\bkmkstart AAAAAAAHNV}{\bkmkend AAAAAAAHNV}
00060                         \par
{\bkmkstart AAAAAAAHNW}{\bkmkend AAAAAAAHNW}
00061         {\cf19 case} 4:\par
{\bkmkstart AAAAAAAHNX}{\bkmkend AAAAAAAHNX}
00062                 {\cf19 return} 1;\par
{\bkmkstart AAAAAAAHNY}{\bkmkend AAAAAAAHNY}
00063                 \par
{\bkmkstart AAAAAAAHNZ}{\bkmkend AAAAAAAHNZ}
00064         {\cf19 case} 2:\par
{\bkmkstart AAAAAAAHOA}{\bkmkend AAAAAAAHOA}
00065                 {\cf19 return} 2;\par
{\bkmkstart AAAAAAAHOB}{\bkmkend AAAAAAAHOB}
00066         \}\par
{\bkmkstart AAAAAAAHOC}{\bkmkend AAAAAAAHOC}
00067         \par
{\bkmkstart AAAAAAAHOD}{\bkmkend AAAAAAAHOD}
00068         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAHOE}{\bkmkend AAAAAAAHOE}
00069 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxPopupMenu.cpp\par \pard\plain 
{\tc\tcl2 \v mxPopupMenu.cpp}
{\xe \v mxPopupMenu.cpp}
{\bkmkstart AAAAAAAHOF}
{\bkmkend AAAAAAAHOF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAHOG}{\bkmkend AAAAAAAHOG}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAHOH}{\bkmkend AAAAAAAHOH}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAHOI}{\bkmkend AAAAAAAHOI}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAHOJ}{\bkmkend AAAAAAAHOJ}
00004 {\cf20 // file:           mxPopupMenu.cpp}\par
{\bkmkstart AAAAAAAHOK}{\bkmkend AAAAAAAHOK}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAHOL}{\bkmkend AAAAAAAHOL}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAHOM}{\bkmkend AAAAAAAHOM}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAHON}{\bkmkend AAAAAAAHON}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAHOO}{\bkmkend AAAAAAAHOO}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAHOP}{\bkmkend AAAAAAAHOP}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAHOQ}{\bkmkend AAAAAAAHOQ}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAHOR}{\bkmkend AAAAAAAHOR}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAHOS}{\bkmkend AAAAAAAHOS}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAHOT}{\bkmkend AAAAAAAHOT}
00014 {\cf21 #include "mxPopupMenu_i.h"}\par
{\bkmkstart AAAAAAAHOU}{\bkmkend AAAAAAAHOU}
00015 {\cf21 #include <QApplication>}\par
{\bkmkstart AAAAAAAHOV}{\bkmkend AAAAAAAHOV}
00016 \par
{\bkmkstart AAAAAAAHOW}{\bkmkend AAAAAAAHOW}
00017 \par
{\bkmkstart AAAAAAAHOX}{\bkmkend AAAAAAAHOX}
00018 \par
{\bkmkstart AAAAAAAHOY}{\bkmkend AAAAAAAHOY}
00019 mxPopupMenu::mxPopupMenu ()\par
{\bkmkstart AAAAAAAHOZ}{\bkmkend AAAAAAAHOZ}
00020 : mxWidget (0, 0, 0, 0, 0)\par
{\bkmkstart AAAAAAAHPA}{\bkmkend AAAAAAAHPA}
00021 \{\par
{\bkmkstart AAAAAAAHPB}{\bkmkend AAAAAAAHPB}
00022         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHPC" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i}}}
 ({\cf17 this});\par
{\bkmkstart AAAAAAAHPD}{\bkmkend AAAAAAAHPD}
00023         d_this->menuAction()->setCheckable ({\cf17 true});\par
{\bkmkstart AAAAAAAHPE}{\bkmkend AAAAAAAHPE}
00024         d_this->connect (d_this, SIGNAL (triggered (QAction*)), d_this, SLOT (activatedEvent (QAction*)));\par
{\bkmkstart AAAAAAAHPF}{\bkmkend AAAAAAAHPF}
00025 \par
{\bkmkstart AAAAAAAHPG}{\bkmkend AAAAAAAHPG}
00026         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAHPH}{\bkmkend AAAAAAAHPH}
00027         setType (MX_POPUPMENU);\par
{\bkmkstart AAAAAAAHPI}{\bkmkend AAAAAAAHPI}
00028 \}\par
{\bkmkstart AAAAAAAHPJ}{\bkmkend AAAAAAAHPJ}
00029 \par
{\bkmkstart AAAAAAAHPK}{\bkmkend AAAAAAAHPK}
00030 \par
{\bkmkstart AAAAAAAHPL}{\bkmkend AAAAAAAHPL}
00031 \par
{\bkmkstart AAAAAAAHPM}{\bkmkend AAAAAAAHPM}
00032 mxPopupMenu::~mxPopupMenu ()\par
{\bkmkstart AAAAAAAHPN}{\bkmkend AAAAAAAHPN}
00033 \{\par
{\bkmkstart AAAAAAAHPO}{\bkmkend AAAAAAAHPO}
00034         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAHPP}{\bkmkend AAAAAAAHPP}
00035 \}\par
{\bkmkstart AAAAAAAHPQ}{\bkmkend AAAAAAAHPQ}
00036 \par
{\bkmkstart AAAAAAAHPR}{\bkmkend AAAAAAAHPR}
00037 \par
{\bkmkstart AAAAAAAHPS}{\bkmkend AAAAAAAHPS}
00038 \par
{\bkmkstart AAAAAAAHPT}{\bkmkend AAAAAAAHPT}
00039 {\cf18 int}\par
{\bkmkstart AAAAAAAHPU}{\bkmkend AAAAAAAHPU}
00040 mxPopupMenu::popup (mxWidget *widget, {\cf18 int} x, {\cf18 int} y)\par
{\bkmkstart AAAAAAAHPV}{\bkmkend AAAAAAAHPV}
00041 \{\par
{\bkmkstart AAAAAAAHPW}{\bkmkend AAAAAAAHPW}
00042         QPoint p (x, y);\par
{\bkmkstart AAAAAAAHPX}{\bkmkend AAAAAAAHPX}
00043         QWidget *w = (QWidget *) widget->getHandle ();\par
{\bkmkstart AAAAAAAHPY}{\bkmkend AAAAAAAHPY}
00044         p = w->mapToGlobal (p);\par
{\bkmkstart AAAAAAAHPZ}{\bkmkend AAAAAAAHPZ}
00045         d_this->popup (p);\par
{\bkmkstart AAAAAAAHQA}{\bkmkend AAAAAAAHQA}
00046 \par
{\bkmkstart AAAAAAAHQB}{\bkmkend AAAAAAAHQB}
00047         {\cf19 while} (d_this->d_lastItemId == -1)\par
{\bkmkstart AAAAAAAHQC}{\bkmkend AAAAAAAHQC}
00048                 qApp->processEvents ();\par
{\bkmkstart AAAAAAAHQD}{\bkmkend AAAAAAAHQD}
00049 \par
{\bkmkstart AAAAAAAHQE}{\bkmkend AAAAAAAHQE}
00050         {\cf18 int} {\cf18 id} = d_this->d_lastItemId;\par
{\bkmkstart AAAAAAAHQF}{\bkmkend AAAAAAAHQF}
00051         d_this->d_lastItemId = -1;\par
{\bkmkstart AAAAAAAHQG}{\bkmkend AAAAAAAHQG}
00052 \par
{\bkmkstart AAAAAAAHQH}{\bkmkend AAAAAAAHQH}
00053         {\cf19 return} id;\par
{\bkmkstart AAAAAAAHQI}{\bkmkend AAAAAAAHQI}
00054 \}\par
{\bkmkstart AAAAAAAHQJ}{\bkmkend AAAAAAAHQJ}
00055 \par
{\bkmkstart AAAAAAAHQK}{\bkmkend AAAAAAAHQK}
00056 \par
{\bkmkstart AAAAAAAHQL}{\bkmkend AAAAAAAHQL}
00057 \par
{\bkmkstart AAAAAAAHQM}{\bkmkend AAAAAAAHQM}
00058 {\cf18 void}\par
{\bkmkstart AAAAAAAHQN}{\bkmkend AAAAAAAHQN}
00059 mxPopupMenu::add ({\cf17 const} {\cf18 char} *item, {\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAHQO}{\bkmkend AAAAAAAHQO}
00060 \{\par
{\bkmkstart AAAAAAAHQP}{\bkmkend AAAAAAAHQP}
00061         d_this->d_actionList[id] = d_this->addAction (item);\par
{\bkmkstart AAAAAAAHQQ}{\bkmkend AAAAAAAHQQ}
00062 \}\par
{\bkmkstart AAAAAAAHQR}{\bkmkend AAAAAAAHQR}
00063 \par
{\bkmkstart AAAAAAAHQS}{\bkmkend AAAAAAAHQS}
00064 \par
{\bkmkstart AAAAAAAHQT}{\bkmkend AAAAAAAHQT}
00065 {\cf20 /*}\par
{\bkmkstart AAAAAAAHQU}{\bkmkend AAAAAAAHQU}
00066 {\cf20 void}\par
{\bkmkstart AAAAAAAHQV}{\bkmkend AAAAAAAHQV}
00067 {\cf20 mxPopupMenu::addMenu (const char *item, mxPopupMenu *menu)}\par
{\bkmkstart AAAAAAAHQW}{\bkmkend AAAAAAAHQW}
00068 {\cf20 \{}\par
{\bkmkstart AAAAAAAHQX}{\bkmkend AAAAAAAHQX}
00069 {\cf20         QMenu *_menu = (QMenu *) menu->getHandle ();}\par
{\bkmkstart AAAAAAAHQY}{\bkmkend AAAAAAAHQY}
00070 {\cf20         _menu->setTitle(item);}\par
{\bkmkstart AAAAAAAHQZ}{\bkmkend AAAAAAAHQZ}
00071 {\cf20         d_this->addMenu (_menu);}\par
{\bkmkstart AAAAAAAHRA}{\bkmkend AAAAAAAHRA}
00072 {\cf20 \}}\par
{\bkmkstart AAAAAAAHRB}{\bkmkend AAAAAAAHRB}
00073 {\cf20 */}\par
{\bkmkstart AAAAAAAHRC}{\bkmkend AAAAAAAHRC}
00074 \par
{\bkmkstart AAAAAAAHRD}{\bkmkend AAAAAAAHRD}
00075 \par
{\bkmkstart AAAAAAAHRE}{\bkmkend AAAAAAAHRE}
00076 {\cf18 void}\par
{\bkmkstart AAAAAAAHRF}{\bkmkend AAAAAAAHRF}
00077 mxPopupMenu::addSeparator ()\par
{\bkmkstart AAAAAAAHRG}{\bkmkend AAAAAAAHRG}
00078 \{\par
{\bkmkstart AAAAAAAHRH}{\bkmkend AAAAAAAHRH}
00079         d_this->addSeparator ();\par
{\bkmkstart AAAAAAAHRI}{\bkmkend AAAAAAAHRI}
00080 \}\par
{\bkmkstart AAAAAAAHRJ}{\bkmkend AAAAAAAHRJ}
00081 \par
{\bkmkstart AAAAAAAHRK}{\bkmkend AAAAAAAHRK}
00082 \par
{\bkmkstart AAAAAAAHRL}{\bkmkend AAAAAAAHRL}
00083 \par
{\bkmkstart AAAAAAAHRM}{\bkmkend AAAAAAAHRM}
00084 {\cf18 void}\par
{\bkmkstart AAAAAAAHRN}{\bkmkend AAAAAAAHRN}
00085 mxPopupMenu::setEnabled ({\cf18 int} {\cf18 id}, {\cf18 bool} b)\par
{\bkmkstart AAAAAAAHRO}{\bkmkend AAAAAAAHRO}
00086 \{\par
{\bkmkstart AAAAAAAHRP}{\bkmkend AAAAAAAHRP}
00087         d_this->d_actionList[id]->setEnabled (b);\par
{\bkmkstart AAAAAAAHRQ}{\bkmkend AAAAAAAHRQ}
00088 \}\par
{\bkmkstart AAAAAAAHRR}{\bkmkend AAAAAAAHRR}
00089 \par
{\bkmkstart AAAAAAAHRS}{\bkmkend AAAAAAAHRS}
00090 \par
{\bkmkstart AAAAAAAHRT}{\bkmkend AAAAAAAHRT}
00091 \par
{\bkmkstart AAAAAAAHRU}{\bkmkend AAAAAAAHRU}
00092 {\cf18 void}\par
{\bkmkstart AAAAAAAHRV}{\bkmkend AAAAAAAHRV}
00093 mxPopupMenu::setChecked ({\cf18 int} {\cf18 id}, {\cf18 bool} b)\par
{\bkmkstart AAAAAAAHRW}{\bkmkend AAAAAAAHRW}
00094 \{\par
{\bkmkstart AAAAAAAHRX}{\bkmkend AAAAAAAHRX}
00095         d_this->d_actionList[id]->setChecked (b);\par
{\bkmkstart AAAAAAAHRY}{\bkmkend AAAAAAAHRY}
00096 \}\par
{\bkmkstart AAAAAAAHRZ}{\bkmkend AAAAAAAHRZ}
00097 \par
{\bkmkstart AAAAAAAHSA}{\bkmkend AAAAAAAHSA}
00098 \par
{\bkmkstart AAAAAAAHSB}{\bkmkend AAAAAAAHSB}
00099 \par
{\bkmkstart AAAAAAAHSC}{\bkmkend AAAAAAAHSC}
00100 {\cf18 bool}\par
{\bkmkstart AAAAAAAHSD}{\bkmkend AAAAAAAHSD}
00101 mxPopupMenu::isEnabled ({\cf18 int} {\cf18 id}){\cf17  const}\par
{\bkmkstart AAAAAAAHSE}{\bkmkend AAAAAAAHSE}
00102 {\cf17 }\{\par
{\bkmkstart AAAAAAAHSF}{\bkmkend AAAAAAAHSF}
00103         {\cf19 return} d_this->d_actionList[id]->isEnabled ();\par
{\bkmkstart AAAAAAAHSG}{\bkmkend AAAAAAAHSG}
00104 \}\par
{\bkmkstart AAAAAAAHSH}{\bkmkend AAAAAAAHSH}
00105 \par
{\bkmkstart AAAAAAAHSI}{\bkmkend AAAAAAAHSI}
00106 \par
{\bkmkstart AAAAAAAHSJ}{\bkmkend AAAAAAAHSJ}
00107 \par
{\bkmkstart AAAAAAAHSK}{\bkmkend AAAAAAAHSK}
00108 {\cf18 bool}\par
{\bkmkstart AAAAAAAHSL}{\bkmkend AAAAAAAHSL}
00109 mxPopupMenu::isChecked ({\cf18 int} {\cf18 id}){\cf17  const}\par
{\bkmkstart AAAAAAAHSM}{\bkmkend AAAAAAAHSM}
00110 {\cf17 }\{\par
{\bkmkstart AAAAAAAHSN}{\bkmkend AAAAAAAHSN}
00111         {\cf19 return} d_this->d_actionList[id]->isChecked ();\par
{\bkmkstart AAAAAAAHSO}{\bkmkend AAAAAAAHSO}
00112 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxPopupMenu_i.h\par \pard\plain 
{\tc\tcl2 \v mxPopupMenu_i.h}
{\xe \v mxPopupMenu_i.h}
{\bkmkstart AAAAAAAHSP}
{\bkmkend AAAAAAAHSP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAHSQ}{\bkmkend AAAAAAAHSQ}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAHSR}{\bkmkend AAAAAAAHSR}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAHSS}{\bkmkend AAAAAAAHSS}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAHST}{\bkmkend AAAAAAAHST}
00004 {\cf20 // file:           mxPopupMenu_i.h}\par
{\bkmkstart AAAAAAAHSU}{\bkmkend AAAAAAAHSU}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAHSV}{\bkmkend AAAAAAAHSV}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAHSW}{\bkmkend AAAAAAAHSW}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAHSX}{\bkmkend AAAAAAAHSX}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAHSY}{\bkmkend AAAAAAAHSY}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAHSZ}{\bkmkend AAAAAAAHSZ}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAHTA}{\bkmkend AAAAAAAHTA}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAHTB}{\bkmkend AAAAAAAHTB}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAHTC}{\bkmkend AAAAAAAHTC}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAHTD}{\bkmkend AAAAAAAHTD}
00014 {\cf21 #include <mx/mxPopupMenu.h>}\par
{\bkmkstart AAAAAAAHTE}{\bkmkend AAAAAAAHTE}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAHTF}{\bkmkend AAAAAAAHTF}
00016 {\cf21 #include <QMenu>}\par
{\bkmkstart AAAAAAAHTG}{\bkmkend AAAAAAAHTG}
00017 \par
{\bkmkstart AAAAAAAHTH}{\bkmkend AAAAAAAHTH}
00018 \par
{\bkmkstart AAAAAAAHTI}{\bkmkend AAAAAAAHTI}
00019 \par
{\bkmkstart AAAAAAAHTJ}{\bkmkend AAAAAAAHTJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHPC" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHPC" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i}}}
 : {\cf17 public} QMenu\par
{\bkmkstart AAAAAAAHTK}{\bkmkend AAAAAAAHTK}
00021 \{\par
{\bkmkstart AAAAAAAHTL}{\bkmkend AAAAAAAHTL}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAHTM}{\bkmkend AAAAAAAHTM}
00023         mxPopupMenu *d_widget;\par
{\bkmkstart AAAAAAAHTN}{\bkmkend AAAAAAAHTN}
00024 \par
{\bkmkstart AAAAAAAHTO}{\bkmkend AAAAAAAHTO}
00025 {\cf17 public}:\par
{\bkmkstart AAAAAAAHTP}{\bkmkend AAAAAAAHTP}
00026         QMap <int, QAction*> d_actionList;\par
{\bkmkstart AAAAAAAHTQ}{\bkmkend AAAAAAAHTQ}
00027         {\cf18 int} d_lastItemId;\par
{\bkmkstart AAAAAAAHTR}{\bkmkend AAAAAAAHTR}
00028         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHPC" }{}}{\fldrslt {\cs37\ul\cf2 mxPopupMenu_i}}}
 (mxPopupMenu *popupMenu) : QMenu ()\par
{\bkmkstart AAAAAAAHTS}{\bkmkend AAAAAAAHTS}
00029         \{\par
{\bkmkstart AAAAAAAHTT}{\bkmkend AAAAAAAHTT}
00030                 d_widget = popupMenu;\par
{\bkmkstart AAAAAAAHTU}{\bkmkend AAAAAAAHTU}
00031                 d_lastItemId = -1;\par
{\bkmkstart AAAAAAAHTV}{\bkmkend AAAAAAAHTV}
00032         \}\par
{\bkmkstart AAAAAAAHTW}{\bkmkend AAAAAAAHTW}
00033 \par
{\bkmkstart AAAAAAAHTX}{\bkmkend AAAAAAAHTX}
00034         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHPC" }{}}{\fldrslt {\cs37\ul\cf2 ~mxPopupMenu_i}}}
 ()\par
{\bkmkstart AAAAAAAHTY}{\bkmkend AAAAAAAHTY}
00035         \{\par
{\bkmkstart AAAAAAAHTZ}{\bkmkend AAAAAAAHTZ}
00036         \}\par
{\bkmkstart AAAAAAAHUA}{\bkmkend AAAAAAAHUA}
00037 \par
{\bkmkstart AAAAAAAHUB}{\bkmkend AAAAAAAHUB}
00038 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAHUC}{\bkmkend AAAAAAAHUC}
00039         {\cf18 void} activatedEvent (QAction *action)\par
{\bkmkstart AAAAAAAHUD}{\bkmkend AAAAAAAHUD}
00040         \{\par
{\bkmkstart AAAAAAAHUE}{\bkmkend AAAAAAAHUE}
00041                 d_lastItemId = d_actionList.key(action);\par
{\bkmkstart AAAAAAAHUF}{\bkmkend AAAAAAAHUF}
00042         \}\par
{\bkmkstart AAAAAAAHUG}{\bkmkend AAAAAAAHUG}
00043 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxProgressBar.cpp\par \pard\plain 
{\tc\tcl2 \v mxProgressBar.cpp}
{\xe \v mxProgressBar.cpp}
{\bkmkstart AAAAAAAHUH}
{\bkmkend AAAAAAAHUH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAHUI}{\bkmkend AAAAAAAHUI}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAHUJ}{\bkmkend AAAAAAAHUJ}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAHUK}{\bkmkend AAAAAAAHUK}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAHUL}{\bkmkend AAAAAAAHUL}
00004 {\cf20 // file:           mxProgressBar.cpp}\par
{\bkmkstart AAAAAAAHUM}{\bkmkend AAAAAAAHUM}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAHUN}{\bkmkend AAAAAAAHUN}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAHUO}{\bkmkend AAAAAAAHUO}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAHUP}{\bkmkend AAAAAAAHUP}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAHUQ}{\bkmkend AAAAAAAHUQ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAHUR}{\bkmkend AAAAAAAHUR}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAHUS}{\bkmkend AAAAAAAHUS}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAHUT}{\bkmkend AAAAAAAHUT}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAHUU}{\bkmkend AAAAAAAHUU}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAHUV}{\bkmkend AAAAAAAHUV}
00014 {\cf21 #include <mx/mxProgressBar.h>}\par
{\bkmkstart AAAAAAAHUW}{\bkmkend AAAAAAAHUW}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAHUX}{\bkmkend AAAAAAAHUX}
00016 {\cf21 #include <QProgressBar>}\par
{\bkmkstart AAAAAAAHUY}{\bkmkend AAAAAAAHUY}
00017 \par
{\bkmkstart AAAAAAAHUZ}{\bkmkend AAAAAAAHUZ}
00018 \par
{\bkmkstart AAAAAAAHVA}{\bkmkend AAAAAAAHVA}
00019 \par
{\bkmkstart AAAAAAAHVB}{\bkmkend AAAAAAAHVB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVC" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVC" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar_i}}}
 : {\cf17 public} QProgressBar\par
{\bkmkstart AAAAAAAHVD}{\bkmkend AAAAAAAHVD}
00021 \{\par
{\bkmkstart AAAAAAAHVE}{\bkmkend AAAAAAAHVE}
00022         mxProgressBar *d_widget;\par
{\bkmkstart AAAAAAAHVF}{\bkmkend AAAAAAAHVF}
00023 \par
{\bkmkstart AAAAAAAHVG}{\bkmkend AAAAAAAHVG}
00024 {\cf17 public}:\par
{\bkmkstart AAAAAAAHVH}{\bkmkend AAAAAAAHVH}
00025         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVC" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar_i}}}
 (QWidget *parent, mxProgressBar *widget) : QProgressBar (parent)\par
{\bkmkstart AAAAAAAHVI}{\bkmkend AAAAAAAHVI}
00026         \{\par
{\bkmkstart AAAAAAAHVJ}{\bkmkend AAAAAAAHVJ}
00027                 d_widget = widget;\par
{\bkmkstart AAAAAAAHVK}{\bkmkend AAAAAAAHVK}
00028                 setRange (0, 100);\par
{\bkmkstart AAAAAAAHVL}{\bkmkend AAAAAAAHVL}
00029                 setValue (0);\par
{\bkmkstart AAAAAAAHVM}{\bkmkend AAAAAAAHVM}
00030         \}\par
{\bkmkstart AAAAAAAHVN}{\bkmkend AAAAAAAHVN}
00031 \par
{\bkmkstart AAAAAAAHVO}{\bkmkend AAAAAAAHVO}
00032         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVC" }{}}{\fldrslt {\cs37\ul\cf2 ~mxProgressBar_i}}}
 ()\par
{\bkmkstart AAAAAAAHVP}{\bkmkend AAAAAAAHVP}
00033         \{\par
{\bkmkstart AAAAAAAHVQ}{\bkmkend AAAAAAAHVQ}
00034         \}\par
{\bkmkstart AAAAAAAHVR}{\bkmkend AAAAAAAHVR}
00035 \};\par
{\bkmkstart AAAAAAAHVS}{\bkmkend AAAAAAAHVS}
00036 \par
{\bkmkstart AAAAAAAHVT}{\bkmkend AAAAAAAHVT}
00037 \par
{\bkmkstart AAAAAAAHVU}{\bkmkend AAAAAAAHVU}
00038 \par
{\bkmkstart AAAAAAAHVV}{\bkmkend AAAAAAAHVV}
00039 mxProgressBar::mxProgressBar (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf18 int} style)\par
{\bkmkstart AAAAAAAHVW}{\bkmkend AAAAAAAHVW}
00040 : mxWidget (parent, x, y, w, h)\par
{\bkmkstart AAAAAAAHVX}{\bkmkend AAAAAAAHVX}
00041 \{\par
{\bkmkstart AAAAAAAHVY}{\bkmkend AAAAAAAHVY}
00042         QWidget *p = 0;\par
{\bkmkstart AAAAAAAHVZ}{\bkmkend AAAAAAAHVZ}
00043         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAHWA}{\bkmkend AAAAAAAHWA}
00044                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAHWB}{\bkmkend AAAAAAAHWB}
00045 \par
{\bkmkstart AAAAAAAHWC}{\bkmkend AAAAAAAHWC}
00046         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHVC" }{}}{\fldrslt {\cs37\ul\cf2 mxProgressBar_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAHWD}{\bkmkend AAAAAAAHWD}
00047 \par
{\bkmkstart AAAAAAAHWE}{\bkmkend AAAAAAAHWE}
00048         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAHWF}{\bkmkend AAAAAAAHWF}
00049         setType (MX_PROGRESSBAR);\par
{\bkmkstart AAAAAAAHWG}{\bkmkend AAAAAAAHWG}
00050         setParent (parent);\par
{\bkmkstart AAAAAAAHWH}{\bkmkend AAAAAAAHWH}
00051         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAHWI}{\bkmkend AAAAAAAHWI}
00052         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAHWJ}{\bkmkend AAAAAAAHWJ}
00053         \par
{\bkmkstart AAAAAAAHWK}{\bkmkend AAAAAAAHWK}
00054         setTotalSteps (100);\par
{\bkmkstart AAAAAAAHWL}{\bkmkend AAAAAAAHWL}
00055 \}\par
{\bkmkstart AAAAAAAHWM}{\bkmkend AAAAAAAHWM}
00056 \par
{\bkmkstart AAAAAAAHWN}{\bkmkend AAAAAAAHWN}
00057 \par
{\bkmkstart AAAAAAAHWO}{\bkmkend AAAAAAAHWO}
00058 \par
{\bkmkstart AAAAAAAHWP}{\bkmkend AAAAAAAHWP}
00059 mxProgressBar::~mxProgressBar ()\par
{\bkmkstart AAAAAAAHWQ}{\bkmkend AAAAAAAHWQ}
00060 \{\par
{\bkmkstart AAAAAAAHWR}{\bkmkend AAAAAAAHWR}
00061         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAHWS}{\bkmkend AAAAAAAHWS}
00062 \}\par
{\bkmkstart AAAAAAAHWT}{\bkmkend AAAAAAAHWT}
00063 \par
{\bkmkstart AAAAAAAHWU}{\bkmkend AAAAAAAHWU}
00064 \par
{\bkmkstart AAAAAAAHWV}{\bkmkend AAAAAAAHWV}
00065 \par
{\bkmkstart AAAAAAAHWW}{\bkmkend AAAAAAAHWW}
00066 {\cf18 void}\par
{\bkmkstart AAAAAAAHWX}{\bkmkend AAAAAAAHWX}
00067 mxProgressBar::setValue ({\cf18 int} value)\par
{\bkmkstart AAAAAAAHWY}{\bkmkend AAAAAAAHWY}
00068 \{\par
{\bkmkstart AAAAAAAHWZ}{\bkmkend AAAAAAAHWZ}
00069         {\cf19 if} (value < d_this->value ())\par
{\bkmkstart AAAAAAAHXA}{\bkmkend AAAAAAAHXA}
00070                 d_this->reset ();\par
{\bkmkstart AAAAAAAHXB}{\bkmkend AAAAAAAHXB}
00071         d_this->setValue (value);\par
{\bkmkstart AAAAAAAHXC}{\bkmkend AAAAAAAHXC}
00072 \}\par
{\bkmkstart AAAAAAAHXD}{\bkmkend AAAAAAAHXD}
00073 \par
{\bkmkstart AAAAAAAHXE}{\bkmkend AAAAAAAHXE}
00074 \par
{\bkmkstart AAAAAAAHXF}{\bkmkend AAAAAAAHXF}
00075 \par
{\bkmkstart AAAAAAAHXG}{\bkmkend AAAAAAAHXG}
00076 {\cf18 void}\par
{\bkmkstart AAAAAAAHXH}{\bkmkend AAAAAAAHXH}
00077 mxProgressBar::setTotalSteps ({\cf18 int} steps)\par
{\bkmkstart AAAAAAAHXI}{\bkmkend AAAAAAAHXI}
00078 \{\par
{\bkmkstart AAAAAAAHXJ}{\bkmkend AAAAAAAHXJ}
00079         d_this->setRange (0, steps);\par
{\bkmkstart AAAAAAAHXK}{\bkmkend AAAAAAAHXK}
00080 \}\par
{\bkmkstart AAAAAAAHXL}{\bkmkend AAAAAAAHXL}
00081 \par
{\bkmkstart AAAAAAAHXM}{\bkmkend AAAAAAAHXM}
00082 \par
{\bkmkstart AAAAAAAHXN}{\bkmkend AAAAAAAHXN}
00083 \par
{\bkmkstart AAAAAAAHXO}{\bkmkend AAAAAAAHXO}
00084 {\cf18 int}\par
{\bkmkstart AAAAAAAHXP}{\bkmkend AAAAAAAHXP}
00085 mxProgressBar::getValue (){\cf17  const}\par
{\bkmkstart AAAAAAAHXQ}{\bkmkend AAAAAAAHXQ}
00086 {\cf17 }\{\par
{\bkmkstart AAAAAAAHXR}{\bkmkend AAAAAAAHXR}
00087         {\cf19 return} d_this->value ();\par
{\bkmkstart AAAAAAAHXS}{\bkmkend AAAAAAAHXS}
00088 \}\par
{\bkmkstart AAAAAAAHXT}{\bkmkend AAAAAAAHXT}
00089 \par
{\bkmkstart AAAAAAAHXU}{\bkmkend AAAAAAAHXU}
00090 \par
{\bkmkstart AAAAAAAHXV}{\bkmkend AAAAAAAHXV}
00091 \par
{\bkmkstart AAAAAAAHXW}{\bkmkend AAAAAAAHXW}
00092 {\cf18 int}\par
{\bkmkstart AAAAAAAHXX}{\bkmkend AAAAAAAHXX}
00093 mxProgressBar::getTotalSteps (){\cf17  const}\par
{\bkmkstart AAAAAAAHXY}{\bkmkend AAAAAAAHXY}
00094 {\cf17 }\{\par
{\bkmkstart AAAAAAAHXZ}{\bkmkend AAAAAAAHXZ}
00095         {\cf19 return} d_this->maximum ();\par
{\bkmkstart AAAAAAAHYA}{\bkmkend AAAAAAAHYA}
00096 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxRadioButton.cpp\par \pard\plain 
{\tc\tcl2 \v mxRadioButton.cpp}
{\xe \v mxRadioButton.cpp}
{\bkmkstart AAAAAAAHYB}
{\bkmkend AAAAAAAHYB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAHYC}{\bkmkend AAAAAAAHYC}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAHYD}{\bkmkend AAAAAAAHYD}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAHYE}{\bkmkend AAAAAAAHYE}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAHYF}{\bkmkend AAAAAAAHYF}
00004 {\cf20 // file:           mxRadioButton.cpp}\par
{\bkmkstart AAAAAAAHYG}{\bkmkend AAAAAAAHYG}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAHYH}{\bkmkend AAAAAAAHYH}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAHYI}{\bkmkend AAAAAAAHYI}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAHYJ}{\bkmkend AAAAAAAHYJ}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAHYK}{\bkmkend AAAAAAAHYK}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAHYL}{\bkmkend AAAAAAAHYL}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAHYM}{\bkmkend AAAAAAAHYM}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAHYN}{\bkmkend AAAAAAAHYN}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAHYO}{\bkmkend AAAAAAAHYO}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAHYP}{\bkmkend AAAAAAAHYP}
00014 {\cf21 #include "mxRadioButton_i.h"}\par
{\bkmkstart AAAAAAAHYQ}{\bkmkend AAAAAAAHYQ}
00015 \par
{\bkmkstart AAAAAAAHYR}{\bkmkend AAAAAAAHYR}
00016 \par
{\bkmkstart AAAAAAAHYS}{\bkmkend AAAAAAAHYS}
00017 \par
{\bkmkstart AAAAAAAHYT}{\bkmkend AAAAAAAHYT}
00018 QButtonGroup *mxRadioButton_i::s_buttonGroup = 0;\par
{\bkmkstart AAAAAAAHYU}{\bkmkend AAAAAAAHYU}
00019 \par
{\bkmkstart AAAAAAAHYV}{\bkmkend AAAAAAAHYV}
00020 \par
{\bkmkstart AAAAAAAHYW}{\bkmkend AAAAAAAHYW}
00021 \par
{\bkmkstart AAAAAAAHYX}{\bkmkend AAAAAAAHYX}
00022 mxRadioButton::mxRadioButton (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label, {\cf18 int} {\cf18 id}, {\cf18 bool} newGroup)\par
{\bkmkstart AAAAAAAHYY}{\bkmkend AAAAAAAHYY}
00023 : mxWidget (parent, x, y, w, h, label)\par
{\bkmkstart AAAAAAAHYZ}{\bkmkend AAAAAAAHYZ}
00024 \{\par
{\bkmkstart AAAAAAAHZA}{\bkmkend AAAAAAAHZA}
00025         QWidget *p = 0;\par
{\bkmkstart AAAAAAAHZB}{\bkmkend AAAAAAAHZB}
00026         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAHZC}{\bkmkend AAAAAAAHZC}
00027                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAHZD}{\bkmkend AAAAAAAHZD}
00028 \par
{\bkmkstart AAAAAAAHZE}{\bkmkend AAAAAAAHZE}
00029         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHZF" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i}}}
 (p, {\cf17 this}, newGroup);\par
{\bkmkstart AAAAAAAHZG}{\bkmkend AAAAAAAHZG}
00030         d_this->connect (d_this, SIGNAL (clicked ()), d_this, SLOT (clickedEvent ()));\par
{\bkmkstart AAAAAAAHZH}{\bkmkend AAAAAAAHZH}
00031 \par
{\bkmkstart AAAAAAAHZI}{\bkmkend AAAAAAAHZI}
00032         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAHZJ}{\bkmkend AAAAAAAHZJ}
00033         setType (MX_RADIOBUTTON);\par
{\bkmkstart AAAAAAAHZK}{\bkmkend AAAAAAAHZK}
00034         setParent (parent);\par
{\bkmkstart AAAAAAAHZL}{\bkmkend AAAAAAAHZL}
00035         \par
{\bkmkstart AAAAAAAHZM}{\bkmkend AAAAAAAHZM}
00036         setLabel (label);\par
{\bkmkstart AAAAAAAHZN}{\bkmkend AAAAAAAHZN}
00037         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAHZO}{\bkmkend AAAAAAAHZO}
00038         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAHZP}{\bkmkend AAAAAAAHZP}
00039         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAHZQ}{\bkmkend AAAAAAAHZQ}
00040         setChecked (newGroup);\par
{\bkmkstart AAAAAAAHZR}{\bkmkend AAAAAAAHZR}
00041 \}\par
{\bkmkstart AAAAAAAHZS}{\bkmkend AAAAAAAHZS}
00042 \par
{\bkmkstart AAAAAAAHZT}{\bkmkend AAAAAAAHZT}
00043 \par
{\bkmkstart AAAAAAAHZU}{\bkmkend AAAAAAAHZU}
00044 \par
{\bkmkstart AAAAAAAHZV}{\bkmkend AAAAAAAHZV}
00045 mxRadioButton::~mxRadioButton ()\par
{\bkmkstart AAAAAAAHZW}{\bkmkend AAAAAAAHZW}
00046 \{\par
{\bkmkstart AAAAAAAHZX}{\bkmkend AAAAAAAHZX}
00047         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAHZY}{\bkmkend AAAAAAAHZY}
00048 \}\par
{\bkmkstart AAAAAAAHZZ}{\bkmkend AAAAAAAHZZ}
00049 \par
{\bkmkstart AAAAAAAIAA}{\bkmkend AAAAAAAIAA}
00050 \par
{\bkmkstart AAAAAAAIAB}{\bkmkend AAAAAAAIAB}
00051 \par
{\bkmkstart AAAAAAAIAC}{\bkmkend AAAAAAAIAC}
00052 {\cf18 void}\par
{\bkmkstart AAAAAAAIAD}{\bkmkend AAAAAAAIAD}
00053 mxRadioButton::setChecked ({\cf18 bool} b)\par
{\bkmkstart AAAAAAAIAE}{\bkmkend AAAAAAAIAE}
00054 \{\par
{\bkmkstart AAAAAAAIAF}{\bkmkend AAAAAAAIAF}
00055         QObject::disconnect (d_this, SIGNAL (clicked ()), d_this, SLOT (clickedEvent ()));\par
{\bkmkstart AAAAAAAIAG}{\bkmkend AAAAAAAIAG}
00056         d_this->setChecked (b);\par
{\bkmkstart AAAAAAAIAH}{\bkmkend AAAAAAAIAH}
00057         d_this->connect (d_this, SIGNAL (clicked ()), d_this, SLOT (clickedEvent ()));\par
{\bkmkstart AAAAAAAIAI}{\bkmkend AAAAAAAIAI}
00058 \}\par
{\bkmkstart AAAAAAAIAJ}{\bkmkend AAAAAAAIAJ}
00059 \par
{\bkmkstart AAAAAAAIAK}{\bkmkend AAAAAAAIAK}
00060 \par
{\bkmkstart AAAAAAAIAL}{\bkmkend AAAAAAAIAL}
00061 \par
{\bkmkstart AAAAAAAIAM}{\bkmkend AAAAAAAIAM}
00062 {\cf18 bool}\par
{\bkmkstart AAAAAAAIAN}{\bkmkend AAAAAAAIAN}
00063 mxRadioButton::isChecked (){\cf17  const}\par
{\bkmkstart AAAAAAAIAO}{\bkmkend AAAAAAAIAO}
00064 {\cf17 }\{\par
{\bkmkstart AAAAAAAIAP}{\bkmkend AAAAAAAIAP}
00065         {\cf19 return} d_this->isChecked ();\par
{\bkmkstart AAAAAAAIAQ}{\bkmkend AAAAAAAIAQ}
00066 \}\par
{\bkmkstart AAAAAAAIAR}{\bkmkend AAAAAAAIAR}
00067 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxRadioButton_i.h\par \pard\plain 
{\tc\tcl2 \v mxRadioButton_i.h}
{\xe \v mxRadioButton_i.h}
{\bkmkstart AAAAAAAIAS}
{\bkmkend AAAAAAAIAS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAIAT}{\bkmkend AAAAAAAIAT}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAIAU}{\bkmkend AAAAAAAIAU}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAIAV}{\bkmkend AAAAAAAIAV}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAIAW}{\bkmkend AAAAAAAIAW}
00004 {\cf20 // file:           mxRadioButton_i.h}\par
{\bkmkstart AAAAAAAIAX}{\bkmkend AAAAAAAIAX}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAIAY}{\bkmkend AAAAAAAIAY}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAIAZ}{\bkmkend AAAAAAAIAZ}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAIBA}{\bkmkend AAAAAAAIBA}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAIBB}{\bkmkend AAAAAAAIBB}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAIBC}{\bkmkend AAAAAAAIBC}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAIBD}{\bkmkend AAAAAAAIBD}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAIBE}{\bkmkend AAAAAAAIBE}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAIBF}{\bkmkend AAAAAAAIBF}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAIBG}{\bkmkend AAAAAAAIBG}
00014 {\cf21 #include <mx/mxRadioButton.h>}\par
{\bkmkstart AAAAAAAIBH}{\bkmkend AAAAAAAIBH}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAIBI}{\bkmkend AAAAAAAIBI}
00016 {\cf21 #include <QRadioButton>}\par
{\bkmkstart AAAAAAAIBJ}{\bkmkend AAAAAAAIBJ}
00017 {\cf21 #include <QButtonGroup>}\par
{\bkmkstart AAAAAAAIBK}{\bkmkend AAAAAAAIBK}
00018 \par
{\bkmkstart AAAAAAAIBL}{\bkmkend AAAAAAAIBL}
00019 \par
{\bkmkstart AAAAAAAIBM}{\bkmkend AAAAAAAIBM}
00020 \par
{\bkmkstart AAAAAAAIBN}{\bkmkend AAAAAAAIBN}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHZF" }{}}{\fldrslt {\cs37\ul\cf2 00021}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHZF" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i}}}
 : {\cf17 public} QRadioButton\par
{\bkmkstart AAAAAAAIBO}{\bkmkend AAAAAAAIBO}
00022 \{\par
{\bkmkstart AAAAAAAIBP}{\bkmkend AAAAAAAIBP}
00023         Q_OBJECT\par
{\bkmkstart AAAAAAAIBQ}{\bkmkend AAAAAAAIBQ}
00024         mxRadioButton *d_widget;\par
{\bkmkstart AAAAAAAIBR}{\bkmkend AAAAAAAIBR}
00025         QButtonGroup *d_buttonGroup;\par
{\bkmkstart AAAAAAAIBS}{\bkmkend AAAAAAAIBS}
00026         {\cf17 static} QButtonGroup *s_buttonGroup;\par
{\bkmkstart AAAAAAAIBT}{\bkmkend AAAAAAAIBT}
00027 \par
{\bkmkstart AAAAAAAIBU}{\bkmkend AAAAAAAIBU}
00028 {\cf17 public}:\par
{\bkmkstart AAAAAAAIBV}{\bkmkend AAAAAAAIBV}
00029         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHZF" }{}}{\fldrslt {\cs37\ul\cf2 mxRadioButton_i}}}
 (QWidget *parent, mxRadioButton *widget, {\cf18 bool} newGroup) : QRadioButton (parent)\par
{\bkmkstart AAAAAAAIBW}{\bkmkend AAAAAAAIBW}
00030         \{\par
{\bkmkstart AAAAAAAIBX}{\bkmkend AAAAAAAIBX}
00031                 d_widget = widget;\par
{\bkmkstart AAAAAAAIBY}{\bkmkend AAAAAAAIBY}
00032                 d_buttonGroup = 0;\par
{\bkmkstart AAAAAAAIBZ}{\bkmkend AAAAAAAIBZ}
00033 \par
{\bkmkstart AAAAAAAICA}{\bkmkend AAAAAAAICA}
00034                 {\cf19 if} (newGroup)\par
{\bkmkstart AAAAAAAICB}{\bkmkend AAAAAAAICB}
00035                 \{\par
{\bkmkstart AAAAAAAICC}{\bkmkend AAAAAAAICC}
00036                         d_buttonGroup = {\cf17 new} QButtonGroup ();\par
{\bkmkstart AAAAAAAICD}{\bkmkend AAAAAAAICD}
00037                         d_buttonGroup->setExclusive ({\cf17 true});\par
{\bkmkstart AAAAAAAICE}{\bkmkend AAAAAAAICE}
00038                         s_buttonGroup = d_buttonGroup;\par
{\bkmkstart AAAAAAAICF}{\bkmkend AAAAAAAICF}
00039                 \}\par
{\bkmkstart AAAAAAAICG}{\bkmkend AAAAAAAICG}
00040 \par
{\bkmkstart AAAAAAAICH}{\bkmkend AAAAAAAICH}
00041                 {\cf19 if} (s_buttonGroup)\par
{\bkmkstart AAAAAAAICI}{\bkmkend AAAAAAAICI}
00042                         s_buttonGroup->addButton ({\cf17 this});\par
{\bkmkstart AAAAAAAICJ}{\bkmkend AAAAAAAICJ}
00043         \}\par
{\bkmkstart AAAAAAAICK}{\bkmkend AAAAAAAICK}
00044 \par
{\bkmkstart AAAAAAAICL}{\bkmkend AAAAAAAICL}
00045         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHZF" }{}}{\fldrslt {\cs37\ul\cf2 ~mxRadioButton_i}}}
 ()\par
{\bkmkstart AAAAAAAICM}{\bkmkend AAAAAAAICM}
00046         \{\par
{\bkmkstart AAAAAAAICN}{\bkmkend AAAAAAAICN}
00047                 {\cf19 if} (d_buttonGroup)\par
{\bkmkstart AAAAAAAICO}{\bkmkend AAAAAAAICO}
00048                 \{\par
{\bkmkstart AAAAAAAICP}{\bkmkend AAAAAAAICP}
00049                         d_buttonGroup->removeButton ({\cf17 this});\par
{\bkmkstart AAAAAAAICQ}{\bkmkend AAAAAAAICQ}
00050                 \}\par
{\bkmkstart AAAAAAAICR}{\bkmkend AAAAAAAICR}
00051         \}\par
{\bkmkstart AAAAAAAICS}{\bkmkend AAAAAAAICS}
00052 \par
{\bkmkstart AAAAAAAICT}{\bkmkend AAAAAAAICT}
00053 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAICU}{\bkmkend AAAAAAAICU}
00054         {\cf18 void} clickedEvent ()\par
{\bkmkstart AAAAAAAICV}{\bkmkend AAAAAAAICV}
00055         \{\par
{\bkmkstart AAAAAAAICW}{\bkmkend AAAAAAAICW}
00056                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAICX}{\bkmkend AAAAAAAICX}
00057                 \{\par
{\bkmkstart AAAAAAAICY}{\bkmkend AAAAAAAICY}
00058                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAICZ}{\bkmkend AAAAAAAICZ}
00059                         mxEvent event;\par
{\bkmkstart AAAAAAAIDA}{\bkmkend AAAAAAAIDA}
00060                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAIDB}{\bkmkend AAAAAAAIDB}
00061                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAIDC}{\bkmkend AAAAAAAIDC}
00062                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAIDD}{\bkmkend AAAAAAAIDD}
00063                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAIDE}{\bkmkend AAAAAAAIDE}
00064                         \{\par
{\bkmkstart AAAAAAAIDF}{\bkmkend AAAAAAAIDF}
00065                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAIDG}{\bkmkend AAAAAAAIDG}
00066                                         {\cf19 break};\par
{\bkmkstart AAAAAAAIDH}{\bkmkend AAAAAAAIDH}
00067                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAIDI}{\bkmkend AAAAAAAIDI}
00068                         \}\par
{\bkmkstart AAAAAAAIDJ}{\bkmkend AAAAAAAIDJ}
00069                 \}\par
{\bkmkstart AAAAAAAIDK}{\bkmkend AAAAAAAIDK}
00070         \}\par
{\bkmkstart AAAAAAAIDL}{\bkmkend AAAAAAAIDL}
00071 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxSettings.cpp\par \pard\plain 
{\tc\tcl2 \v mxSettings.cpp}
{\xe \v mxSettings.cpp}
{\bkmkstart AAAAAAAIDM}
{\bkmkend AAAAAAAIDM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAIDN}{\bkmkend AAAAAAAIDN}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAIDO}{\bkmkend AAAAAAAIDO}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAIDP}{\bkmkend AAAAAAAIDP}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAIDQ}{\bkmkend AAAAAAAIDQ}
00004 {\cf20 // file:           mxSettings.cpp}\par
{\bkmkstart AAAAAAAIDR}{\bkmkend AAAAAAAIDR}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAIDS}{\bkmkend AAAAAAAIDS}
00006 {\cf20 // last modified:  Sep 05 2019, Andrey Akhmichin}\par
{\bkmkstart AAAAAAAIDT}{\bkmkend AAAAAAAIDT}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAIDU}{\bkmkend AAAAAAAIDU}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAIDV}{\bkmkend AAAAAAAIDV}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAIDW}{\bkmkend AAAAAAAIDW}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAIDX}{\bkmkend AAAAAAAIDX}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAIDY}{\bkmkend AAAAAAAIDY}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAIDZ}{\bkmkend AAAAAAAIDZ}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAIEA}{\bkmkend AAAAAAAIEA}
00014 {\cf21 #include <mx/mxSettings.h>}\par
{\bkmkstart AAAAAAAIEB}{\bkmkend AAAAAAAIEB}
00015 {\cf21 #include <QSettings>}\par
{\bkmkstart AAAAAAAIEC}{\bkmkend AAAAAAAIEC}
00016 \par
{\bkmkstart AAAAAAAIED}{\bkmkend AAAAAAAIED}
00017 {\cf17 static} QSettings *d_settings;\par
{\bkmkstart AAAAAAAIEE}{\bkmkend AAAAAAAIEE}
00018 \par
{\bkmkstart AAAAAAAIEF}{\bkmkend AAAAAAAIEF}
00019 \par
{\bkmkstart AAAAAAAIEG}{\bkmkend AAAAAAAIEG}
00020 \par
{\bkmkstart AAAAAAAIEH}{\bkmkend AAAAAAAIEH}
00021 {\cf18 void}\par
{\bkmkstart AAAAAAAIEI}{\bkmkend AAAAAAAIEI}
00022 mx_init_usersettings ({\cf17 const} {\cf18 char} *org, {\cf17 const} {\cf18 char} *appName)\par
{\bkmkstart AAAAAAAIEJ}{\bkmkend AAAAAAAIEJ}
00023 \{\par
{\bkmkstart AAAAAAAIEK}{\bkmkend AAAAAAAIEK}
00024         {\cf19 if} (!d_settings)\par
{\bkmkstart AAAAAAAIEL}{\bkmkend AAAAAAAIEL}
00025                 d_settings = {\cf17 new} QSettings (org, appName);\par
{\bkmkstart AAAAAAAIEM}{\bkmkend AAAAAAAIEM}
00026 \}\par
{\bkmkstart AAAAAAAIEN}{\bkmkend AAAAAAAIEN}
00027 \par
{\bkmkstart AAAAAAAIEO}{\bkmkend AAAAAAAIEO}
00028 \par
{\bkmkstart AAAAAAAIEP}{\bkmkend AAAAAAAIEP}
00029 \par
{\bkmkstart AAAAAAAIEQ}{\bkmkend AAAAAAAIEQ}
00030 {\cf18 int}\par
{\bkmkstart AAAAAAAIER}{\bkmkend AAAAAAAIER}
00031 mx_create_usersettings ()\par
{\bkmkstart AAAAAAAIES}{\bkmkend AAAAAAAIES}
00032 \{\par
{\bkmkstart AAAAAAAIET}{\bkmkend AAAAAAAIET}
00033         {\cf19 return} 1;\par
{\bkmkstart AAAAAAAIEU}{\bkmkend AAAAAAAIEU}
00034 \}\par
{\bkmkstart AAAAAAAIEV}{\bkmkend AAAAAAAIEV}
00035 \par
{\bkmkstart AAAAAAAIEW}{\bkmkend AAAAAAAIEW}
00036 \par
{\bkmkstart AAAAAAAIEX}{\bkmkend AAAAAAAIEX}
00037 \par
{\bkmkstart AAAAAAAIEY}{\bkmkend AAAAAAAIEY}
00038 {\cf18 int}\par
{\bkmkstart AAAAAAAIEZ}{\bkmkend AAAAAAAIEZ}
00039 mx_set_usersettings_string ({\cf17 const} {\cf18 char} *lpValueName, {\cf17 const} {\cf18 char} *lpData)\par
{\bkmkstart AAAAAAAIFA}{\bkmkend AAAAAAAIFA}
00040 \{\par
{\bkmkstart AAAAAAAIFB}{\bkmkend AAAAAAAIFB}
00041         d_settings->setValue (lpValueName, lpData);\par
{\bkmkstart AAAAAAAIFC}{\bkmkend AAAAAAAIFC}
00042         d_settings->sync ();\par
{\bkmkstart AAAAAAAIFD}{\bkmkend AAAAAAAIFD}
00043 \par
{\bkmkstart AAAAAAAIFE}{\bkmkend AAAAAAAIFE}
00044         {\cf19 return} 1;\par
{\bkmkstart AAAAAAAIFF}{\bkmkend AAAAAAAIFF}
00045 \}\par
{\bkmkstart AAAAAAAIFG}{\bkmkend AAAAAAAIFG}
00046 \par
{\bkmkstart AAAAAAAIFH}{\bkmkend AAAAAAAIFH}
00047 \par
{\bkmkstart AAAAAAAIFI}{\bkmkend AAAAAAAIFI}
00048 \par
{\bkmkstart AAAAAAAIFJ}{\bkmkend AAAAAAAIFJ}
00049 {\cf18 int}\par
{\bkmkstart AAAAAAAIFK}{\bkmkend AAAAAAAIFK}
00050 mx_get_usersettings_string ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 char} *lpData)\par
{\bkmkstart AAAAAAAIFL}{\bkmkend AAAAAAAIFL}
00051 \{\par
{\bkmkstart AAAAAAAIFM}{\bkmkend AAAAAAAIFM}
00052         strcpy (lpData, qPrintable (d_settings->value (lpValueName, {\cf22 ""}).toString()));\par
{\bkmkstart AAAAAAAIFN}{\bkmkend AAAAAAAIFN}
00053 \par
{\bkmkstart AAAAAAAIFO}{\bkmkend AAAAAAAIFO}
00054         {\cf19 return} 1;\par
{\bkmkstart AAAAAAAIFP}{\bkmkend AAAAAAAIFP}
00055 \}\par
{\bkmkstart AAAAAAAIFQ}{\bkmkend AAAAAAAIFQ}
00056 \par
{\bkmkstart AAAAAAAIFR}{\bkmkend AAAAAAAIFR}
00057 \par
{\bkmkstart AAAAAAAIFS}{\bkmkend AAAAAAAIFS}
00058 \par
{\bkmkstart AAAAAAAIFT}{\bkmkend AAAAAAAIFT}
00059 {\cf18 int}\par
{\bkmkstart AAAAAAAIFU}{\bkmkend AAAAAAAIFU}
00060 mx_set_usersettings_vec4d ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 float} *data)\par
{\bkmkstart AAAAAAAIFV}{\bkmkend AAAAAAAIFV}
00061 \{\par
{\bkmkstart AAAAAAAIFW}{\bkmkend AAAAAAAIFW}
00062         {\cf18 char} buf[MAX_USERSETTINGS_ENTRY_SIZE];\par
{\bkmkstart AAAAAAAIFX}{\bkmkend AAAAAAAIFX}
00063 \par
{\bkmkstart AAAAAAAIFY}{\bkmkend AAAAAAAIFY}
00064         snprintf (buf, {\cf17 sizeof} buf, {\cf22 "%g %g %g %g"}, data[0], data[1], data[2], data[3]);\par
{\bkmkstart AAAAAAAIFZ}{\bkmkend AAAAAAAIFZ}
00065         {\cf19 return} mx_set_usersettings_string (lpValueName, buf);\par
{\bkmkstart AAAAAAAIGA}{\bkmkend AAAAAAAIGA}
00066 \}\par
{\bkmkstart AAAAAAAIGB}{\bkmkend AAAAAAAIGB}
00067 \par
{\bkmkstart AAAAAAAIGC}{\bkmkend AAAAAAAIGC}
00068 \par
{\bkmkstart AAAAAAAIGD}{\bkmkend AAAAAAAIGD}
00069 \par
{\bkmkstart AAAAAAAIGE}{\bkmkend AAAAAAAIGE}
00070 {\cf18 int}\par
{\bkmkstart AAAAAAAIGF}{\bkmkend AAAAAAAIGF}
00071 mx_get_usersettings_vec4d ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 float} *data)\par
{\bkmkstart AAAAAAAIGG}{\bkmkend AAAAAAAIGG}
00072 \{\par
{\bkmkstart AAAAAAAIGH}{\bkmkend AAAAAAAIGH}
00073         {\cf18 int} ret;\par
{\bkmkstart AAAAAAAIGI}{\bkmkend AAAAAAAIGI}
00074         {\cf18 char} buf[MAX_USERSETTINGS_ENTRY_SIZE];\par
{\bkmkstart AAAAAAAIGJ}{\bkmkend AAAAAAAIGJ}
00075 \par
{\bkmkstart AAAAAAAIGK}{\bkmkend AAAAAAAIGK}
00076         ret = mx_get_usersettings_string (lpValueName, buf);\par
{\bkmkstart AAAAAAAIGL}{\bkmkend AAAAAAAIGL}
00077         {\cf19 if} (ret)\par
{\bkmkstart AAAAAAAIGM}{\bkmkend AAAAAAAIGM}
00078                 ret = sscanf (buf, {\cf22 "%g %g %g %g"}, &data[0], &data[1], &data[2], &data[3]);\par
{\bkmkstart AAAAAAAIGN}{\bkmkend AAAAAAAIGN}
00079 \par
{\bkmkstart AAAAAAAIGO}{\bkmkend AAAAAAAIGO}
00080         {\cf19 return} ret;\par
{\bkmkstart AAAAAAAIGP}{\bkmkend AAAAAAAIGP}
00081 \}\par
{\bkmkstart AAAAAAAIGQ}{\bkmkend AAAAAAAIGQ}
00082 \par
{\bkmkstart AAAAAAAIGR}{\bkmkend AAAAAAAIGR}
00083 \par
{\bkmkstart AAAAAAAIGS}{\bkmkend AAAAAAAIGS}
00084 \par
{\bkmkstart AAAAAAAIGT}{\bkmkend AAAAAAAIGT}
00085 {\cf18 int}\par
{\bkmkstart AAAAAAAIGU}{\bkmkend AAAAAAAIGU}
00086 mx_set_usersettings_vec3d ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 float} *data)\par
{\bkmkstart AAAAAAAIGV}{\bkmkend AAAAAAAIGV}
00087 \{\par
{\bkmkstart AAAAAAAIGW}{\bkmkend AAAAAAAIGW}
00088         {\cf18 char} buf[MAX_USERSETTINGS_ENTRY_SIZE];\par
{\bkmkstart AAAAAAAIGX}{\bkmkend AAAAAAAIGX}
00089 \par
{\bkmkstart AAAAAAAIGY}{\bkmkend AAAAAAAIGY}
00090         snprintf (buf, {\cf17 sizeof} buf, {\cf22 "%g %g %g"}, data[0], data[1], data[2]);\par
{\bkmkstart AAAAAAAIGZ}{\bkmkend AAAAAAAIGZ}
00091         {\cf19 return} mx_set_usersettings_string (lpValueName, buf);\par
{\bkmkstart AAAAAAAIHA}{\bkmkend AAAAAAAIHA}
00092 \}\par
{\bkmkstart AAAAAAAIHB}{\bkmkend AAAAAAAIHB}
00093 \par
{\bkmkstart AAAAAAAIHC}{\bkmkend AAAAAAAIHC}
00094 \par
{\bkmkstart AAAAAAAIHD}{\bkmkend AAAAAAAIHD}
00095 \par
{\bkmkstart AAAAAAAIHE}{\bkmkend AAAAAAAIHE}
00096 {\cf18 int}\par
{\bkmkstart AAAAAAAIHF}{\bkmkend AAAAAAAIHF}
00097 mx_get_usersettings_vec3d ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 float} *data)\par
{\bkmkstart AAAAAAAIHG}{\bkmkend AAAAAAAIHG}
00098 \{\par
{\bkmkstart AAAAAAAIHH}{\bkmkend AAAAAAAIHH}
00099         {\cf18 int} ret;\par
{\bkmkstart AAAAAAAIHI}{\bkmkend AAAAAAAIHI}
00100         {\cf18 char} buf[MAX_USERSETTINGS_ENTRY_SIZE];\par
{\bkmkstart AAAAAAAIHJ}{\bkmkend AAAAAAAIHJ}
00101 \par
{\bkmkstart AAAAAAAIHK}{\bkmkend AAAAAAAIHK}
00102         ret = mx_get_usersettings_string (lpValueName, buf);\par
{\bkmkstart AAAAAAAIHL}{\bkmkend AAAAAAAIHL}
00103         {\cf19 if} (ret)\par
{\bkmkstart AAAAAAAIHM}{\bkmkend AAAAAAAIHM}
00104                 ret = sscanf (buf, {\cf22 "%g %g %g"}, &data[0], &data[1], &data[2]);\par
{\bkmkstart AAAAAAAIHN}{\bkmkend AAAAAAAIHN}
00105 \par
{\bkmkstart AAAAAAAIHO}{\bkmkend AAAAAAAIHO}
00106         {\cf19 return} ret;\par
{\bkmkstart AAAAAAAIHP}{\bkmkend AAAAAAAIHP}
00107 \}\par
{\bkmkstart AAAAAAAIHQ}{\bkmkend AAAAAAAIHQ}
00108 \par
{\bkmkstart AAAAAAAIHR}{\bkmkend AAAAAAAIHR}
00109 \par
{\bkmkstart AAAAAAAIHS}{\bkmkend AAAAAAAIHS}
00110 \par
{\bkmkstart AAAAAAAIHT}{\bkmkend AAAAAAAIHT}
00111 {\cf18 int}\par
{\bkmkstart AAAAAAAIHU}{\bkmkend AAAAAAAIHU}
00112 mx_set_usersettings_float ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 float} data)\par
{\bkmkstart AAAAAAAIHV}{\bkmkend AAAAAAAIHV}
00113 \{\par
{\bkmkstart AAAAAAAIHW}{\bkmkend AAAAAAAIHW}
00114         {\cf18 char} buf[MAX_USERSETTINGS_ENTRY_SIZE];\par
{\bkmkstart AAAAAAAIHX}{\bkmkend AAAAAAAIHX}
00115 \par
{\bkmkstart AAAAAAAIHY}{\bkmkend AAAAAAAIHY}
00116         sprintf (buf, {\cf22 "%f"}, data);\par
{\bkmkstart AAAAAAAIHZ}{\bkmkend AAAAAAAIHZ}
00117         {\cf19 return} mx_set_usersettings_string (lpValueName, buf);\par
{\bkmkstart AAAAAAAIIA}{\bkmkend AAAAAAAIIA}
00118 \}\par
{\bkmkstart AAAAAAAIIB}{\bkmkend AAAAAAAIIB}
00119 \par
{\bkmkstart AAAAAAAIIC}{\bkmkend AAAAAAAIIC}
00120 \par
{\bkmkstart AAAAAAAIID}{\bkmkend AAAAAAAIID}
00121 \par
{\bkmkstart AAAAAAAIIE}{\bkmkend AAAAAAAIIE}
00122 {\cf18 int}\par
{\bkmkstart AAAAAAAIIF}{\bkmkend AAAAAAAIIF}
00123 mx_get_usersettings_float ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 float} *data)\par
{\bkmkstart AAAAAAAIIG}{\bkmkend AAAAAAAIIG}
00124 \{\par
{\bkmkstart AAAAAAAIIH}{\bkmkend AAAAAAAIIH}
00125         {\cf18 int} ret;\par
{\bkmkstart AAAAAAAIII}{\bkmkend AAAAAAAIII}
00126         {\cf18 char} buf[MAX_USERSETTINGS_ENTRY_SIZE];\par
{\bkmkstart AAAAAAAIIJ}{\bkmkend AAAAAAAIIJ}
00127 \par
{\bkmkstart AAAAAAAIIK}{\bkmkend AAAAAAAIIK}
00128         ret = mx_get_usersettings_string (lpValueName, buf);\par
{\bkmkstart AAAAAAAIIL}{\bkmkend AAAAAAAIIL}
00129         {\cf19 if} (ret)\par
{\bkmkstart AAAAAAAIIM}{\bkmkend AAAAAAAIIM}
00130                 ret = sscanf (buf, {\cf22 "%f"}, data);\par
{\bkmkstart AAAAAAAIIN}{\bkmkend AAAAAAAIIN}
00131 \par
{\bkmkstart AAAAAAAIIO}{\bkmkend AAAAAAAIIO}
00132         {\cf19 return} ret;\par
{\bkmkstart AAAAAAAIIP}{\bkmkend AAAAAAAIIP}
00133 \}\par
{\bkmkstart AAAAAAAIIQ}{\bkmkend AAAAAAAIIQ}
00134 \par
{\bkmkstart AAAAAAAIIR}{\bkmkend AAAAAAAIIR}
00135 \par
{\bkmkstart AAAAAAAIIS}{\bkmkend AAAAAAAIIS}
00136 \par
{\bkmkstart AAAAAAAIIT}{\bkmkend AAAAAAAIIT}
00137 {\cf18 int}\par
{\bkmkstart AAAAAAAIIU}{\bkmkend AAAAAAAIIU}
00138 mx_set_usersettings_int ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 int} data)\par
{\bkmkstart AAAAAAAIIV}{\bkmkend AAAAAAAIIV}
00139 \{\par
{\bkmkstart AAAAAAAIIW}{\bkmkend AAAAAAAIIW}
00140         {\cf18 char} buf[MAX_USERSETTINGS_ENTRY_SIZE];\par
{\bkmkstart AAAAAAAIIX}{\bkmkend AAAAAAAIIX}
00141 \par
{\bkmkstart AAAAAAAIIY}{\bkmkend AAAAAAAIIY}
00142         sprintf (buf, {\cf22 "%d"}, data);\par
{\bkmkstart AAAAAAAIIZ}{\bkmkend AAAAAAAIIZ}
00143         {\cf19 return} mx_set_usersettings_string (lpValueName, buf);\par
{\bkmkstart AAAAAAAIJA}{\bkmkend AAAAAAAIJA}
00144 \}\par
{\bkmkstart AAAAAAAIJB}{\bkmkend AAAAAAAIJB}
00145 \par
{\bkmkstart AAAAAAAIJC}{\bkmkend AAAAAAAIJC}
00146 \par
{\bkmkstart AAAAAAAIJD}{\bkmkend AAAAAAAIJD}
00147 \par
{\bkmkstart AAAAAAAIJE}{\bkmkend AAAAAAAIJE}
00148 {\cf18 int}\par
{\bkmkstart AAAAAAAIJF}{\bkmkend AAAAAAAIJF}
00149 mx_get_usersettings_int ({\cf17 const} {\cf18 char} *lpValueName, {\cf18 int} *data)\par
{\bkmkstart AAAAAAAIJG}{\bkmkend AAAAAAAIJG}
00150 \{\par
{\bkmkstart AAAAAAAIJH}{\bkmkend AAAAAAAIJH}
00151         {\cf18 int} ret;\par
{\bkmkstart AAAAAAAIJI}{\bkmkend AAAAAAAIJI}
00152         {\cf18 char} buf[MAX_USERSETTINGS_ENTRY_SIZE];\par
{\bkmkstart AAAAAAAIJJ}{\bkmkend AAAAAAAIJJ}
00153 \par
{\bkmkstart AAAAAAAIJK}{\bkmkend AAAAAAAIJK}
00154         ret = mx_get_usersettings_string (lpValueName, buf);\par
{\bkmkstart AAAAAAAIJL}{\bkmkend AAAAAAAIJL}
00155         {\cf19 if} (ret)\par
{\bkmkstart AAAAAAAIJM}{\bkmkend AAAAAAAIJM}
00156                 ret = sscanf (buf, {\cf22 "%d"}, data);\par
{\bkmkstart AAAAAAAIJN}{\bkmkend AAAAAAAIJN}
00157 \par
{\bkmkstart AAAAAAAIJO}{\bkmkend AAAAAAAIJO}
00158         {\cf19 return} ret;\par
{\bkmkstart AAAAAAAIJP}{\bkmkend AAAAAAAIJP}
00159 \}\par
{\bkmkstart AAAAAAAIJQ}{\bkmkend AAAAAAAIJQ}
00160 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxSlider.cpp\par \pard\plain 
{\tc\tcl2 \v mxSlider.cpp}
{\xe \v mxSlider.cpp}
{\bkmkstart AAAAAAAIJR}
{\bkmkend AAAAAAAIJR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAIJS}{\bkmkend AAAAAAAIJS}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAIJT}{\bkmkend AAAAAAAIJT}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAIJU}{\bkmkend AAAAAAAIJU}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAIJV}{\bkmkend AAAAAAAIJV}
00004 {\cf20 // file:           mxSlider.cpp}\par
{\bkmkstart AAAAAAAIJW}{\bkmkend AAAAAAAIJW}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAIJX}{\bkmkend AAAAAAAIJX}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAIJY}{\bkmkend AAAAAAAIJY}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAIJZ}{\bkmkend AAAAAAAIJZ}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAIKA}{\bkmkend AAAAAAAIKA}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAIKB}{\bkmkend AAAAAAAIKB}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAIKC}{\bkmkend AAAAAAAIKC}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAIKD}{\bkmkend AAAAAAAIKD}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAIKE}{\bkmkend AAAAAAAIKE}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAIKF}{\bkmkend AAAAAAAIKF}
00014 {\cf21 #include "mxSlider_i.h"}\par
{\bkmkstart AAAAAAAIKG}{\bkmkend AAAAAAAIKG}
00015 \par
{\bkmkstart AAAAAAAIKH}{\bkmkend AAAAAAAIKH}
00016 \par
{\bkmkstart AAAAAAAIKI}{\bkmkend AAAAAAAIKI}
00017 \par
{\bkmkstart AAAAAAAIKJ}{\bkmkend AAAAAAAIKJ}
00018 mxSlider::mxSlider (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf18 int} {\cf18 id}, {\cf18 int} style)\par
{\bkmkstart AAAAAAAIKK}{\bkmkend AAAAAAAIKK}
00019 : mxWidget (parent, x, y, w, h)\par
{\bkmkstart AAAAAAAIKL}{\bkmkend AAAAAAAIKL}
00020 \{\par
{\bkmkstart AAAAAAAIKM}{\bkmkend AAAAAAAIKM}
00021         QWidget *p = 0;\par
{\bkmkstart AAAAAAAIKN}{\bkmkend AAAAAAAIKN}
00022         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAIKO}{\bkmkend AAAAAAAIKO}
00023                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAIKP}{\bkmkend AAAAAAAIKP}
00024 \par
{\bkmkstart AAAAAAAIKQ}{\bkmkend AAAAAAAIKQ}
00025         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIKR" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAIKS}{\bkmkend AAAAAAAIKS}
00026         {\cf19 if} (style == Horizontal)\par
{\bkmkstart AAAAAAAIKT}{\bkmkend AAAAAAAIKT}
00027         \{\par
{\bkmkstart AAAAAAAIKU}{\bkmkend AAAAAAAIKU}
00028                 d_this->setOrientation(Qt::Horizontal);\par
{\bkmkstart AAAAAAAIKV}{\bkmkend AAAAAAAIKV}
00029                 d_this->setTickPosition (QSlider::TicksRight);\par
{\bkmkstart AAAAAAAIKW}{\bkmkend AAAAAAAIKW}
00030         \}\par
{\bkmkstart AAAAAAAIKX}{\bkmkend AAAAAAAIKX}
00031         {\cf19 else} {\cf19 if} (style == Vertical)\par
{\bkmkstart AAAAAAAIKY}{\bkmkend AAAAAAAIKY}
00032         \{\par
{\bkmkstart AAAAAAAIKZ}{\bkmkend AAAAAAAIKZ}
00033                 d_this->setOrientation(Qt::Vertical);\par
{\bkmkstart AAAAAAAILA}{\bkmkend AAAAAAAILA}
00034                 d_this->setTickPosition (QSlider::TicksBelow);\par
{\bkmkstart AAAAAAAILB}{\bkmkend AAAAAAAILB}
00035         \}\par
{\bkmkstart AAAAAAAILC}{\bkmkend AAAAAAAILC}
00036         d_this->connect (d_this, SIGNAL (valueChanged ({\cf18 int})), d_this, SLOT (valueChangedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAILD}{\bkmkend AAAAAAAILD}
00037 \par
{\bkmkstart AAAAAAAILE}{\bkmkend AAAAAAAILE}
00038         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAILF}{\bkmkend AAAAAAAILF}
00039         setType (MX_SLIDER);\par
{\bkmkstart AAAAAAAILG}{\bkmkend AAAAAAAILG}
00040         setParent (parent);\par
{\bkmkstart AAAAAAAILH}{\bkmkend AAAAAAAILH}
00041         \par
{\bkmkstart AAAAAAAILI}{\bkmkend AAAAAAAILI}
00042         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAILJ}{\bkmkend AAAAAAAILJ}
00043         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAILK}{\bkmkend AAAAAAAILK}
00044         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAILL}{\bkmkend AAAAAAAILL}
00045 \}\par
{\bkmkstart AAAAAAAILM}{\bkmkend AAAAAAAILM}
00046 \par
{\bkmkstart AAAAAAAILN}{\bkmkend AAAAAAAILN}
00047 \par
{\bkmkstart AAAAAAAILO}{\bkmkend AAAAAAAILO}
00048 \par
{\bkmkstart AAAAAAAILP}{\bkmkend AAAAAAAILP}
00049 mxSlider::~mxSlider ()\par
{\bkmkstart AAAAAAAILQ}{\bkmkend AAAAAAAILQ}
00050 \{\par
{\bkmkstart AAAAAAAILR}{\bkmkend AAAAAAAILR}
00051         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAILS}{\bkmkend AAAAAAAILS}
00052 \}\par
{\bkmkstart AAAAAAAILT}{\bkmkend AAAAAAAILT}
00053 \par
{\bkmkstart AAAAAAAILU}{\bkmkend AAAAAAAILU}
00054 \par
{\bkmkstart AAAAAAAILV}{\bkmkend AAAAAAAILV}
00055 \par
{\bkmkstart AAAAAAAILW}{\bkmkend AAAAAAAILW}
00056 {\cf18 void}\par
{\bkmkstart AAAAAAAILX}{\bkmkend AAAAAAAILX}
00057 mxSlider::setValue ({\cf18 int} value)\par
{\bkmkstart AAAAAAAILY}{\bkmkend AAAAAAAILY}
00058 \{\par
{\bkmkstart AAAAAAAILZ}{\bkmkend AAAAAAAILZ}
00059         QObject::disconnect (d_this, SIGNAL (valueChanged ({\cf18 int})), d_this, SLOT (valueChangedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAIMA}{\bkmkend AAAAAAAIMA}
00060         d_this->setValue (value);\par
{\bkmkstart AAAAAAAIMB}{\bkmkend AAAAAAAIMB}
00061         d_this->connect (d_this, SIGNAL (valueChanged ({\cf18 int})), d_this, SLOT (valueChangedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAIMC}{\bkmkend AAAAAAAIMC}
00062 \}\par
{\bkmkstart AAAAAAAIMD}{\bkmkend AAAAAAAIMD}
00063 \par
{\bkmkstart AAAAAAAIME}{\bkmkend AAAAAAAIME}
00064 \par
{\bkmkstart AAAAAAAIMF}{\bkmkend AAAAAAAIMF}
00065 \par
{\bkmkstart AAAAAAAIMG}{\bkmkend AAAAAAAIMG}
00066 {\cf18 void}\par
{\bkmkstart AAAAAAAIMH}{\bkmkend AAAAAAAIMH}
00067 mxSlider::setRange ({\cf18 int} min, {\cf18 int} max)\par
{\bkmkstart AAAAAAAIMI}{\bkmkend AAAAAAAIMI}
00068 \{\par
{\bkmkstart AAAAAAAIMJ}{\bkmkend AAAAAAAIMJ}
00069         QObject::disconnect (d_this, SIGNAL (valueChanged ({\cf18 int})), d_this, SLOT (valueChangedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAIMK}{\bkmkend AAAAAAAIMK}
00070         d_this->setRange (min, max);\par
{\bkmkstart AAAAAAAIML}{\bkmkend AAAAAAAIML}
00071         d_this->connect (d_this, SIGNAL (valueChanged ({\cf18 int})), d_this, SLOT (valueChangedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAIMM}{\bkmkend AAAAAAAIMM}
00072 \}\par
{\bkmkstart AAAAAAAIMN}{\bkmkend AAAAAAAIMN}
00073 \par
{\bkmkstart AAAAAAAIMO}{\bkmkend AAAAAAAIMO}
00074 \par
{\bkmkstart AAAAAAAIMP}{\bkmkend AAAAAAAIMP}
00075 \par
{\bkmkstart AAAAAAAIMQ}{\bkmkend AAAAAAAIMQ}
00076 {\cf18 void}\par
{\bkmkstart AAAAAAAIMR}{\bkmkend AAAAAAAIMR}
00077 mxSlider::setSteps ({\cf18 int} line, {\cf18 int} page)\par
{\bkmkstart AAAAAAAIMS}{\bkmkend AAAAAAAIMS}
00078 \{\par
{\bkmkstart AAAAAAAIMT}{\bkmkend AAAAAAAIMT}
00079         QObject::disconnect (d_this, SIGNAL (valueChanged ({\cf18 int})), d_this, SLOT (valueChangedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAIMU}{\bkmkend AAAAAAAIMU}
00080         {\cf20 //d_this->setSteps (line, page);}\par
{\bkmkstart AAAAAAAIMV}{\bkmkend AAAAAAAIMV}
00081         d_this->setSingleStep(line);\par
{\bkmkstart AAAAAAAIMW}{\bkmkend AAAAAAAIMW}
00082         d_this->setPageStep(page);\par
{\bkmkstart AAAAAAAIMX}{\bkmkend AAAAAAAIMX}
00083         d_this->connect (d_this, SIGNAL (valueChanged ({\cf18 int})), d_this, SLOT (valueChangedEvent ({\cf18 int})));\par
{\bkmkstart AAAAAAAIMY}{\bkmkend AAAAAAAIMY}
00084 \}\par
{\bkmkstart AAAAAAAIMZ}{\bkmkend AAAAAAAIMZ}
00085 \par
{\bkmkstart AAAAAAAINA}{\bkmkend AAAAAAAINA}
00086 \par
{\bkmkstart AAAAAAAINB}{\bkmkend AAAAAAAINB}
00087 \par
{\bkmkstart AAAAAAAINC}{\bkmkend AAAAAAAINC}
00088 {\cf18 int}\par
{\bkmkstart AAAAAAAIND}{\bkmkend AAAAAAAIND}
00089 mxSlider::getValue (){\cf17  const}\par
{\bkmkstart AAAAAAAINE}{\bkmkend AAAAAAAINE}
00090 {\cf17 }\{\par
{\bkmkstart AAAAAAAINF}{\bkmkend AAAAAAAINF}
00091         {\cf19 return} d_this->value ();\par
{\bkmkstart AAAAAAAING}{\bkmkend AAAAAAAING}
00092 \}\par
{\bkmkstart AAAAAAAINH}{\bkmkend AAAAAAAINH}
00093 \par
{\bkmkstart AAAAAAAINI}{\bkmkend AAAAAAAINI}
00094 \par
{\bkmkstart AAAAAAAINJ}{\bkmkend AAAAAAAINJ}
00095 \par
{\bkmkstart AAAAAAAINK}{\bkmkend AAAAAAAINK}
00096 {\cf18 int}\par
{\bkmkstart AAAAAAAINL}{\bkmkend AAAAAAAINL}
00097 mxSlider::getMinValue (){\cf17  const}\par
{\bkmkstart AAAAAAAINM}{\bkmkend AAAAAAAINM}
00098 {\cf17 }\{\par
{\bkmkstart AAAAAAAINN}{\bkmkend AAAAAAAINN}
00099         {\cf19 return} d_this->minimum ();\par
{\bkmkstart AAAAAAAINO}{\bkmkend AAAAAAAINO}
00100 \}\par
{\bkmkstart AAAAAAAINP}{\bkmkend AAAAAAAINP}
00101 \par
{\bkmkstart AAAAAAAINQ}{\bkmkend AAAAAAAINQ}
00102 \par
{\bkmkstart AAAAAAAINR}{\bkmkend AAAAAAAINR}
00103 \par
{\bkmkstart AAAAAAAINS}{\bkmkend AAAAAAAINS}
00104 {\cf18 int}\par
{\bkmkstart AAAAAAAINT}{\bkmkend AAAAAAAINT}
00105 mxSlider::getMaxValue (){\cf17  const}\par
{\bkmkstart AAAAAAAINU}{\bkmkend AAAAAAAINU}
00106 {\cf17 }\{\par
{\bkmkstart AAAAAAAINV}{\bkmkend AAAAAAAINV}
00107         {\cf19 return} d_this->maximum ();\par
{\bkmkstart AAAAAAAINW}{\bkmkend AAAAAAAINW}
00108 \}\par
{\bkmkstart AAAAAAAINX}{\bkmkend AAAAAAAINX}
00109 \par
{\bkmkstart AAAAAAAINY}{\bkmkend AAAAAAAINY}
00110 \par
{\bkmkstart AAAAAAAINZ}{\bkmkend AAAAAAAINZ}
00111 \par
{\bkmkstart AAAAAAAIOA}{\bkmkend AAAAAAAIOA}
00112 {\cf18 int}\par
{\bkmkstart AAAAAAAIOB}{\bkmkend AAAAAAAIOB}
00113 mxSlider::getLineStep (){\cf17  const}\par
{\bkmkstart AAAAAAAIOC}{\bkmkend AAAAAAAIOC}
00114 {\cf17 }\{\par
{\bkmkstart AAAAAAAIOD}{\bkmkend AAAAAAAIOD}
00115         {\cf19 return} d_this->singleStep ();\par
{\bkmkstart AAAAAAAIOE}{\bkmkend AAAAAAAIOE}
00116 \}\par
{\bkmkstart AAAAAAAIOF}{\bkmkend AAAAAAAIOF}
00117 \par
{\bkmkstart AAAAAAAIOG}{\bkmkend AAAAAAAIOG}
00118 \par
{\bkmkstart AAAAAAAIOH}{\bkmkend AAAAAAAIOH}
00119 \par
{\bkmkstart AAAAAAAIOI}{\bkmkend AAAAAAAIOI}
00120 {\cf18 int}\par
{\bkmkstart AAAAAAAIOJ}{\bkmkend AAAAAAAIOJ}
00121 mxSlider::getPageStep (){\cf17  const}\par
{\bkmkstart AAAAAAAIOK}{\bkmkend AAAAAAAIOK}
00122 {\cf17 }\{\par
{\bkmkstart AAAAAAAIOL}{\bkmkend AAAAAAAIOL}
00123         {\cf19 return} d_this->pageStep ();\par
{\bkmkstart AAAAAAAIOM}{\bkmkend AAAAAAAIOM}
00124 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxSlider_i.h\par \pard\plain 
{\tc\tcl2 \v mxSlider_i.h}
{\xe \v mxSlider_i.h}
{\bkmkstart AAAAAAAION}
{\bkmkend AAAAAAAION}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAIOO}{\bkmkend AAAAAAAIOO}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAIOP}{\bkmkend AAAAAAAIOP}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAIOQ}{\bkmkend AAAAAAAIOQ}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAIOR}{\bkmkend AAAAAAAIOR}
00004 {\cf20 // file:           mxSlider_i.h}\par
{\bkmkstart AAAAAAAIOS}{\bkmkend AAAAAAAIOS}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAIOT}{\bkmkend AAAAAAAIOT}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAIOU}{\bkmkend AAAAAAAIOU}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAIOV}{\bkmkend AAAAAAAIOV}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAIOW}{\bkmkend AAAAAAAIOW}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAIOX}{\bkmkend AAAAAAAIOX}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAIOY}{\bkmkend AAAAAAAIOY}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAIOZ}{\bkmkend AAAAAAAIOZ}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAIPA}{\bkmkend AAAAAAAIPA}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAIPB}{\bkmkend AAAAAAAIPB}
00014 {\cf21 #include <mx/mxSlider.h>}\par
{\bkmkstart AAAAAAAIPC}{\bkmkend AAAAAAAIPC}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAIPD}{\bkmkend AAAAAAAIPD}
00016 {\cf21 #include <QSlider>}\par
{\bkmkstart AAAAAAAIPE}{\bkmkend AAAAAAAIPE}
00017 \par
{\bkmkstart AAAAAAAIPF}{\bkmkend AAAAAAAIPF}
00018 \par
{\bkmkstart AAAAAAAIPG}{\bkmkend AAAAAAAIPG}
00019 \par
{\bkmkstart AAAAAAAIPH}{\bkmkend AAAAAAAIPH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIKR" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIKR" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i}}}
 : {\cf17 public} QSlider\par
{\bkmkstart AAAAAAAIPI}{\bkmkend AAAAAAAIPI}
00021 \{\par
{\bkmkstart AAAAAAAIPJ}{\bkmkend AAAAAAAIPJ}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAIPK}{\bkmkend AAAAAAAIPK}
00023         mxSlider *d_widget;\par
{\bkmkstart AAAAAAAIPL}{\bkmkend AAAAAAAIPL}
00024 \par
{\bkmkstart AAAAAAAIPM}{\bkmkend AAAAAAAIPM}
00025 {\cf17 public}:\par
{\bkmkstart AAAAAAAIPN}{\bkmkend AAAAAAAIPN}
00026         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIKR" }{}}{\fldrslt {\cs37\ul\cf2 mxSlider_i}}}
 (QWidget *parent, mxSlider *widget) : QSlider (parent)\par
{\bkmkstart AAAAAAAIPO}{\bkmkend AAAAAAAIPO}
00027         \{\par
{\bkmkstart AAAAAAAIPP}{\bkmkend AAAAAAAIPP}
00028                 d_widget = widget;\par
{\bkmkstart AAAAAAAIPQ}{\bkmkend AAAAAAAIPQ}
00029         \}\par
{\bkmkstart AAAAAAAIPR}{\bkmkend AAAAAAAIPR}
00030 \par
{\bkmkstart AAAAAAAIPS}{\bkmkend AAAAAAAIPS}
00031         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIKR" }{}}{\fldrslt {\cs37\ul\cf2 ~mxSlider_i}}}
 ()\par
{\bkmkstart AAAAAAAIPT}{\bkmkend AAAAAAAIPT}
00032         \{\par
{\bkmkstart AAAAAAAIPU}{\bkmkend AAAAAAAIPU}
00033         \}\par
{\bkmkstart AAAAAAAIPV}{\bkmkend AAAAAAAIPV}
00034 \par
{\bkmkstart AAAAAAAIPW}{\bkmkend AAAAAAAIPW}
00035 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAIPX}{\bkmkend AAAAAAAIPX}
00036         {\cf18 void} valueChangedEvent ({\cf18 int} value)\par
{\bkmkstart AAAAAAAIPY}{\bkmkend AAAAAAAIPY}
00037         \{\par
{\bkmkstart AAAAAAAIPZ}{\bkmkend AAAAAAAIPZ}
00038                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAIQA}{\bkmkend AAAAAAAIQA}
00039                 \{\par
{\bkmkstart AAAAAAAIQB}{\bkmkend AAAAAAAIQB}
00040                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAIQC}{\bkmkend AAAAAAAIQC}
00041                         mxEvent event;\par
{\bkmkstart AAAAAAAIQD}{\bkmkend AAAAAAAIQD}
00042                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAIQE}{\bkmkend AAAAAAAIQE}
00043                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAIQF}{\bkmkend AAAAAAAIQF}
00044                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAIQG}{\bkmkend AAAAAAAIQG}
00045                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAIQH}{\bkmkend AAAAAAAIQH}
00046                         \{\par
{\bkmkstart AAAAAAAIQI}{\bkmkend AAAAAAAIQI}
00047                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAIQJ}{\bkmkend AAAAAAAIQJ}
00048                                         {\cf19 break};\par
{\bkmkstart AAAAAAAIQK}{\bkmkend AAAAAAAIQK}
00049                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAIQL}{\bkmkend AAAAAAAIQL}
00050                         \}\par
{\bkmkstart AAAAAAAIQM}{\bkmkend AAAAAAAIQM}
00051                 \}\par
{\bkmkstart AAAAAAAIQN}{\bkmkend AAAAAAAIQN}
00052         \}\par
{\bkmkstart AAAAAAAIQO}{\bkmkend AAAAAAAIQO}
00053 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxTab.cpp\par \pard\plain 
{\tc\tcl2 \v mxTab.cpp}
{\xe \v mxTab.cpp}
{\bkmkstart AAAAAAAIQP}
{\bkmkend AAAAAAAIQP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAIQQ}{\bkmkend AAAAAAAIQQ}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAIQR}{\bkmkend AAAAAAAIQR}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAIQS}{\bkmkend AAAAAAAIQS}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAIQT}{\bkmkend AAAAAAAIQT}
00004 {\cf20 // file:           mxTab.cpp}\par
{\bkmkstart AAAAAAAIQU}{\bkmkend AAAAAAAIQU}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAIQV}{\bkmkend AAAAAAAIQV}
00006 {\cf20 // last modified:  Apr 20 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAIQW}{\bkmkend AAAAAAAIQW}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAIQX}{\bkmkend AAAAAAAIQX}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAIQY}{\bkmkend AAAAAAAIQY}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAIQZ}{\bkmkend AAAAAAAIQZ}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAIRA}{\bkmkend AAAAAAAIRA}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAIRB}{\bkmkend AAAAAAAIRB}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAIRC}{\bkmkend AAAAAAAIRC}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAIRD}{\bkmkend AAAAAAAIRD}
00014 {\cf21 #include "mxTab_i.h"}\par
{\bkmkstart AAAAAAAIRE}{\bkmkend AAAAAAAIRE}
00015 \par
{\bkmkstart AAAAAAAIRF}{\bkmkend AAAAAAAIRF}
00016 \par
{\bkmkstart AAAAAAAIRG}{\bkmkend AAAAAAAIRG}
00017 \par
{\bkmkstart AAAAAAAIRH}{\bkmkend AAAAAAAIRH}
00018 mxTab::mxTab (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAIRI}{\bkmkend AAAAAAAIRI}
00019 : mxWidget (parent, x, y, w, h)\par
{\bkmkstart AAAAAAAIRJ}{\bkmkend AAAAAAAIRJ}
00020 \{\par
{\bkmkstart AAAAAAAIRK}{\bkmkend AAAAAAAIRK}
00021         QWidget *p = 0;\par
{\bkmkstart AAAAAAAIRL}{\bkmkend AAAAAAAIRL}
00022         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAIRM}{\bkmkend AAAAAAAIRM}
00023                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAIRN}{\bkmkend AAAAAAAIRN}
00024         \par
{\bkmkstart AAAAAAAIRO}{\bkmkend AAAAAAAIRO}
00025         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIRP" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAIRQ}{\bkmkend AAAAAAAIRQ}
00026         d_this->connect(d_this, SIGNAL(tabBarClicked({\cf18 int})), d_this, SLOT(tabBarClickedEvent({\cf18 int})));\par
{\bkmkstart AAAAAAAIRR}{\bkmkend AAAAAAAIRR}
00027 \par
{\bkmkstart AAAAAAAIRS}{\bkmkend AAAAAAAIRS}
00028         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAIRT}{\bkmkend AAAAAAAIRT}
00029         setType (MX_TAB);\par
{\bkmkstart AAAAAAAIRU}{\bkmkend AAAAAAAIRU}
00030         setParent (parent);\par
{\bkmkstart AAAAAAAIRV}{\bkmkend AAAAAAAIRV}
00031         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAIRW}{\bkmkend AAAAAAAIRW}
00032         \par
{\bkmkstart AAAAAAAIRX}{\bkmkend AAAAAAAIRX}
00033         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAIRY}{\bkmkend AAAAAAAIRY}
00034         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAIRZ}{\bkmkend AAAAAAAIRZ}
00035 \}\par
{\bkmkstart AAAAAAAISA}{\bkmkend AAAAAAAISA}
00036 \par
{\bkmkstart AAAAAAAISB}{\bkmkend AAAAAAAISB}
00037 \par
{\bkmkstart AAAAAAAISC}{\bkmkend AAAAAAAISC}
00038 \par
{\bkmkstart AAAAAAAISD}{\bkmkend AAAAAAAISD}
00039 mxTab::~mxTab ()\par
{\bkmkstart AAAAAAAISE}{\bkmkend AAAAAAAISE}
00040 \{\par
{\bkmkstart AAAAAAAISF}{\bkmkend AAAAAAAISF}
00041         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAISG}{\bkmkend AAAAAAAISG}
00042 \}\par
{\bkmkstart AAAAAAAISH}{\bkmkend AAAAAAAISH}
00043 \par
{\bkmkstart AAAAAAAISI}{\bkmkend AAAAAAAISI}
00044 \par
{\bkmkstart AAAAAAAISJ}{\bkmkend AAAAAAAISJ}
00045 \par
{\bkmkstart AAAAAAAISK}{\bkmkend AAAAAAAISK}
00046 {\cf18 void}\par
{\bkmkstart AAAAAAAISL}{\bkmkend AAAAAAAISL}
00047 mxTab::add (mxWidget *widget, {\cf17 const} {\cf18 char} *text)\par
{\bkmkstart AAAAAAAISM}{\bkmkend AAAAAAAISM}
00048 \{\par
{\bkmkstart AAAAAAAISN}{\bkmkend AAAAAAAISN}
00049         {\cf19 if} (!widget)\par
{\bkmkstart AAAAAAAISO}{\bkmkend AAAAAAAISO}
00050                 {\cf19 return};\par
{\bkmkstart AAAAAAAISP}{\bkmkend AAAAAAAISP}
00051                 \par
{\bkmkstart AAAAAAAISQ}{\bkmkend AAAAAAAISQ}
00052         d_this->addTab ((QWidget *) widget->getHandle (), text);\par
{\bkmkstart AAAAAAAISR}{\bkmkend AAAAAAAISR}
00053 \}\par
{\bkmkstart AAAAAAAISS}{\bkmkend AAAAAAAISS}
00054 \par
{\bkmkstart AAAAAAAIST}{\bkmkend AAAAAAAIST}
00055 \par
{\bkmkstart AAAAAAAISU}{\bkmkend AAAAAAAISU}
00056 \par
{\bkmkstart AAAAAAAISV}{\bkmkend AAAAAAAISV}
00057 {\cf18 void}\par
{\bkmkstart AAAAAAAISW}{\bkmkend AAAAAAAISW}
00058 mxTab::remove ({\cf18 int} index)\par
{\bkmkstart AAAAAAAISX}{\bkmkend AAAAAAAISX}
00059 \{\par
{\bkmkstart AAAAAAAISY}{\bkmkend AAAAAAAISY}
00060         d_this->removeTab (index);\par
{\bkmkstart AAAAAAAISZ}{\bkmkend AAAAAAAISZ}
00061         d_this->select (d_this->currentIndex ());\par
{\bkmkstart AAAAAAAITA}{\bkmkend AAAAAAAITA}
00062 \}\par
{\bkmkstart AAAAAAAITB}{\bkmkend AAAAAAAITB}
00063 \par
{\bkmkstart AAAAAAAITC}{\bkmkend AAAAAAAITC}
00064 \par
{\bkmkstart AAAAAAAITD}{\bkmkend AAAAAAAITD}
00065 \par
{\bkmkstart AAAAAAAITE}{\bkmkend AAAAAAAITE}
00066 {\cf18 void}\par
{\bkmkstart AAAAAAAITF}{\bkmkend AAAAAAAITF}
00067 mxTab::select ({\cf18 int} index)\par
{\bkmkstart AAAAAAAITG}{\bkmkend AAAAAAAITG}
00068 \{\par
{\bkmkstart AAAAAAAITH}{\bkmkend AAAAAAAITH}
00069         d_this->setCurrentIndex (index);\par
{\bkmkstart AAAAAAAITI}{\bkmkend AAAAAAAITI}
00070         d_this->select (index);\par
{\bkmkstart AAAAAAAITJ}{\bkmkend AAAAAAAITJ}
00071 \}\par
{\bkmkstart AAAAAAAITK}{\bkmkend AAAAAAAITK}
00072 \par
{\bkmkstart AAAAAAAITL}{\bkmkend AAAAAAAITL}
00073 \par
{\bkmkstart AAAAAAAITM}{\bkmkend AAAAAAAITM}
00074 \par
{\bkmkstart AAAAAAAITN}{\bkmkend AAAAAAAITN}
00075 {\cf18 int}\par
{\bkmkstart AAAAAAAITO}{\bkmkend AAAAAAAITO}
00076 mxTab::getSelectedIndex (){\cf17  const}\par
{\bkmkstart AAAAAAAITP}{\bkmkend AAAAAAAITP}
00077 {\cf17 }\{\par
{\bkmkstart AAAAAAAITQ}{\bkmkend AAAAAAAITQ}
00078         {\cf19 return} d_this->getSelectedIndex ();\par
{\bkmkstart AAAAAAAITR}{\bkmkend AAAAAAAITR}
00079 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxTab_i.h\par \pard\plain 
{\tc\tcl2 \v mxTab_i.h}
{\xe \v mxTab_i.h}
{\bkmkstart AAAAAAAITS}
{\bkmkend AAAAAAAITS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAITT}{\bkmkend AAAAAAAITT}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAITU}{\bkmkend AAAAAAAITU}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAITV}{\bkmkend AAAAAAAITV}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAITW}{\bkmkend AAAAAAAITW}
00004 {\cf20 // file:           mxTab_i.h}\par
{\bkmkstart AAAAAAAITX}{\bkmkend AAAAAAAITX}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAITY}{\bkmkend AAAAAAAITY}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAITZ}{\bkmkend AAAAAAAITZ}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAIUA}{\bkmkend AAAAAAAIUA}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAIUB}{\bkmkend AAAAAAAIUB}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAIUC}{\bkmkend AAAAAAAIUC}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAIUD}{\bkmkend AAAAAAAIUD}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAIUE}{\bkmkend AAAAAAAIUE}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAIUF}{\bkmkend AAAAAAAIUF}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAIUG}{\bkmkend AAAAAAAIUG}
00014 {\cf21 #include <mx/mxTab.h>}\par
{\bkmkstart AAAAAAAIUH}{\bkmkend AAAAAAAIUH}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAIUI}{\bkmkend AAAAAAAIUI}
00016 {\cf21 #include <QTabWidget>}\par
{\bkmkstart AAAAAAAIUJ}{\bkmkend AAAAAAAIUJ}
00017 \par
{\bkmkstart AAAAAAAIUK}{\bkmkend AAAAAAAIUK}
00018 \par
{\bkmkstart AAAAAAAIUL}{\bkmkend AAAAAAAIUL}
00019 \par
{\bkmkstart AAAAAAAIUM}{\bkmkend AAAAAAAIUM}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIRP" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIRP" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i}}}
 : {\cf17 public} QTabWidget\par
{\bkmkstart AAAAAAAIUN}{\bkmkend AAAAAAAIUN}
00021 \{\par
{\bkmkstart AAAAAAAIUO}{\bkmkend AAAAAAAIUO}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAIUP}{\bkmkend AAAAAAAIUP}
00023         mxTab *d_widget;\par
{\bkmkstart AAAAAAAIUQ}{\bkmkend AAAAAAAIUQ}
00024         {\cf18 int} d_currentItem;      \par
{\bkmkstart AAAAAAAIUR}{\bkmkend AAAAAAAIUR}
00025 \par
{\bkmkstart AAAAAAAIUS}{\bkmkend AAAAAAAIUS}
00026 {\cf17 public}:\par
{\bkmkstart AAAAAAAIUT}{\bkmkend AAAAAAAIUT}
00027         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIRP" }{}}{\fldrslt {\cs37\ul\cf2 mxTab_i}}}
 (QWidget *parent, mxTab *widget) : QTabWidget (parent)\par
{\bkmkstart AAAAAAAIUU}{\bkmkend AAAAAAAIUU}
00028         \{\par
{\bkmkstart AAAAAAAIUV}{\bkmkend AAAAAAAIUV}
00029                 d_widget = widget;\par
{\bkmkstart AAAAAAAIUW}{\bkmkend AAAAAAAIUW}
00030                 d_currentItem = 0;\par
{\bkmkstart AAAAAAAIUX}{\bkmkend AAAAAAAIUX}
00031         \}\par
{\bkmkstart AAAAAAAIUY}{\bkmkend AAAAAAAIUY}
00032         \par
{\bkmkstart AAAAAAAIUZ}{\bkmkend AAAAAAAIUZ}
00033         {\cf18 void} select ({\cf18 int} index)\par
{\bkmkstart AAAAAAAIVA}{\bkmkend AAAAAAAIVA}
00034         \{\par
{\bkmkstart AAAAAAAIVB}{\bkmkend AAAAAAAIVB}
00035                 d_currentItem = index;\par
{\bkmkstart AAAAAAAIVC}{\bkmkend AAAAAAAIVC}
00036         \}\par
{\bkmkstart AAAAAAAIVD}{\bkmkend AAAAAAAIVD}
00037 \par
{\bkmkstart AAAAAAAIVE}{\bkmkend AAAAAAAIVE}
00038         {\cf18 int} getSelectedIndex (){\cf17  const}\par
{\bkmkstart AAAAAAAIVF}{\bkmkend AAAAAAAIVF}
00039 {\cf17         }\{\par
{\bkmkstart AAAAAAAIVG}{\bkmkend AAAAAAAIVG}
00040                 {\cf19 return} d_currentItem;\par
{\bkmkstart AAAAAAAIVH}{\bkmkend AAAAAAAIVH}
00041         \}\par
{\bkmkstart AAAAAAAIVI}{\bkmkend AAAAAAAIVI}
00042 \par
{\bkmkstart AAAAAAAIVJ}{\bkmkend AAAAAAAIVJ}
00043         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIRP" }{}}{\fldrslt {\cs37\ul\cf2 ~mxTab_i}}}
 ()\par
{\bkmkstart AAAAAAAIVK}{\bkmkend AAAAAAAIVK}
00044         \{\par
{\bkmkstart AAAAAAAIVL}{\bkmkend AAAAAAAIVL}
00045         \}\par
{\bkmkstart AAAAAAAIVM}{\bkmkend AAAAAAAIVM}
00046 \par
{\bkmkstart AAAAAAAIVN}{\bkmkend AAAAAAAIVN}
00047 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAIVO}{\bkmkend AAAAAAAIVO}
00048         {\cf18 void} tabBarClickedEvent ({\cf18 int} index)\par
{\bkmkstart AAAAAAAIVP}{\bkmkend AAAAAAAIVP}
00049         \{\par
{\bkmkstart AAAAAAAIVQ}{\bkmkend AAAAAAAIVQ}
00050                 d_currentItem = index;\par
{\bkmkstart AAAAAAAIVR}{\bkmkend AAAAAAAIVR}
00051 \par
{\bkmkstart AAAAAAAIVS}{\bkmkend AAAAAAAIVS}
00052                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAIVT}{\bkmkend AAAAAAAIVT}
00053                 \{\par
{\bkmkstart AAAAAAAIVU}{\bkmkend AAAAAAAIVU}
00054                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAIVV}{\bkmkend AAAAAAAIVV}
00055                         mxEvent event;\par
{\bkmkstart AAAAAAAIVW}{\bkmkend AAAAAAAIVW}
00056                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAIVX}{\bkmkend AAAAAAAIVX}
00057                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAIVY}{\bkmkend AAAAAAAIVY}
00058                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAIVZ}{\bkmkend AAAAAAAIVZ}
00059                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAIWA}{\bkmkend AAAAAAAIWA}
00060                         \{\par
{\bkmkstart AAAAAAAIWB}{\bkmkend AAAAAAAIWB}
00061                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAIWC}{\bkmkend AAAAAAAIWC}
00062                                         {\cf19 break};\par
{\bkmkstart AAAAAAAIWD}{\bkmkend AAAAAAAIWD}
00063                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAIWE}{\bkmkend AAAAAAAIWE}
00064                         \}\par
{\bkmkstart AAAAAAAIWF}{\bkmkend AAAAAAAIWF}
00065                 \}\par
{\bkmkstart AAAAAAAIWG}{\bkmkend AAAAAAAIWG}
00066         \}\par
{\bkmkstart AAAAAAAIWH}{\bkmkend AAAAAAAIWH}
00067 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxToggleButton.cpp\par \pard\plain 
{\tc\tcl2 \v mxToggleButton.cpp}
{\xe \v mxToggleButton.cpp}
{\bkmkstart AAAAAAAIWI}
{\bkmkend AAAAAAAIWI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAIWJ}{\bkmkend AAAAAAAIWJ}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAIWK}{\bkmkend AAAAAAAIWK}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAIWL}{\bkmkend AAAAAAAIWL}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAIWM}{\bkmkend AAAAAAAIWM}
00004 {\cf20 // file:           mxToggleButton.cpp}\par
{\bkmkstart AAAAAAAIWN}{\bkmkend AAAAAAAIWN}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAIWO}{\bkmkend AAAAAAAIWO}
00006 {\cf20 // last modified:  Apr 28 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAIWP}{\bkmkend AAAAAAAIWP}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAIWQ}{\bkmkend AAAAAAAIWQ}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAIWR}{\bkmkend AAAAAAAIWR}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAIWS}{\bkmkend AAAAAAAIWS}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAIWT}{\bkmkend AAAAAAAIWT}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAIWU}{\bkmkend AAAAAAAIWU}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAIWV}{\bkmkend AAAAAAAIWV}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAIWW}{\bkmkend AAAAAAAIWW}
00014 {\cf21 #include "mxToggleButton_i.h"}\par
{\bkmkstart AAAAAAAIWX}{\bkmkend AAAAAAAIWX}
00015 \par
{\bkmkstart AAAAAAAIWY}{\bkmkend AAAAAAAIWY}
00016 \par
{\bkmkstart AAAAAAAIWZ}{\bkmkend AAAAAAAIWZ}
00017 \par
{\bkmkstart AAAAAAAIXA}{\bkmkend AAAAAAAIXA}
00018 mxToggleButton::mxToggleButton (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label, {\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAIXB}{\bkmkend AAAAAAAIXB}
00019 : mxWidget (parent, x, y, w, h, label)\par
{\bkmkstart AAAAAAAIXC}{\bkmkend AAAAAAAIXC}
00020 \{\par
{\bkmkstart AAAAAAAIXD}{\bkmkend AAAAAAAIXD}
00021         QWidget *p = 0;\par
{\bkmkstart AAAAAAAIXE}{\bkmkend AAAAAAAIXE}
00022         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAIXF}{\bkmkend AAAAAAAIXF}
00023                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAIXG}{\bkmkend AAAAAAAIXG}
00024 \par
{\bkmkstart AAAAAAAIXH}{\bkmkend AAAAAAAIXH}
00025         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIXI" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAIXJ}{\bkmkend AAAAAAAIXJ}
00026         d_this->connect (d_this, SIGNAL (clicked ()), d_this, SLOT (clickedEvent ()));\par
{\bkmkstart AAAAAAAIXK}{\bkmkend AAAAAAAIXK}
00027         d_this->setCheckable({\cf17 true});\par
{\bkmkstart AAAAAAAIXL}{\bkmkend AAAAAAAIXL}
00028         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAIXM}{\bkmkend AAAAAAAIXM}
00029         setType (MX_TOGGLEBUTTON);\par
{\bkmkstart AAAAAAAIXN}{\bkmkend AAAAAAAIXN}
00030         setParent (parent);\par
{\bkmkstart AAAAAAAIXO}{\bkmkend AAAAAAAIXO}
00031         \par
{\bkmkstart AAAAAAAIXP}{\bkmkend AAAAAAAIXP}
00032         setLabel (label);\par
{\bkmkstart AAAAAAAIXQ}{\bkmkend AAAAAAAIXQ}
00033         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAIXR}{\bkmkend AAAAAAAIXR}
00034         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAIXS}{\bkmkend AAAAAAAIXS}
00035         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAIXT}{\bkmkend AAAAAAAIXT}
00036 \}\par
{\bkmkstart AAAAAAAIXU}{\bkmkend AAAAAAAIXU}
00037 \par
{\bkmkstart AAAAAAAIXV}{\bkmkend AAAAAAAIXV}
00038 \par
{\bkmkstart AAAAAAAIXW}{\bkmkend AAAAAAAIXW}
00039 \par
{\bkmkstart AAAAAAAIXX}{\bkmkend AAAAAAAIXX}
00040 mxToggleButton::~mxToggleButton ()\par
{\bkmkstart AAAAAAAIXY}{\bkmkend AAAAAAAIXY}
00041 \{\par
{\bkmkstart AAAAAAAIXZ}{\bkmkend AAAAAAAIXZ}
00042         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAIYA}{\bkmkend AAAAAAAIYA}
00043 \}\par
{\bkmkstart AAAAAAAIYB}{\bkmkend AAAAAAAIYB}
00044 \par
{\bkmkstart AAAAAAAIYC}{\bkmkend AAAAAAAIYC}
00045 \par
{\bkmkstart AAAAAAAIYD}{\bkmkend AAAAAAAIYD}
00046 \par
{\bkmkstart AAAAAAAIYE}{\bkmkend AAAAAAAIYE}
00047 {\cf18 void}\par
{\bkmkstart AAAAAAAIYF}{\bkmkend AAAAAAAIYF}
00048 mxToggleButton::setChecked ({\cf18 bool} b)\par
{\bkmkstart AAAAAAAIYG}{\bkmkend AAAAAAAIYG}
00049 \{\par
{\bkmkstart AAAAAAAIYH}{\bkmkend AAAAAAAIYH}
00050         d_this->setChecked(b);\par
{\bkmkstart AAAAAAAIYI}{\bkmkend AAAAAAAIYI}
00051 \}\par
{\bkmkstart AAAAAAAIYJ}{\bkmkend AAAAAAAIYJ}
00052 \par
{\bkmkstart AAAAAAAIYK}{\bkmkend AAAAAAAIYK}
00053 \par
{\bkmkstart AAAAAAAIYL}{\bkmkend AAAAAAAIYL}
00054 \par
{\bkmkstart AAAAAAAIYM}{\bkmkend AAAAAAAIYM}
00055 {\cf18 bool}\par
{\bkmkstart AAAAAAAIYN}{\bkmkend AAAAAAAIYN}
00056 mxToggleButton::isChecked (){\cf17  const}\par
{\bkmkstart AAAAAAAIYO}{\bkmkend AAAAAAAIYO}
00057 {\cf17 }\{\par
{\bkmkstart AAAAAAAIYP}{\bkmkend AAAAAAAIYP}
00058         {\cf19 return} d_this->isChecked();\par
{\bkmkstart AAAAAAAIYQ}{\bkmkend AAAAAAAIYQ}
00059 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxToggleButton_i.h\par \pard\plain 
{\tc\tcl2 \v mxToggleButton_i.h}
{\xe \v mxToggleButton_i.h}
{\bkmkstart AAAAAAAIYR}
{\bkmkend AAAAAAAIYR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAIYS}{\bkmkend AAAAAAAIYS}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAIYT}{\bkmkend AAAAAAAIYT}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAIYU}{\bkmkend AAAAAAAIYU}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAIYV}{\bkmkend AAAAAAAIYV}
00004 {\cf20 // file:           mxToggleButton_i.h}\par
{\bkmkstart AAAAAAAIYW}{\bkmkend AAAAAAAIYW}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAIYX}{\bkmkend AAAAAAAIYX}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAIYY}{\bkmkend AAAAAAAIYY}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAIYZ}{\bkmkend AAAAAAAIYZ}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAIZA}{\bkmkend AAAAAAAIZA}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAIZB}{\bkmkend AAAAAAAIZB}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAIZC}{\bkmkend AAAAAAAIZC}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAIZD}{\bkmkend AAAAAAAIZD}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAIZE}{\bkmkend AAAAAAAIZE}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAIZF}{\bkmkend AAAAAAAIZF}
00014 {\cf21 #include <mx/mxToggleButton.h>}\par
{\bkmkstart AAAAAAAIZG}{\bkmkend AAAAAAAIZG}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAIZH}{\bkmkend AAAAAAAIZH}
00016 {\cf21 #include <QPushButton>}\par
{\bkmkstart AAAAAAAIZI}{\bkmkend AAAAAAAIZI}
00017 \par
{\bkmkstart AAAAAAAIZJ}{\bkmkend AAAAAAAIZJ}
00018 \par
{\bkmkstart AAAAAAAIZK}{\bkmkend AAAAAAAIZK}
00019 \par
{\bkmkstart AAAAAAAIZL}{\bkmkend AAAAAAAIZL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIXI" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIXI" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i}}}
 : {\cf17 public} QPushButton\par
{\bkmkstart AAAAAAAIZM}{\bkmkend AAAAAAAIZM}
00021 \{\par
{\bkmkstart AAAAAAAIZN}{\bkmkend AAAAAAAIZN}
00022         Q_OBJECT\par
{\bkmkstart AAAAAAAIZO}{\bkmkend AAAAAAAIZO}
00023         mxToggleButton *d_widget;\par
{\bkmkstart AAAAAAAIZP}{\bkmkend AAAAAAAIZP}
00024 \par
{\bkmkstart AAAAAAAIZQ}{\bkmkend AAAAAAAIZQ}
00025 {\cf17 public}:\par
{\bkmkstart AAAAAAAIZR}{\bkmkend AAAAAAAIZR}
00026         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIXI" }{}}{\fldrslt {\cs37\ul\cf2 mxToggleButton_i}}}
 (QWidget *parent, mxToggleButton *widget) : QPushButton (parent)\par
{\bkmkstart AAAAAAAIZS}{\bkmkend AAAAAAAIZS}
00027         \{\par
{\bkmkstart AAAAAAAIZT}{\bkmkend AAAAAAAIZT}
00028                 d_widget = widget;\par
{\bkmkstart AAAAAAAIZU}{\bkmkend AAAAAAAIZU}
00029         \}\par
{\bkmkstart AAAAAAAIZV}{\bkmkend AAAAAAAIZV}
00030 \par
{\bkmkstart AAAAAAAIZW}{\bkmkend AAAAAAAIZW}
00031         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAIXI" }{}}{\fldrslt {\cs37\ul\cf2 ~mxToggleButton_i}}}
 () \{\}\par
{\bkmkstart AAAAAAAIZX}{\bkmkend AAAAAAAIZX}
00032 \par
{\bkmkstart AAAAAAAIZY}{\bkmkend AAAAAAAIZY}
00033 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAIZZ}{\bkmkend AAAAAAAIZZ}
00034         {\cf18 void} clickedEvent ()\par
{\bkmkstart AAAAAAAJAA}{\bkmkend AAAAAAAJAA}
00035         \{\par
{\bkmkstart AAAAAAAJAB}{\bkmkend AAAAAAAJAB}
00036                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAJAC}{\bkmkend AAAAAAAJAC}
00037                 \{\par
{\bkmkstart AAAAAAAJAD}{\bkmkend AAAAAAAJAD}
00038                         mxWindow *parent = d_widget->getParent ();\par
{\bkmkstart AAAAAAAJAE}{\bkmkend AAAAAAAJAE}
00039                         mxEvent event;\par
{\bkmkstart AAAAAAAJAF}{\bkmkend AAAAAAAJAF}
00040                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAJAG}{\bkmkend AAAAAAAJAG}
00041                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAJAH}{\bkmkend AAAAAAAJAH}
00042                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAJAI}{\bkmkend AAAAAAAJAI}
00043                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAJAJ}{\bkmkend AAAAAAAJAJ}
00044                         \{\par
{\bkmkstart AAAAAAAJAK}{\bkmkend AAAAAAAJAK}
00045                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAJAL}{\bkmkend AAAAAAAJAL}
00046                                         {\cf19 break};\par
{\bkmkstart AAAAAAAJAM}{\bkmkend AAAAAAAJAM}
00047                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAJAN}{\bkmkend AAAAAAAJAN}
00048                         \}\par
{\bkmkstart AAAAAAAJAO}{\bkmkend AAAAAAAJAO}
00049                 \}\par
{\bkmkstart AAAAAAAJAP}{\bkmkend AAAAAAAJAP}
00050         \}\par
{\bkmkstart AAAAAAAJAQ}{\bkmkend AAAAAAAJAQ}
00051 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxToolTip.cpp\par \pard\plain 
{\tc\tcl2 \v mxToolTip.cpp}
{\xe \v mxToolTip.cpp}
{\bkmkstart AAAAAAAJAR}
{\bkmkend AAAAAAAJAR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAJAS}{\bkmkend AAAAAAAJAS}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAJAT}{\bkmkend AAAAAAAJAT}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAJAU}{\bkmkend AAAAAAAJAU}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAJAV}{\bkmkend AAAAAAAJAV}
00004 {\cf20 // file:           mxToolTip.cpp}\par
{\bkmkstart AAAAAAAJAW}{\bkmkend AAAAAAAJAW}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAJAX}{\bkmkend AAAAAAAJAX}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAJAY}{\bkmkend AAAAAAAJAY}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAJAZ}{\bkmkend AAAAAAAJAZ}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAJBA}{\bkmkend AAAAAAAJBA}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAJBB}{\bkmkend AAAAAAAJBB}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAJBC}{\bkmkend AAAAAAAJBC}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAJBD}{\bkmkend AAAAAAAJBD}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAJBE}{\bkmkend AAAAAAAJBE}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAJBF}{\bkmkend AAAAAAAJBF}
00014 {\cf21 #include <mx/mxToolTip.h>}\par
{\bkmkstart AAAAAAAJBG}{\bkmkend AAAAAAAJBG}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAJBH}{\bkmkend AAAAAAAJBH}
00016 {\cf21 #include <QWidget>}\par
{\bkmkstart AAAAAAAJBI}{\bkmkend AAAAAAAJBI}
00017 \par
{\bkmkstart AAAAAAAJBJ}{\bkmkend AAAAAAAJBJ}
00018 \par
{\bkmkstart AAAAAAAJBK}{\bkmkend AAAAAAAJBK}
00019 {\cf18 void}\par
{\bkmkstart AAAAAAAJBL}{\bkmkend AAAAAAAJBL}
00020 mxToolTip::add (mxWidget *widget, {\cf17 const} {\cf18 char} *text)\par
{\bkmkstart AAAAAAAJBM}{\bkmkend AAAAAAAJBM}
00021 \{\par
{\bkmkstart AAAAAAAJBN}{\bkmkend AAAAAAAJBN}
00022         QWidget *w = {\cf17 nullptr};\par
{\bkmkstart AAAAAAAJBO}{\bkmkend AAAAAAAJBO}
00023         {\cf19 if} (widget)\par
{\bkmkstart AAAAAAAJBP}{\bkmkend AAAAAAAJBP}
00024         \{\par
{\bkmkstart AAAAAAAJBQ}{\bkmkend AAAAAAAJBQ}
00025                 w = (QWidget *) widget->getHandle ();\par
{\bkmkstart AAAAAAAJBR}{\bkmkend AAAAAAAJBR}
00026                 {\cf19 if}(w)\par
{\bkmkstart AAAAAAAJBS}{\bkmkend AAAAAAAJBS}
00027                         w->setToolTip(text);\par
{\bkmkstart AAAAAAAJBT}{\bkmkend AAAAAAAJBT}
00028         \}\par
{\bkmkstart AAAAAAAJBU}{\bkmkend AAAAAAAJBU}
00029 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxTreeView.cpp\par \pard\plain 
{\tc\tcl2 \v mxTreeView.cpp}
{\xe \v mxTreeView.cpp}
{\bkmkstart AAAAAAAJBV}
{\bkmkend AAAAAAAJBV}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAJBW}{\bkmkend AAAAAAAJBW}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAJBX}{\bkmkend AAAAAAAJBX}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAJBY}{\bkmkend AAAAAAAJBY}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAJBZ}{\bkmkend AAAAAAAJBZ}
00004 {\cf20 // file:           mxTreeView.cpp}\par
{\bkmkstart AAAAAAAJCA}{\bkmkend AAAAAAAJCA}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAJCB}{\bkmkend AAAAAAAJCB}
00006 {\cf20 // last modified:  Apr 20 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAJCC}{\bkmkend AAAAAAAJCC}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAJCD}{\bkmkend AAAAAAAJCD}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAJCE}{\bkmkend AAAAAAAJCE}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAJCF}{\bkmkend AAAAAAAJCF}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAJCG}{\bkmkend AAAAAAAJCG}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAJCH}{\bkmkend AAAAAAAJCH}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAJCI}{\bkmkend AAAAAAAJCI}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAJCJ}{\bkmkend AAAAAAAJCJ}
00014 {\cf21 #include "mxTreeView_i.h"}\par
{\bkmkstart AAAAAAAJCK}{\bkmkend AAAAAAAJCK}
00015 \par
{\bkmkstart AAAAAAAJCL}{\bkmkend AAAAAAAJCL}
00016 \par
{\bkmkstart AAAAAAAJCM}{\bkmkend AAAAAAAJCM}
00017 \par
{\bkmkstart AAAAAAAJCN}{\bkmkend AAAAAAAJCN}
00018 mxTreeView::mxTreeView (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAJCO}{\bkmkend AAAAAAAJCO}
00019 : mxWidget (parent, x, y, w, h)\par
{\bkmkstart AAAAAAAJCP}{\bkmkend AAAAAAAJCP}
00020 \{\par
{\bkmkstart AAAAAAAJCQ}{\bkmkend AAAAAAAJCQ}
00021         QWidget *p = 0;\par
{\bkmkstart AAAAAAAJCR}{\bkmkend AAAAAAAJCR}
00022         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAJCS}{\bkmkend AAAAAAAJCS}
00023                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAJCT}{\bkmkend AAAAAAAJCT}
00024         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJCU" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAJCV}{\bkmkend AAAAAAAJCV}
00025         {\cf20 //d_this->addColumn ("");}\par
{\bkmkstart AAAAAAAJCW}{\bkmkend AAAAAAAJCW}
00026         d_this->setRootIsDecorated ({\cf17 true});\par
{\bkmkstart AAAAAAAJCX}{\bkmkend AAAAAAAJCX}
00027         d_this->connect (d_this, SIGNAL (itemSelectionChanged ()), d_this, SLOT (selectionChangedEvent ()));    \par
{\bkmkstart AAAAAAAJCY}{\bkmkend AAAAAAAJCY}
00028         d_this->connect (d_this, SIGNAL (itemDoubleClicked(QTreeWidgetItem *, {\cf18 int})), d_this, SLOT (doubleClickedEvent (QTreeWidgetItem *, {\cf18 int})));       \par
{\bkmkstart AAAAAAAJCZ}{\bkmkend AAAAAAAJCZ}
00029         {\cf20 //d_this->connect (d_this, SIGNAL (itemRightButtonClicked (QTreeWidgetItem *, const QPoint&, int)), d_this, SLOT (rightButtonClickedEvent (QTreeWidgetItem *, const QPoint&, int)));    }\par
{\bkmkstart AAAAAAAJDA}{\bkmkend AAAAAAAJDA}
00030 \par
{\bkmkstart AAAAAAAJDB}{\bkmkend AAAAAAAJDB}
00031         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAJDC}{\bkmkend AAAAAAAJDC}
00032         setType (MX_TREEVIEW);\par
{\bkmkstart AAAAAAAJDD}{\bkmkend AAAAAAAJDD}
00033         setParent (parent);\par
{\bkmkstart AAAAAAAJDE}{\bkmkend AAAAAAAJDE}
00034         setId ({\cf18 id});\par
{\bkmkstart AAAAAAAJDF}{\bkmkend AAAAAAAJDF}
00035         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAJDG}{\bkmkend AAAAAAAJDG}
00036         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAJDH}{\bkmkend AAAAAAAJDH}
00037 \}\par
{\bkmkstart AAAAAAAJDI}{\bkmkend AAAAAAAJDI}
00038 \par
{\bkmkstart AAAAAAAJDJ}{\bkmkend AAAAAAAJDJ}
00039 \par
{\bkmkstart AAAAAAAJDK}{\bkmkend AAAAAAAJDK}
00040 \par
{\bkmkstart AAAAAAAJDL}{\bkmkend AAAAAAAJDL}
00041 mxTreeView::~mxTreeView ()\par
{\bkmkstart AAAAAAAJDM}{\bkmkend AAAAAAAJDM}
00042 \{\par
{\bkmkstart AAAAAAAJDN}{\bkmkend AAAAAAAJDN}
00043         remove (0);\par
{\bkmkstart AAAAAAAJDO}{\bkmkend AAAAAAAJDO}
00044         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAJDP}{\bkmkend AAAAAAAJDP}
00045 \}\par
{\bkmkstart AAAAAAAJDQ}{\bkmkend AAAAAAAJDQ}
00046 \par
{\bkmkstart AAAAAAAJDR}{\bkmkend AAAAAAAJDR}
00047 \par
{\bkmkstart AAAAAAAJDS}{\bkmkend AAAAAAAJDS}
00048 \par
{\bkmkstart AAAAAAAJDT}{\bkmkend AAAAAAAJDT}
00049 mxTreeViewItem*\par
{\bkmkstart AAAAAAAJDU}{\bkmkend AAAAAAAJDU}
00050 mxTreeView::add (mxTreeViewItem *parent, {\cf17 const} {\cf18 char} *item)\par
{\bkmkstart AAAAAAAJDV}{\bkmkend AAAAAAAJDV}
00051 \{\par
{\bkmkstart AAAAAAAJDW}{\bkmkend AAAAAAAJDW}
00052         QTreeWidgetItem *lvi;\par
{\bkmkstart AAAAAAAJDX}{\bkmkend AAAAAAAJDX}
00053 \par
{\bkmkstart AAAAAAAJDY}{\bkmkend AAAAAAAJDY}
00054         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAJDZ}{\bkmkend AAAAAAAJDZ}
00055                 lvi = {\cf17 new} QTreeWidgetItem ((QTreeWidgetItem *) parent, QStringList(item));\par
{\bkmkstart AAAAAAAJEA}{\bkmkend AAAAAAAJEA}
00056         {\cf19 else}\par
{\bkmkstart AAAAAAAJEB}{\bkmkend AAAAAAAJEB}
00057                 lvi = {\cf17 new} QTreeWidgetItem ((QTreeWidget *) d_this, QStringList(item));\par
{\bkmkstart AAAAAAAJEC}{\bkmkend AAAAAAAJEC}
00058 \par
{\bkmkstart AAAAAAAJED}{\bkmkend AAAAAAAJED}
00059         {\cf19 return} (mxTreeViewItem *) lvi;\par
{\bkmkstart AAAAAAAJEE}{\bkmkend AAAAAAAJEE}
00060 \}\par
{\bkmkstart AAAAAAAJEF}{\bkmkend AAAAAAAJEF}
00061 \par
{\bkmkstart AAAAAAAJEG}{\bkmkend AAAAAAAJEG}
00062 \par
{\bkmkstart AAAAAAAJEH}{\bkmkend AAAAAAAJEH}
00063 \par
{\bkmkstart AAAAAAAJEI}{\bkmkend AAAAAAAJEI}
00064 {\cf18 void}\par
{\bkmkstart AAAAAAAJEJ}{\bkmkend AAAAAAAJEJ}
00065 mxTreeView::remove (mxTreeViewItem *item)\par
{\bkmkstart AAAAAAAJEK}{\bkmkend AAAAAAAJEK}
00066 \{\par
{\bkmkstart AAAAAAAJEL}{\bkmkend AAAAAAAJEL}
00067         {\cf19 if} (!item)\par
{\bkmkstart AAAAAAAJEM}{\bkmkend AAAAAAAJEM}
00068                 d_this->clear ();\par
{\bkmkstart AAAAAAAJEN}{\bkmkend AAAAAAAJEN}
00069         {\cf19 else}\par
{\bkmkstart AAAAAAAJEO}{\bkmkend AAAAAAAJEO}
00070                 {\cf17 delete} (QTreeWidgetItem *) item;\par
{\bkmkstart AAAAAAAJEP}{\bkmkend AAAAAAAJEP}
00071 \}\par
{\bkmkstart AAAAAAAJEQ}{\bkmkend AAAAAAAJEQ}
00072 \par
{\bkmkstart AAAAAAAJER}{\bkmkend AAAAAAAJER}
00073 \par
{\bkmkstart AAAAAAAJES}{\bkmkend AAAAAAAJES}
00074 \par
{\bkmkstart AAAAAAAJET}{\bkmkend AAAAAAAJET}
00075 mxTreeViewItem *\par
{\bkmkstart AAAAAAAJEU}{\bkmkend AAAAAAAJEU}
00076 mxTreeView::getFirstChild (mxTreeViewItem *item){\cf17  const}\par
{\bkmkstart AAAAAAAJEV}{\bkmkend AAAAAAAJEV}
00077 {\cf17 }\{\par
{\bkmkstart AAAAAAAJEW}{\bkmkend AAAAAAAJEW}
00078         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJEX}{\bkmkend AAAAAAAJEX}
00079                 {\cf19 return} (mxTreeViewItem *) ((QTreeWidgetItem *) item)->child (0);\par
{\bkmkstart AAAAAAAJEY}{\bkmkend AAAAAAAJEY}
00080         {\cf19 else}\par
{\bkmkstart AAAAAAAJEZ}{\bkmkend AAAAAAAJEZ}
00081                 {\cf19 return} (mxTreeViewItem *) d_this->topLevelItem (0);\par
{\bkmkstart AAAAAAAJFA}{\bkmkend AAAAAAAJFA}
00082 \}\par
{\bkmkstart AAAAAAAJFB}{\bkmkend AAAAAAAJFB}
00083 \par
{\bkmkstart AAAAAAAJFC}{\bkmkend AAAAAAAJFC}
00084 \par
{\bkmkstart AAAAAAAJFD}{\bkmkend AAAAAAAJFD}
00085 \par
{\bkmkstart AAAAAAAJFE}{\bkmkend AAAAAAAJFE}
00086 mxTreeViewItem *\par
{\bkmkstart AAAAAAAJFF}{\bkmkend AAAAAAAJFF}
00087 mxTreeView::getNextChild (mxTreeViewItem *item){\cf17  const}\par
{\bkmkstart AAAAAAAJFG}{\bkmkend AAAAAAAJFG}
00088 {\cf17 }\{\par
{\bkmkstart AAAAAAAJFH}{\bkmkend AAAAAAAJFH}
00089         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJFI}{\bkmkend AAAAAAAJFI}
00090         \{\par
{\bkmkstart AAAAAAAJFJ}{\bkmkend AAAAAAAJFJ}
00091                 QTreeWidgetItem *current = (QTreeWidgetItem *) item;\par
{\bkmkstart AAAAAAAJFK}{\bkmkend AAAAAAAJFK}
00092                 QTreeWidgetItem *parent = current->parent ();\par
{\bkmkstart AAAAAAAJFL}{\bkmkend AAAAAAAJFL}
00093                 QTreeWidgetItem *nextSibling;\par
{\bkmkstart AAAAAAAJFM}{\bkmkend AAAAAAAJFM}
00094                 {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAJFN}{\bkmkend AAAAAAAJFN}
00095                 \{\par
{\bkmkstart AAAAAAAJFO}{\bkmkend AAAAAAAJFO}
00096                         nextSibling = parent->child(parent->indexOfChild(current) + 1);\par
{\bkmkstart AAAAAAAJFP}{\bkmkend AAAAAAAJFP}
00097                 \}\par
{\bkmkstart AAAAAAAJFQ}{\bkmkend AAAAAAAJFQ}
00098                 {\cf19 else}\par
{\bkmkstart AAAAAAAJFR}{\bkmkend AAAAAAAJFR}
00099                 \{\par
{\bkmkstart AAAAAAAJFS}{\bkmkend AAAAAAAJFS}
00100                         QTreeWidget *treeWidget = current->treeWidget();\par
{\bkmkstart AAAAAAAJFT}{\bkmkend AAAAAAAJFT}
00101                         nextSibling = treeWidget->topLevelItem(treeWidget->indexOfTopLevelItem(current) + 1);\par
{\bkmkstart AAAAAAAJFU}{\bkmkend AAAAAAAJFU}
00102                 \}\par
{\bkmkstart AAAAAAAJFV}{\bkmkend AAAAAAAJFV}
00103                 {\cf19 return} (mxTreeViewItem *) nextSibling;\par
{\bkmkstart AAAAAAAJFW}{\bkmkend AAAAAAAJFW}
00104         \}\par
{\bkmkstart AAAAAAAJFX}{\bkmkend AAAAAAAJFX}
00105 \par
{\bkmkstart AAAAAAAJFY}{\bkmkend AAAAAAAJFY}
00106         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAJFZ}{\bkmkend AAAAAAAJFZ}
00107 \}\par
{\bkmkstart AAAAAAAJGA}{\bkmkend AAAAAAAJGA}
00108 \par
{\bkmkstart AAAAAAAJGB}{\bkmkend AAAAAAAJGB}
00109 \par
{\bkmkstart AAAAAAAJGC}{\bkmkend AAAAAAAJGC}
00110 \par
{\bkmkstart AAAAAAAJGD}{\bkmkend AAAAAAAJGD}
00111 mxTreeViewItem*\par
{\bkmkstart AAAAAAAJGE}{\bkmkend AAAAAAAJGE}
00112 mxTreeView::getSelectedItem (){\cf17  const}\par
{\bkmkstart AAAAAAAJGF}{\bkmkend AAAAAAAJGF}
00113 {\cf17 }\{\par
{\bkmkstart AAAAAAAJGG}{\bkmkend AAAAAAAJGG}
00114         {\cf19 return} (mxTreeViewItem *) d_this->currentItem ();\par
{\bkmkstart AAAAAAAJGH}{\bkmkend AAAAAAAJGH}
00115 \}\par
{\bkmkstart AAAAAAAJGI}{\bkmkend AAAAAAAJGI}
00116 \par
{\bkmkstart AAAAAAAJGJ}{\bkmkend AAAAAAAJGJ}
00117 \par
{\bkmkstart AAAAAAAJGK}{\bkmkend AAAAAAAJGK}
00118 \par
{\bkmkstart AAAAAAAJGL}{\bkmkend AAAAAAAJGL}
00119 {\cf18 void}\par
{\bkmkstart AAAAAAAJGM}{\bkmkend AAAAAAAJGM}
00120 mxTreeView::setLabel (mxTreeViewItem *item, {\cf17 const} {\cf18 char} *label)\par
{\bkmkstart AAAAAAAJGN}{\bkmkend AAAAAAAJGN}
00121 \{\par
{\bkmkstart AAAAAAAJGO}{\bkmkend AAAAAAAJGO}
00122         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJGP}{\bkmkend AAAAAAAJGP}
00123                 ((QTreeWidgetItem *) item)->setText (0, label);\par
{\bkmkstart AAAAAAAJGQ}{\bkmkend AAAAAAAJGQ}
00124 \}\par
{\bkmkstart AAAAAAAJGR}{\bkmkend AAAAAAAJGR}
00125 \par
{\bkmkstart AAAAAAAJGS}{\bkmkend AAAAAAAJGS}
00126 \par
{\bkmkstart AAAAAAAJGT}{\bkmkend AAAAAAAJGT}
00127 \par
{\bkmkstart AAAAAAAJGU}{\bkmkend AAAAAAAJGU}
00128 {\cf18 void}\par
{\bkmkstart AAAAAAAJGV}{\bkmkend AAAAAAAJGV}
00129 mxTreeView::setUserData (mxTreeViewItem *item, {\cf18 void} *userData)\par
{\bkmkstart AAAAAAAJGW}{\bkmkend AAAAAAAJGW}
00130 \{\par
{\bkmkstart AAAAAAAJGX}{\bkmkend AAAAAAAJGX}
00131 \}\par
{\bkmkstart AAAAAAAJGY}{\bkmkend AAAAAAAJGY}
00132 \par
{\bkmkstart AAAAAAAJGZ}{\bkmkend AAAAAAAJGZ}
00133 \par
{\bkmkstart AAAAAAAJHA}{\bkmkend AAAAAAAJHA}
00134 \par
{\bkmkstart AAAAAAAJHB}{\bkmkend AAAAAAAJHB}
00135 {\cf18 void}\par
{\bkmkstart AAAAAAAJHC}{\bkmkend AAAAAAAJHC}
00136 mxTreeView::setOpen (mxTreeViewItem *item, {\cf18 bool} b)\par
{\bkmkstart AAAAAAAJHD}{\bkmkend AAAAAAAJHD}
00137 \{\par
{\bkmkstart AAAAAAAJHE}{\bkmkend AAAAAAAJHE}
00138         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJHF}{\bkmkend AAAAAAAJHF}
00139                 ((QTreeWidgetItem *) item)->setExpanded (b);\par
{\bkmkstart AAAAAAAJHG}{\bkmkend AAAAAAAJHG}
00140 \}\par
{\bkmkstart AAAAAAAJHH}{\bkmkend AAAAAAAJHH}
00141 \par
{\bkmkstart AAAAAAAJHI}{\bkmkend AAAAAAAJHI}
00142 \par
{\bkmkstart AAAAAAAJHJ}{\bkmkend AAAAAAAJHJ}
00143 \par
{\bkmkstart AAAAAAAJHK}{\bkmkend AAAAAAAJHK}
00144 {\cf18 void}\par
{\bkmkstart AAAAAAAJHL}{\bkmkend AAAAAAAJHL}
00145 mxTreeView::setSelected (mxTreeViewItem *item, {\cf18 bool} b)\par
{\bkmkstart AAAAAAAJHM}{\bkmkend AAAAAAAJHM}
00146 \{\par
{\bkmkstart AAAAAAAJHN}{\bkmkend AAAAAAAJHN}
00147         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJHO}{\bkmkend AAAAAAAJHO}
00148                 ((QTreeWidgetItem *) item)->setSelected (b);\par
{\bkmkstart AAAAAAAJHP}{\bkmkend AAAAAAAJHP}
00149 \}\par
{\bkmkstart AAAAAAAJHQ}{\bkmkend AAAAAAAJHQ}
00150 \par
{\bkmkstart AAAAAAAJHR}{\bkmkend AAAAAAAJHR}
00151 \par
{\bkmkstart AAAAAAAJHS}{\bkmkend AAAAAAAJHS}
00152 \par
{\bkmkstart AAAAAAAJHT}{\bkmkend AAAAAAAJHT}
00153 {\cf17 const} {\cf18 char} *\par
{\bkmkstart AAAAAAAJHU}{\bkmkend AAAAAAAJHU}
00154 mxTreeView::getLabel (mxTreeViewItem *item){\cf17  const}\par
{\bkmkstart AAAAAAAJHV}{\bkmkend AAAAAAAJHV}
00155 {\cf17 }\{\par
{\bkmkstart AAAAAAAJHW}{\bkmkend AAAAAAAJHW}
00156         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJHX}{\bkmkend AAAAAAAJHX}
00157                 {\cf19 return} qPrintable(((QTreeWidgetItem *) item)->text (0));\par
{\bkmkstart AAAAAAAJHY}{\bkmkend AAAAAAAJHY}
00158                 \par
{\bkmkstart AAAAAAAJHZ}{\bkmkend AAAAAAAJHZ}
00159         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAJIA}{\bkmkend AAAAAAAJIA}
00160 \}\par
{\bkmkstart AAAAAAAJIB}{\bkmkend AAAAAAAJIB}
00161 \par
{\bkmkstart AAAAAAAJIC}{\bkmkend AAAAAAAJIC}
00162 \par
{\bkmkstart AAAAAAAJID}{\bkmkend AAAAAAAJID}
00163 \par
{\bkmkstart AAAAAAAJIE}{\bkmkend AAAAAAAJIE}
00164 {\cf18 void} *\par
{\bkmkstart AAAAAAAJIF}{\bkmkend AAAAAAAJIF}
00165 mxTreeView::getUserData (mxTreeViewItem *item){\cf17  const}\par
{\bkmkstart AAAAAAAJIG}{\bkmkend AAAAAAAJIG}
00166 {\cf17 }\{\par
{\bkmkstart AAAAAAAJIH}{\bkmkend AAAAAAAJIH}
00167         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAJII}{\bkmkend AAAAAAAJII}
00168 \}\par
{\bkmkstart AAAAAAAJIJ}{\bkmkend AAAAAAAJIJ}
00169 \par
{\bkmkstart AAAAAAAJIK}{\bkmkend AAAAAAAJIK}
00170 \par
{\bkmkstart AAAAAAAJIL}{\bkmkend AAAAAAAJIL}
00171 \par
{\bkmkstart AAAAAAAJIM}{\bkmkend AAAAAAAJIM}
00172 {\cf18 bool}\par
{\bkmkstart AAAAAAAJIN}{\bkmkend AAAAAAAJIN}
00173 mxTreeView::isOpen (mxTreeViewItem *item){\cf17  const}\par
{\bkmkstart AAAAAAAJIO}{\bkmkend AAAAAAAJIO}
00174 {\cf17 }\{\par
{\bkmkstart AAAAAAAJIP}{\bkmkend AAAAAAAJIP}
00175         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJIQ}{\bkmkend AAAAAAAJIQ}
00176                 {\cf19 return} ((QTreeWidgetItem *) item)->isExpanded ();\par
{\bkmkstart AAAAAAAJIR}{\bkmkend AAAAAAAJIR}
00177 \par
{\bkmkstart AAAAAAAJIS}{\bkmkend AAAAAAAJIS}
00178         {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAAJIT}{\bkmkend AAAAAAAJIT}
00179 \}\par
{\bkmkstart AAAAAAAJIU}{\bkmkend AAAAAAAJIU}
00180 \par
{\bkmkstart AAAAAAAJIV}{\bkmkend AAAAAAAJIV}
00181 \par
{\bkmkstart AAAAAAAJIW}{\bkmkend AAAAAAAJIW}
00182 \par
{\bkmkstart AAAAAAAJIX}{\bkmkend AAAAAAAJIX}
00183 {\cf18 bool}\par
{\bkmkstart AAAAAAAJIY}{\bkmkend AAAAAAAJIY}
00184 mxTreeView::isSelected (mxTreeViewItem *item){\cf17  const}\par
{\bkmkstart AAAAAAAJIZ}{\bkmkend AAAAAAAJIZ}
00185 {\cf17 }\{\par
{\bkmkstart AAAAAAAJJA}{\bkmkend AAAAAAAJJA}
00186         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJJB}{\bkmkend AAAAAAAJJB}
00187                 {\cf19 return} ((QTreeWidgetItem *) item)->isSelected ();\par
{\bkmkstart AAAAAAAJJC}{\bkmkend AAAAAAAJJC}
00188                 \par
{\bkmkstart AAAAAAAJJD}{\bkmkend AAAAAAAJJD}
00189         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAJJE}{\bkmkend AAAAAAAJJE}
00190 \}\par
{\bkmkstart AAAAAAAJJF}{\bkmkend AAAAAAAJJF}
00191 \par
{\bkmkstart AAAAAAAJJG}{\bkmkend AAAAAAAJJG}
00192 \par
{\bkmkstart AAAAAAAJJH}{\bkmkend AAAAAAAJJH}
00193 \par
{\bkmkstart AAAAAAAJJI}{\bkmkend AAAAAAAJJI}
00194 mxTreeViewItem *\par
{\bkmkstart AAAAAAAJJJ}{\bkmkend AAAAAAAJJJ}
00195 mxTreeView::getParent (mxTreeViewItem *item){\cf17  const}\par
{\bkmkstart AAAAAAAJJK}{\bkmkend AAAAAAAJJK}
00196 {\cf17 }\{\par
{\bkmkstart AAAAAAAJJL}{\bkmkend AAAAAAAJJL}
00197         {\cf19 if} (item)\par
{\bkmkstart AAAAAAAJJM}{\bkmkend AAAAAAAJJM}
00198                 {\cf19 return} (mxTreeViewItem *) ((QTreeWidgetItem *) item)->parent ();\par
{\bkmkstart AAAAAAAJJN}{\bkmkend AAAAAAAJJN}
00199 \par
{\bkmkstart AAAAAAAJJO}{\bkmkend AAAAAAAJJO}
00200         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAJJP}{\bkmkend AAAAAAAJJP}
00201 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxTreeView_i.h\par \pard\plain 
{\tc\tcl2 \v mxTreeView_i.h}
{\xe \v mxTreeView_i.h}
{\bkmkstart AAAAAAAJJQ}
{\bkmkend AAAAAAAJJQ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAJJR}{\bkmkend AAAAAAAJJR}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAJJS}{\bkmkend AAAAAAAJJS}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAJJT}{\bkmkend AAAAAAAJJT}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAJJU}{\bkmkend AAAAAAAJJU}
00004 {\cf20 // file:           mxTreeView_i.h}\par
{\bkmkstart AAAAAAAJJV}{\bkmkend AAAAAAAJJV}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAJJW}{\bkmkend AAAAAAAJJW}
00006 {\cf20 // last modified:  Apr 20 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAJJX}{\bkmkend AAAAAAAJJX}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAJJY}{\bkmkend AAAAAAAJJY}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAJJZ}{\bkmkend AAAAAAAJJZ}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAJKA}{\bkmkend AAAAAAAJKA}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAJKB}{\bkmkend AAAAAAAJKB}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAJKC}{\bkmkend AAAAAAAJKC}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAJKD}{\bkmkend AAAAAAAJKD}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAJKE}{\bkmkend AAAAAAAJKE}
00014 {\cf21 #include <mx/mxTreeView.h>}\par
{\bkmkstart AAAAAAAJKF}{\bkmkend AAAAAAAJKF}
00015 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAJKG}{\bkmkend AAAAAAAJKG}
00016 {\cf21 #include <QTreeWidget>}\par
{\bkmkstart AAAAAAAJKH}{\bkmkend AAAAAAAJKH}
00017 {\cf21 #include <QTreeWidgetItem>}\par
{\bkmkstart AAAAAAAJKI}{\bkmkend AAAAAAAJKI}
00018 {\cf21 #include <QResizeEvent>}\par
{\bkmkstart AAAAAAAJKJ}{\bkmkend AAAAAAAJKJ}
00019 \par
{\bkmkstart AAAAAAAJKK}{\bkmkend AAAAAAAJKK}
00020 \par
{\bkmkstart AAAAAAAJKL}{\bkmkend AAAAAAAJKL}
00021 \par
{\bkmkstart AAAAAAAJKM}{\bkmkend AAAAAAAJKM}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJCU" }{}}{\fldrslt {\cs37\ul\cf2 00022}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJCU" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i}}}
 : {\cf17 public} QTreeWidget\par
{\bkmkstart AAAAAAAJKN}{\bkmkend AAAAAAAJKN}
00023 \{\par
{\bkmkstart AAAAAAAJKO}{\bkmkend AAAAAAAJKO}
00024         Q_OBJECT\par
{\bkmkstart AAAAAAAJKP}{\bkmkend AAAAAAAJKP}
00025         mxTreeView *d_widget;\par
{\bkmkstart AAAAAAAJKQ}{\bkmkend AAAAAAAJKQ}
00026 \par
{\bkmkstart AAAAAAAJKR}{\bkmkend AAAAAAAJKR}
00027 {\cf17 public}:\par
{\bkmkstart AAAAAAAJKS}{\bkmkend AAAAAAAJKS}
00028         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJCU" }{}}{\fldrslt {\cs37\ul\cf2 mxTreeView_i}}}
 (QWidget *parent, mxTreeView *widget) : QTreeWidget (parent)\par
{\bkmkstart AAAAAAAJKT}{\bkmkend AAAAAAAJKT}
00029         \{\par
{\bkmkstart AAAAAAAJKU}{\bkmkend AAAAAAAJKU}
00030                 d_widget = widget;\par
{\bkmkstart AAAAAAAJKV}{\bkmkend AAAAAAAJKV}
00031         \}\par
{\bkmkstart AAAAAAAJKW}{\bkmkend AAAAAAAJKW}
00032 \par
{\bkmkstart AAAAAAAJKX}{\bkmkend AAAAAAAJKX}
00033         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJCU" }{}}{\fldrslt {\cs37\ul\cf2 ~mxTreeView_i}}}
 ()\par
{\bkmkstart AAAAAAAJKY}{\bkmkend AAAAAAAJKY}
00034         \{\par
{\bkmkstart AAAAAAAJKZ}{\bkmkend AAAAAAAJKZ}
00035         \}\par
{\bkmkstart AAAAAAAJLA}{\bkmkend AAAAAAAJLA}
00036 \par
{\bkmkstart AAAAAAAJLB}{\bkmkend AAAAAAAJLB}
00037 {\cf17 protected}:\par
{\bkmkstart AAAAAAAJLC}{\bkmkend AAAAAAAJLC}
00038         {\cf17 virtual} {\cf18 void} resizeEvent (QResizeEvent *event)\par
{\bkmkstart AAAAAAAJLD}{\bkmkend AAAAAAAJLD}
00039         \{\par
{\bkmkstart AAAAAAAJLE}{\bkmkend AAAAAAAJLE}
00040                 setColumnWidth (0, event->size ().width ());\par
{\bkmkstart AAAAAAAJLF}{\bkmkend AAAAAAAJLF}
00041                 QTreeWidget::resizeEvent (event);\par
{\bkmkstart AAAAAAAJLG}{\bkmkend AAAAAAAJLG}
00042         \}\par
{\bkmkstart AAAAAAAJLH}{\bkmkend AAAAAAAJLH}
00043 \par
{\bkmkstart AAAAAAAJLI}{\bkmkend AAAAAAAJLI}
00044         {\cf17 virtual} {\cf18 void} mousePressEvent (QMouseEvent *event) \par
{\bkmkstart AAAAAAAJLJ}{\bkmkend AAAAAAAJLJ}
00045         \{\par
{\bkmkstart AAAAAAAJLK}{\bkmkend AAAAAAAJLK}
00046                 {\cf19 if} (event->button() == Qt::RightButton)\par
{\bkmkstart AAAAAAAJLL}{\bkmkend AAAAAAAJLL}
00047                 \{\par
{\bkmkstart AAAAAAAJLM}{\bkmkend AAAAAAAJLM}
00048                         emit rightButtonClickedEvent(event->pos());\par
{\bkmkstart AAAAAAAJLN}{\bkmkend AAAAAAAJLN}
00049                 \}\par
{\bkmkstart AAAAAAAJLO}{\bkmkend AAAAAAAJLO}
00050                 QTreeWidget::mousePressEvent(event);\par
{\bkmkstart AAAAAAAJLP}{\bkmkend AAAAAAAJLP}
00051         \}\par
{\bkmkstart AAAAAAAJLQ}{\bkmkend AAAAAAAJLQ}
00052 \par
{\bkmkstart AAAAAAAJLR}{\bkmkend AAAAAAAJLR}
00053 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAJLS}{\bkmkend AAAAAAAJLS}
00054         {\cf18 void} selectionChangedEvent ()\par
{\bkmkstart AAAAAAAJLT}{\bkmkend AAAAAAAJLT}
00055         \{\par
{\bkmkstart AAAAAAAJLU}{\bkmkend AAAAAAAJLU}
00056                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAJLV}{\bkmkend AAAAAAAJLV}
00057                 \{\par
{\bkmkstart AAAAAAAJLW}{\bkmkend AAAAAAAJLW}
00058                         mxWindow *parent = ((mxWidget *) d_widget)->getParent ();\par
{\bkmkstart AAAAAAAJLX}{\bkmkend AAAAAAAJLX}
00059                         mxEvent event;\par
{\bkmkstart AAAAAAAJLY}{\bkmkend AAAAAAAJLY}
00060                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAJLZ}{\bkmkend AAAAAAAJLZ}
00061                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAJMA}{\bkmkend AAAAAAAJMA}
00062                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAJMB}{\bkmkend AAAAAAAJMB}
00063                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAJMC}{\bkmkend AAAAAAAJMC}
00064                         \{\par
{\bkmkstart AAAAAAAJMD}{\bkmkend AAAAAAAJMD}
00065                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAJME}{\bkmkend AAAAAAAJME}
00066                                         {\cf19 break};\par
{\bkmkstart AAAAAAAJMF}{\bkmkend AAAAAAAJMF}
00067                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAJMG}{\bkmkend AAAAAAAJMG}
00068                         \}\par
{\bkmkstart AAAAAAAJMH}{\bkmkend AAAAAAAJMH}
00069                 \}\par
{\bkmkstart AAAAAAAJMI}{\bkmkend AAAAAAAJMI}
00070         \}\par
{\bkmkstart AAAAAAAJMJ}{\bkmkend AAAAAAAJMJ}
00071         \par
{\bkmkstart AAAAAAAJMK}{\bkmkend AAAAAAAJMK}
00072         {\cf18 void} doubleClickedEvent (QTreeWidgetItem *item, {\cf18 int} column)\par
{\bkmkstart AAAAAAAJML}{\bkmkend AAAAAAAJML}
00073         \{\par
{\bkmkstart AAAAAAAJMM}{\bkmkend AAAAAAAJMM}
00074                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAJMN}{\bkmkend AAAAAAAJMN}
00075                 \{\par
{\bkmkstart AAAAAAAJMO}{\bkmkend AAAAAAAJMO}
00076                         mxWindow *parent = ((mxWidget *) d_widget)->getParent ();\par
{\bkmkstart AAAAAAAJMP}{\bkmkend AAAAAAAJMP}
00077                         mxEvent event;\par
{\bkmkstart AAAAAAAJMQ}{\bkmkend AAAAAAAJMQ}
00078                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAJMR}{\bkmkend AAAAAAAJMR}
00079                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAJMS}{\bkmkend AAAAAAAJMS}
00080                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAJMT}{\bkmkend AAAAAAAJMT}
00081                         {\cf17 event}.flags = mxEvent::DoubleClicked;\par
{\bkmkstart AAAAAAAJMU}{\bkmkend AAAAAAAJMU}
00082                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAJMV}{\bkmkend AAAAAAAJMV}
00083                         \{\par
{\bkmkstart AAAAAAAJMW}{\bkmkend AAAAAAAJMW}
00084                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAJMX}{\bkmkend AAAAAAAJMX}
00085                                         {\cf19 break};\par
{\bkmkstart AAAAAAAJMY}{\bkmkend AAAAAAAJMY}
00086                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAJMZ}{\bkmkend AAAAAAAJMZ}
00087                         \}\par
{\bkmkstart AAAAAAAJNA}{\bkmkend AAAAAAAJNA}
00088                 \}\par
{\bkmkstart AAAAAAAJNB}{\bkmkend AAAAAAAJNB}
00089         \}\par
{\bkmkstart AAAAAAAJNC}{\bkmkend AAAAAAAJNC}
00090         \par
{\bkmkstart AAAAAAAJND}{\bkmkend AAAAAAAJND}
00091         {\cf18 void} rightButtonClickedEvent ({\cf17 const} QPoint &pos)\par
{\bkmkstart AAAAAAAJNE}{\bkmkend AAAAAAAJNE}
00092         \{\par
{\bkmkstart AAAAAAAJNF}{\bkmkend AAAAAAAJNF}
00093                 {\cf19 if} (d_widget->getId () > 0)\par
{\bkmkstart AAAAAAAJNG}{\bkmkend AAAAAAAJNG}
00094                 \{\par
{\bkmkstart AAAAAAAJNH}{\bkmkend AAAAAAAJNH}
00095                         mxWindow *parent = ((mxWidget *) d_widget)->getParent ();\par
{\bkmkstart AAAAAAAJNI}{\bkmkend AAAAAAAJNI}
00096                         mxEvent event;\par
{\bkmkstart AAAAAAAJNJ}{\bkmkend AAAAAAAJNJ}
00097                         {\cf17 event}.event = mxEvent::Action;\par
{\bkmkstart AAAAAAAJNK}{\bkmkend AAAAAAAJNK}
00098                         {\cf17 event}.widget = d_widget;\par
{\bkmkstart AAAAAAAJNL}{\bkmkend AAAAAAAJNL}
00099                         {\cf17 event}.action = d_widget->getId ();\par
{\bkmkstart AAAAAAAJNM}{\bkmkend AAAAAAAJNM}
00100                         {\cf17 event}.flags = mxEvent::RightClicked;\par
{\bkmkstart AAAAAAAJNN}{\bkmkend AAAAAAAJNN}
00101                         QPoint point = pos;{\cf20 //mapFromGlobal (pos);                       }\par
{\bkmkstart AAAAAAAJNO}{\bkmkend AAAAAAAJNO}
00102                         {\cf17 event}.x = point.x ();\par
{\bkmkstart AAAAAAAJNP}{\bkmkend AAAAAAAJNP}
00103                         {\cf17 event}.y = point.y ();\par
{\bkmkstart AAAAAAAJNQ}{\bkmkend AAAAAAAJNQ}
00104                         {\cf19 while} (parent)\par
{\bkmkstart AAAAAAAJNR}{\bkmkend AAAAAAAJNR}
00105                         \{\par
{\bkmkstart AAAAAAAJNS}{\bkmkend AAAAAAAJNS}
00106                                 {\cf19 if} (parent->handleEvent (&event))\par
{\bkmkstart AAAAAAAJNT}{\bkmkend AAAAAAAJNT}
00107                                         {\cf19 break};\par
{\bkmkstart AAAAAAAJNU}{\bkmkend AAAAAAAJNU}
00108                                 parent = parent->getParent ();\par
{\bkmkstart AAAAAAAJNV}{\bkmkend AAAAAAAJNV}
00109                         \}\par
{\bkmkstart AAAAAAAJNW}{\bkmkend AAAAAAAJNW}
00110                 \}\par
{\bkmkstart AAAAAAAJNX}{\bkmkend AAAAAAAJNX}
00111         \}\par
{\bkmkstart AAAAAAAJNY}{\bkmkend AAAAAAAJNY}
00112 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxWidget.cpp\par \pard\plain 
{\tc\tcl2 \v mxWidget.cpp}
{\xe \v mxWidget.cpp}
{\bkmkstart AAAAAAAJNZ}
{\bkmkend AAAAAAAJNZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAJOA}{\bkmkend AAAAAAAJOA}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAJOB}{\bkmkend AAAAAAAJOB}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAJOC}{\bkmkend AAAAAAAJOC}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAJOD}{\bkmkend AAAAAAAJOD}
00004 {\cf20 // file:           mxWidget.cpp}\par
{\bkmkstart AAAAAAAJOE}{\bkmkend AAAAAAAJOE}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAJOF}{\bkmkend AAAAAAAJOF}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAJOG}{\bkmkend AAAAAAAJOG}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAJOH}{\bkmkend AAAAAAAJOH}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAJOI}{\bkmkend AAAAAAAJOI}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAJOJ}{\bkmkend AAAAAAAJOJ}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAJOK}{\bkmkend AAAAAAAJOK}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAJOL}{\bkmkend AAAAAAAJOL}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAJOM}{\bkmkend AAAAAAAJOM}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAJON}{\bkmkend AAAAAAAJON}
00014 {\cf21 #include <mx/mxWidget.h>}\par
{\bkmkstart AAAAAAAJOO}{\bkmkend AAAAAAAJOO}
00015 {\cf21 #include <QWidget>}\par
{\bkmkstart AAAAAAAJOP}{\bkmkend AAAAAAAJOP}
00016 {\cf21 #include <QPushButton>}\par
{\bkmkstart AAAAAAAJOQ}{\bkmkend AAAAAAAJOQ}
00017 {\cf21 #include <QLineEdit>}\par
{\bkmkstart AAAAAAAJOR}{\bkmkend AAAAAAAJOR}
00018 {\cf21 #include <QLabel>}\par
{\bkmkstart AAAAAAAJOS}{\bkmkend AAAAAAAJOS}
00019 {\cf21 #include <QGroupBox>}\par
{\bkmkstart AAAAAAAJOT}{\bkmkend AAAAAAAJOT}
00020 {\cf21 #include <QCheckBox>}\par
{\bkmkstart AAAAAAAJOU}{\bkmkend AAAAAAAJOU}
00021 {\cf21 #include <QRadioButton>}\par
{\bkmkstart AAAAAAAJOV}{\bkmkend AAAAAAAJOV}
00022 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAAJOW}{\bkmkend AAAAAAAJOW}
00023 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAAJOX}{\bkmkend AAAAAAAJOX}
00024 \par
{\bkmkstart AAAAAAAJOY}{\bkmkend AAAAAAAJOY}
00025 \par
{\bkmkstart AAAAAAAJOZ}{\bkmkend AAAAAAAJOZ}
00026 \par
{\bkmkstart AAAAAAAJPA}{\bkmkend AAAAAAAJPA}
00027 {\cf18 void} mx_addWidget (mxWidget *widget);\par
{\bkmkstart AAAAAAAJPB}{\bkmkend AAAAAAAJPB}
00028 {\cf18 void} mx_removeWidget (mxWidget *widget);\par
{\bkmkstart AAAAAAAJPC}{\bkmkend AAAAAAAJPC}
00029 \par
{\bkmkstart AAAAAAAJPD}{\bkmkend AAAAAAAJPD}
00030 \par
{\bkmkstart AAAAAAAJPE}{\bkmkend AAAAAAAJPE}
00031 \par
{\bkmkstart AAAAAAAJPF}{\bkmkend AAAAAAAJPF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPG" }{}}{\fldrslt {\cs37\ul\cf2 00032}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPG" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget_i}}}
\par
{\bkmkstart AAAAAAAJPH}{\bkmkend AAAAAAAJPH}
00033 \{\par
{\bkmkstart AAAAAAAJPI}{\bkmkend AAAAAAAJPI}
00034 {\cf17 public}:\par
{\bkmkstart AAAAAAAJPJ}{\bkmkend AAAAAAAJPJ}
00035         mxWindow *d_parent_p;\par
{\bkmkstart AAAAAAAJPK}{\bkmkend AAAAAAAJPK}
00036         QWidget *d_widget;\par
{\bkmkstart AAAAAAAJPL}{\bkmkend AAAAAAAJPL}
00037         {\cf18 void} *d_userData;\par
{\bkmkstart AAAAAAAJPM}{\bkmkend AAAAAAAJPM}
00038 \par
{\bkmkstart AAAAAAAJPN}{\bkmkend AAAAAAAJPN}
00039         {\cf18 int} d_id;\par
{\bkmkstart AAAAAAAJPO}{\bkmkend AAAAAAAJPO}
00040         {\cf18 int} d_type;\par
{\bkmkstart AAAAAAAJPP}{\bkmkend AAAAAAAJPP}
00041 \};\par
{\bkmkstart AAAAAAAJPQ}{\bkmkend AAAAAAAJPQ}
00042 \par
{\bkmkstart AAAAAAAJPR}{\bkmkend AAAAAAAJPR}
00043 \par
{\bkmkstart AAAAAAAJPS}{\bkmkend AAAAAAAJPS}
00044 mxWidget::mxWidget (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *label)\par
{\bkmkstart AAAAAAAJPT}{\bkmkend AAAAAAAJPT}
00045 \{\par
{\bkmkstart AAAAAAAJPU}{\bkmkend AAAAAAAJPU}
00046         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAJPG" }{}}{\fldrslt {\cs37\ul\cf2 mxWidget_i}}}
;\par
{\bkmkstart AAAAAAAJPV}{\bkmkend AAAAAAAJPV}
00047         d_this->d_widget = {\cf17 nullptr};\par
{\bkmkstart AAAAAAAJPW}{\bkmkend AAAAAAAJPW}
00048 \par
{\bkmkstart AAAAAAAJPX}{\bkmkend AAAAAAAJPX}
00049         setHandle (0);\par
{\bkmkstart AAAAAAAJPY}{\bkmkend AAAAAAAJPY}
00050         setType (-1);\par
{\bkmkstart AAAAAAAJPZ}{\bkmkend AAAAAAAJPZ}
00051         setParent (parent);\par
{\bkmkstart AAAAAAAJQA}{\bkmkend AAAAAAAJQA}
00052         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAJQB}{\bkmkend AAAAAAAJQB}
00053         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAJQC}{\bkmkend AAAAAAAJQC}
00054         setEnabled ({\cf17 true});\par
{\bkmkstart AAAAAAAJQD}{\bkmkend AAAAAAAJQD}
00055         setUserData (0);\par
{\bkmkstart AAAAAAAJQE}{\bkmkend AAAAAAAJQE}
00056         setLabel (label);\par
{\bkmkstart AAAAAAAJQF}{\bkmkend AAAAAAAJQF}
00057         \par
{\bkmkstart AAAAAAAJQG}{\bkmkend AAAAAAAJQG}
00058         mx_addWidget ({\cf17 this});\par
{\bkmkstart AAAAAAAJQH}{\bkmkend AAAAAAAJQH}
00059 \}\par
{\bkmkstart AAAAAAAJQI}{\bkmkend AAAAAAAJQI}
00060 \par
{\bkmkstart AAAAAAAJQJ}{\bkmkend AAAAAAAJQJ}
00061 \par
{\bkmkstart AAAAAAAJQK}{\bkmkend AAAAAAAJQK}
00062 \par
{\bkmkstart AAAAAAAJQL}{\bkmkend AAAAAAAJQL}
00063 mxWidget::~mxWidget ()\par
{\bkmkstart AAAAAAAJQM}{\bkmkend AAAAAAAJQM}
00064 \{\par
{\bkmkstart AAAAAAAJQN}{\bkmkend AAAAAAAJQN}
00065         mx_removeWidget ({\cf17 this});\par
{\bkmkstart AAAAAAAJQO}{\bkmkend AAAAAAAJQO}
00066         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAJQP}{\bkmkend AAAAAAAJQP}
00067 \}\par
{\bkmkstart AAAAAAAJQQ}{\bkmkend AAAAAAAJQQ}
00068 \par
{\bkmkstart AAAAAAAJQR}{\bkmkend AAAAAAAJQR}
00069 \par
{\bkmkstart AAAAAAAJQS}{\bkmkend AAAAAAAJQS}
00070 \par
{\bkmkstart AAAAAAAJQT}{\bkmkend AAAAAAAJQT}
00071 {\cf18 void}\par
{\bkmkstart AAAAAAAJQU}{\bkmkend AAAAAAAJQU}
00072 mxWidget::setHandle ({\cf18 void} *handle)\par
{\bkmkstart AAAAAAAJQV}{\bkmkend AAAAAAAJQV}
00073 \{               \par
{\bkmkstart AAAAAAAJQW}{\bkmkend AAAAAAAJQW}
00074         d_this->d_widget = (QWidget *) handle;\par
{\bkmkstart AAAAAAAJQX}{\bkmkend AAAAAAAJQX}
00075 \}\par
{\bkmkstart AAAAAAAJQY}{\bkmkend AAAAAAAJQY}
00076 \par
{\bkmkstart AAAAAAAJQZ}{\bkmkend AAAAAAAJQZ}
00077 \par
{\bkmkstart AAAAAAAJRA}{\bkmkend AAAAAAAJRA}
00078 \par
{\bkmkstart AAAAAAAJRB}{\bkmkend AAAAAAAJRB}
00079 {\cf18 void}\par
{\bkmkstart AAAAAAAJRC}{\bkmkend AAAAAAAJRC}
00080 mxWidget::setType ({\cf18 int} type)\par
{\bkmkstart AAAAAAAJRD}{\bkmkend AAAAAAAJRD}
00081 \{\par
{\bkmkstart AAAAAAAJRE}{\bkmkend AAAAAAAJRE}
00082         d_this->d_type = type;\par
{\bkmkstart AAAAAAAJRF}{\bkmkend AAAAAAAJRF}
00083 \}\par
{\bkmkstart AAAAAAAJRG}{\bkmkend AAAAAAAJRG}
00084 \par
{\bkmkstart AAAAAAAJRH}{\bkmkend AAAAAAAJRH}
00085 \par
{\bkmkstart AAAAAAAJRI}{\bkmkend AAAAAAAJRI}
00086 \par
{\bkmkstart AAAAAAAJRJ}{\bkmkend AAAAAAAJRJ}
00087 {\cf18 void}\par
{\bkmkstart AAAAAAAJRK}{\bkmkend AAAAAAAJRK}
00088 mxWidget::setParent (mxWindow *parent)\par
{\bkmkstart AAAAAAAJRL}{\bkmkend AAAAAAAJRL}
00089 \{\par
{\bkmkstart AAAAAAAJRM}{\bkmkend AAAAAAAJRM}
00090         d_this->d_parent_p = parent;\par
{\bkmkstart AAAAAAAJRN}{\bkmkend AAAAAAAJRN}
00091 \}\par
{\bkmkstart AAAAAAAJRO}{\bkmkend AAAAAAAJRO}
00092 \par
{\bkmkstart AAAAAAAJRP}{\bkmkend AAAAAAAJRP}
00093 \par
{\bkmkstart AAAAAAAJRQ}{\bkmkend AAAAAAAJRQ}
00094 \par
{\bkmkstart AAAAAAAJRR}{\bkmkend AAAAAAAJRR}
00095 {\cf18 void}\par
{\bkmkstart AAAAAAAJRS}{\bkmkend AAAAAAAJRS}
00096 mxWidget::setBounds ({\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h)\par
{\bkmkstart AAAAAAAJRT}{\bkmkend AAAAAAAJRT}
00097 \{\par
{\bkmkstart AAAAAAAJRU}{\bkmkend AAAAAAAJRU}
00098         {\cf19 if} (d_this->d_widget)\par
{\bkmkstart AAAAAAAJRV}{\bkmkend AAAAAAAJRV}
00099         \{\par
{\bkmkstart AAAAAAAJRW}{\bkmkend AAAAAAAJRW}
00100                 d_this->d_widget->setGeometry (x, y, w, h);\par
{\bkmkstart AAAAAAAJRX}{\bkmkend AAAAAAAJRX}
00101         \}\par
{\bkmkstart AAAAAAAJRY}{\bkmkend AAAAAAAJRY}
00102 \}\par
{\bkmkstart AAAAAAAJRZ}{\bkmkend AAAAAAAJRZ}
00103 \par
{\bkmkstart AAAAAAAJSA}{\bkmkend AAAAAAAJSA}
00104 \par
{\bkmkstart AAAAAAAJSB}{\bkmkend AAAAAAAJSB}
00105 \par
{\bkmkstart AAAAAAAJSC}{\bkmkend AAAAAAAJSC}
00106 {\cf18 void}\par
{\bkmkstart AAAAAAAJSD}{\bkmkend AAAAAAAJSD}
00107 mxWidget::setLabel ({\cf17 const} {\cf18 char} *label)\par
{\bkmkstart AAAAAAAJSE}{\bkmkend AAAAAAAJSE}
00108 \{\par
{\bkmkstart AAAAAAAJSF}{\bkmkend AAAAAAAJSF}
00109         {\cf19 if} (d_this->d_widget)\par
{\bkmkstart AAAAAAAJSG}{\bkmkend AAAAAAAJSG}
00110         \{\par
{\bkmkstart AAAAAAAJSH}{\bkmkend AAAAAAAJSH}
00111                 {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QPushButton"}))\par
{\bkmkstart AAAAAAAJSI}{\bkmkend AAAAAAAJSI}
00112                         ((QPushButton *) d_this->d_widget)->setText (label);\par
{\bkmkstart AAAAAAAJSJ}{\bkmkend AAAAAAAJSJ}
00113                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QCheckBox"}))\par
{\bkmkstart AAAAAAAJSK}{\bkmkend AAAAAAAJSK}
00114                         ((QCheckBox *) d_this->d_widget)->setText (label);\par
{\bkmkstart AAAAAAAJSL}{\bkmkend AAAAAAAJSL}
00115                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QRadioButton"}))\par
{\bkmkstart AAAAAAAJSM}{\bkmkend AAAAAAAJSM}
00116                         ((QRadioButton *) d_this->d_widget)->setText (label);\par
{\bkmkstart AAAAAAAJSN}{\bkmkend AAAAAAAJSN}
00117                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QLineEdit"}))\par
{\bkmkstart AAAAAAAJSO}{\bkmkend AAAAAAAJSO}
00118                 \{\par
{\bkmkstart AAAAAAAJSP}{\bkmkend AAAAAAAJSP}
00119                         QLineEdit *le = (QLineEdit *) d_this->d_widget;\par
{\bkmkstart AAAAAAAJSQ}{\bkmkend AAAAAAAJSQ}
00120                         QObject::disconnect (le, SIGNAL(textChanged ({\cf17 const}\par
{\bkmkstart AAAAAAAJSR}{\bkmkend AAAAAAAJSR}
00121                         QString &)), le, SLOT (textChangedEvent ({\cf17 const} QString &)));\par
{\bkmkstart AAAAAAAJSS}{\bkmkend AAAAAAAJSS}
00122                         le->setText (label);\par
{\bkmkstart AAAAAAAJST}{\bkmkend AAAAAAAJST}
00123                         le->connect (le, SIGNAL(textChanged ({\cf17 const}\par
{\bkmkstart AAAAAAAJSU}{\bkmkend AAAAAAAJSU}
00124                         QString &)), le, SLOT (textChangedEvent ({\cf17 const} QString &)));\par
{\bkmkstart AAAAAAAJSV}{\bkmkend AAAAAAAJSV}
00125                 \}\par
{\bkmkstart AAAAAAAJSW}{\bkmkend AAAAAAAJSW}
00126                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QLabel"}))\par
{\bkmkstart AAAAAAAJSX}{\bkmkend AAAAAAAJSX}
00127                         ((QLabel *) d_this->d_widget)->setText (label);\par
{\bkmkstart AAAAAAAJSY}{\bkmkend AAAAAAAJSY}
00128                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QGroupBox"}))\par
{\bkmkstart AAAAAAAJSZ}{\bkmkend AAAAAAAJSZ}
00129                         ((QGroupBox *) d_this->d_widget)->setTitle (label);\par
{\bkmkstart AAAAAAAJTA}{\bkmkend AAAAAAAJTA}
00130                 {\cf19 else}\par
{\bkmkstart AAAAAAAJTB}{\bkmkend AAAAAAAJTB}
00131                         d_this->d_widget->setWindowTitle (label);\par
{\bkmkstart AAAAAAAJTC}{\bkmkend AAAAAAAJTC}
00132         \}\par
{\bkmkstart AAAAAAAJTD}{\bkmkend AAAAAAAJTD}
00133 \}\par
{\bkmkstart AAAAAAAJTE}{\bkmkend AAAAAAAJTE}
00134 \par
{\bkmkstart AAAAAAAJTF}{\bkmkend AAAAAAAJTF}
00135 \par
{\bkmkstart AAAAAAAJTG}{\bkmkend AAAAAAAJTG}
00136 \par
{\bkmkstart AAAAAAAJTH}{\bkmkend AAAAAAAJTH}
00137 {\cf18 void}\par
{\bkmkstart AAAAAAAJTI}{\bkmkend AAAAAAAJTI}
00138 mxWidget::setVisible ({\cf18 bool} b)\par
{\bkmkstart AAAAAAAJTJ}{\bkmkend AAAAAAAJTJ}
00139 \{\par
{\bkmkstart AAAAAAAJTK}{\bkmkend AAAAAAAJTK}
00140         {\cf19 if} (d_this->d_widget)\par
{\bkmkstart AAAAAAAJTL}{\bkmkend AAAAAAAJTL}
00141         \{\par
{\bkmkstart AAAAAAAJTM}{\bkmkend AAAAAAAJTM}
00142                  {\cf19 if} (b)\par
{\bkmkstart AAAAAAAJTN}{\bkmkend AAAAAAAJTN}
00143                         d_this->d_widget->show ();\par
{\bkmkstart AAAAAAAJTO}{\bkmkend AAAAAAAJTO}
00144                 {\cf19 else}\par
{\bkmkstart AAAAAAAJTP}{\bkmkend AAAAAAAJTP}
00145                         d_this->d_widget->hide ();\par
{\bkmkstart AAAAAAAJTQ}{\bkmkend AAAAAAAJTQ}
00146         \}\par
{\bkmkstart AAAAAAAJTR}{\bkmkend AAAAAAAJTR}
00147 \}\par
{\bkmkstart AAAAAAAJTS}{\bkmkend AAAAAAAJTS}
00148 \par
{\bkmkstart AAAAAAAJTT}{\bkmkend AAAAAAAJTT}
00149 \par
{\bkmkstart AAAAAAAJTU}{\bkmkend AAAAAAAJTU}
00150 \par
{\bkmkstart AAAAAAAJTV}{\bkmkend AAAAAAAJTV}
00151 {\cf18 void}\par
{\bkmkstart AAAAAAAJTW}{\bkmkend AAAAAAAJTW}
00152 mxWidget::setEnabled ({\cf18 bool} b)\par
{\bkmkstart AAAAAAAJTX}{\bkmkend AAAAAAAJTX}
00153 \{\par
{\bkmkstart AAAAAAAJTY}{\bkmkend AAAAAAAJTY}
00154         {\cf19 if} (d_this->d_widget)\par
{\bkmkstart AAAAAAAJTZ}{\bkmkend AAAAAAAJTZ}
00155         \{\par
{\bkmkstart AAAAAAAJUA}{\bkmkend AAAAAAAJUA}
00156                 d_this->d_widget->setEnabled (b);\par
{\bkmkstart AAAAAAAJUB}{\bkmkend AAAAAAAJUB}
00157         \}\par
{\bkmkstart AAAAAAAJUC}{\bkmkend AAAAAAAJUC}
00158 \}\par
{\bkmkstart AAAAAAAJUD}{\bkmkend AAAAAAAJUD}
00159 \par
{\bkmkstart AAAAAAAJUE}{\bkmkend AAAAAAAJUE}
00160 \par
{\bkmkstart AAAAAAAJUF}{\bkmkend AAAAAAAJUF}
00161 \par
{\bkmkstart AAAAAAAJUG}{\bkmkend AAAAAAAJUG}
00162 {\cf18 void}\par
{\bkmkstart AAAAAAAJUH}{\bkmkend AAAAAAAJUH}
00163 mxWidget::setId ({\cf18 int} {\cf18 id})\par
{\bkmkstart AAAAAAAJUI}{\bkmkend AAAAAAAJUI}
00164 \{\par
{\bkmkstart AAAAAAAJUJ}{\bkmkend AAAAAAAJUJ}
00165         d_this->d_id = id;\par
{\bkmkstart AAAAAAAJUK}{\bkmkend AAAAAAAJUK}
00166 \}\par
{\bkmkstart AAAAAAAJUL}{\bkmkend AAAAAAAJUL}
00167 \par
{\bkmkstart AAAAAAAJUM}{\bkmkend AAAAAAAJUM}
00168 \par
{\bkmkstart AAAAAAAJUN}{\bkmkend AAAAAAAJUN}
00169 \par
{\bkmkstart AAAAAAAJUO}{\bkmkend AAAAAAAJUO}
00170 {\cf18 void}\par
{\bkmkstart AAAAAAAJUP}{\bkmkend AAAAAAAJUP}
00171 mxWidget::setUserData ({\cf18 void} *userData)\par
{\bkmkstart AAAAAAAJUQ}{\bkmkend AAAAAAAJUQ}
00172 \{\par
{\bkmkstart AAAAAAAJUR}{\bkmkend AAAAAAAJUR}
00173         d_this->d_userData = userData;\par
{\bkmkstart AAAAAAAJUS}{\bkmkend AAAAAAAJUS}
00174 \}\par
{\bkmkstart AAAAAAAJUT}{\bkmkend AAAAAAAJUT}
00175 \par
{\bkmkstart AAAAAAAJUU}{\bkmkend AAAAAAAJUU}
00176 \par
{\bkmkstart AAAAAAAJUV}{\bkmkend AAAAAAAJUV}
00177 \par
{\bkmkstart AAAAAAAJUW}{\bkmkend AAAAAAAJUW}
00178 {\cf18 void}*\par
{\bkmkstart AAAAAAAJUX}{\bkmkend AAAAAAAJUX}
00179 mxWidget::getHandle (){\cf17  const}\par
{\bkmkstart AAAAAAAJUY}{\bkmkend AAAAAAAJUY}
00180 {\cf17 }\{\par
{\bkmkstart AAAAAAAJUZ}{\bkmkend AAAAAAAJUZ}
00181         {\cf19 return} ({\cf18 void} *) d_this->d_widget;\par
{\bkmkstart AAAAAAAJVA}{\bkmkend AAAAAAAJVA}
00182 \}\par
{\bkmkstart AAAAAAAJVB}{\bkmkend AAAAAAAJVB}
00183 \par
{\bkmkstart AAAAAAAJVC}{\bkmkend AAAAAAAJVC}
00184 \par
{\bkmkstart AAAAAAAJVD}{\bkmkend AAAAAAAJVD}
00185 \par
{\bkmkstart AAAAAAAJVE}{\bkmkend AAAAAAAJVE}
00186 {\cf18 int}\par
{\bkmkstart AAAAAAAJVF}{\bkmkend AAAAAAAJVF}
00187 mxWidget::getType (){\cf17  const}\par
{\bkmkstart AAAAAAAJVG}{\bkmkend AAAAAAAJVG}
00188 {\cf17 }\{\par
{\bkmkstart AAAAAAAJVH}{\bkmkend AAAAAAAJVH}
00189         {\cf19 return} d_this->d_type;\par
{\bkmkstart AAAAAAAJVI}{\bkmkend AAAAAAAJVI}
00190 \}\par
{\bkmkstart AAAAAAAJVJ}{\bkmkend AAAAAAAJVJ}
00191 \par
{\bkmkstart AAAAAAAJVK}{\bkmkend AAAAAAAJVK}
00192 \par
{\bkmkstart AAAAAAAJVL}{\bkmkend AAAAAAAJVL}
00193 \par
{\bkmkstart AAAAAAAJVM}{\bkmkend AAAAAAAJVM}
00194 mxWindow*\par
{\bkmkstart AAAAAAAJVN}{\bkmkend AAAAAAAJVN}
00195 mxWidget::getParent (){\cf17  const}\par
{\bkmkstart AAAAAAAJVO}{\bkmkend AAAAAAAJVO}
00196 {\cf17 }\{\par
{\bkmkstart AAAAAAAJVP}{\bkmkend AAAAAAAJVP}
00197         {\cf19 return} d_this->d_parent_p;\par
{\bkmkstart AAAAAAAJVQ}{\bkmkend AAAAAAAJVQ}
00198 \}\par
{\bkmkstart AAAAAAAJVR}{\bkmkend AAAAAAAJVR}
00199 \par
{\bkmkstart AAAAAAAJVS}{\bkmkend AAAAAAAJVS}
00200 \par
{\bkmkstart AAAAAAAJVT}{\bkmkend AAAAAAAJVT}
00201 \par
{\bkmkstart AAAAAAAJVU}{\bkmkend AAAAAAAJVU}
00202 {\cf18 int}\par
{\bkmkstart AAAAAAAJVV}{\bkmkend AAAAAAAJVV}
00203 mxWidget::x (){\cf17  const}\par
{\bkmkstart AAAAAAAJVW}{\bkmkend AAAAAAAJVW}
00204 {\cf17 }\{\par
{\bkmkstart AAAAAAAJVX}{\bkmkend AAAAAAAJVX}
00205         {\cf19 return} d_this->d_widget->x ();\par
{\bkmkstart AAAAAAAJVY}{\bkmkend AAAAAAAJVY}
00206 \}\par
{\bkmkstart AAAAAAAJVZ}{\bkmkend AAAAAAAJVZ}
00207 \par
{\bkmkstart AAAAAAAJWA}{\bkmkend AAAAAAAJWA}
00208 \par
{\bkmkstart AAAAAAAJWB}{\bkmkend AAAAAAAJWB}
00209 \par
{\bkmkstart AAAAAAAJWC}{\bkmkend AAAAAAAJWC}
00210 {\cf18 int}\par
{\bkmkstart AAAAAAAJWD}{\bkmkend AAAAAAAJWD}
00211 mxWidget::y (){\cf17  const}\par
{\bkmkstart AAAAAAAJWE}{\bkmkend AAAAAAAJWE}
00212 {\cf17 }\{\par
{\bkmkstart AAAAAAAJWF}{\bkmkend AAAAAAAJWF}
00213         {\cf19 return} d_this->d_widget->y ();\par
{\bkmkstart AAAAAAAJWG}{\bkmkend AAAAAAAJWG}
00214 \par
{\bkmkstart AAAAAAAJWH}{\bkmkend AAAAAAAJWH}
00215 \}\par
{\bkmkstart AAAAAAAJWI}{\bkmkend AAAAAAAJWI}
00216 \par
{\bkmkstart AAAAAAAJWJ}{\bkmkend AAAAAAAJWJ}
00217 \par
{\bkmkstart AAAAAAAJWK}{\bkmkend AAAAAAAJWK}
00218 \par
{\bkmkstart AAAAAAAJWL}{\bkmkend AAAAAAAJWL}
00219 {\cf18 int}\par
{\bkmkstart AAAAAAAJWM}{\bkmkend AAAAAAAJWM}
00220 mxWidget::w (){\cf17  const}\par
{\bkmkstart AAAAAAAJWN}{\bkmkend AAAAAAAJWN}
00221 {\cf17 }\{\par
{\bkmkstart AAAAAAAJWO}{\bkmkend AAAAAAAJWO}
00222         {\cf19 return} d_this->d_widget->width ();\par
{\bkmkstart AAAAAAAJWP}{\bkmkend AAAAAAAJWP}
00223 \}\par
{\bkmkstart AAAAAAAJWQ}{\bkmkend AAAAAAAJWQ}
00224 \par
{\bkmkstart AAAAAAAJWR}{\bkmkend AAAAAAAJWR}
00225 \par
{\bkmkstart AAAAAAAJWS}{\bkmkend AAAAAAAJWS}
00226 \par
{\bkmkstart AAAAAAAJWT}{\bkmkend AAAAAAAJWT}
00227 {\cf18 int}\par
{\bkmkstart AAAAAAAJWU}{\bkmkend AAAAAAAJWU}
00228 mxWidget:: h (){\cf17  const}\par
{\bkmkstart AAAAAAAJWV}{\bkmkend AAAAAAAJWV}
00229 {\cf17 }\{\par
{\bkmkstart AAAAAAAJWW}{\bkmkend AAAAAAAJWW}
00230         {\cf19 return} d_this->d_widget->height ();\par
{\bkmkstart AAAAAAAJWX}{\bkmkend AAAAAAAJWX}
00231 \}\par
{\bkmkstart AAAAAAAJWY}{\bkmkend AAAAAAAJWY}
00232 \par
{\bkmkstart AAAAAAAJWZ}{\bkmkend AAAAAAAJWZ}
00233 \par
{\bkmkstart AAAAAAAJXA}{\bkmkend AAAAAAAJXA}
00234 \par
{\bkmkstart AAAAAAAJXB}{\bkmkend AAAAAAAJXB}
00235 {\cf18 int}\par
{\bkmkstart AAAAAAAJXC}{\bkmkend AAAAAAAJXC}
00236 mxWidget::w2 (){\cf17  const}\par
{\bkmkstart AAAAAAAJXD}{\bkmkend AAAAAAAJXD}
00237 {\cf17 }\{\par
{\bkmkstart AAAAAAAJXE}{\bkmkend AAAAAAAJXE}
00238         {\cf19 return} d_this->d_widget->width ();\par
{\bkmkstart AAAAAAAJXF}{\bkmkend AAAAAAAJXF}
00239 \}\par
{\bkmkstart AAAAAAAJXG}{\bkmkend AAAAAAAJXG}
00240 \par
{\bkmkstart AAAAAAAJXH}{\bkmkend AAAAAAAJXH}
00241 \par
{\bkmkstart AAAAAAAJXI}{\bkmkend AAAAAAAJXI}
00242 \par
{\bkmkstart AAAAAAAJXJ}{\bkmkend AAAAAAAJXJ}
00243 {\cf18 int}\par
{\bkmkstart AAAAAAAJXK}{\bkmkend AAAAAAAJXK}
00244 mxWidget:: h2 (){\cf17  const}\par
{\bkmkstart AAAAAAAJXL}{\bkmkend AAAAAAAJXL}
00245 {\cf17 }\{\par
{\bkmkstart AAAAAAAJXM}{\bkmkend AAAAAAAJXM}
00246         {\cf19 return} d_this->d_widget->height ();\par
{\bkmkstart AAAAAAAJXN}{\bkmkend AAAAAAAJXN}
00247 \}\par
{\bkmkstart AAAAAAAJXO}{\bkmkend AAAAAAAJXO}
00248 \par
{\bkmkstart AAAAAAAJXP}{\bkmkend AAAAAAAJXP}
00249 \par
{\bkmkstart AAAAAAAJXQ}{\bkmkend AAAAAAAJXQ}
00250 \par
{\bkmkstart AAAAAAAJXR}{\bkmkend AAAAAAAJXR}
00251 {\cf17 const} {\cf18 char}*\par
{\bkmkstart AAAAAAAJXS}{\bkmkend AAAAAAAJXS}
00252 mxWidget::getLabel (){\cf17  const}\par
{\bkmkstart AAAAAAAJXT}{\bkmkend AAAAAAAJXT}
00253 {\cf17 }\{\par
{\bkmkstart AAAAAAAJXU}{\bkmkend AAAAAAAJXU}
00254         {\cf19 if} (d_this->d_widget)\par
{\bkmkstart AAAAAAAJXV}{\bkmkend AAAAAAAJXV}
00255         \{\par
{\bkmkstart AAAAAAAJXW}{\bkmkend AAAAAAAJXW}
00256                 {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QPushButton"}))\par
{\bkmkstart AAAAAAAJXX}{\bkmkend AAAAAAAJXX}
00257                         {\cf19 return} qPrintable(((QPushButton *) d_this->d_widget)->text ());\par
{\bkmkstart AAAAAAAJXY}{\bkmkend AAAAAAAJXY}
00258                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QCheckBox"}))\par
{\bkmkstart AAAAAAAJXZ}{\bkmkend AAAAAAAJXZ}
00259                         {\cf19 return} qPrintable(((QCheckBox *) d_this->d_widget)->text ());\par
{\bkmkstart AAAAAAAJYA}{\bkmkend AAAAAAAJYA}
00260                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QRadioButton"}))\par
{\bkmkstart AAAAAAAJYB}{\bkmkend AAAAAAAJYB}
00261                         {\cf19 return} qPrintable(((QRadioButton *) d_this->d_widget)->text ());\par
{\bkmkstart AAAAAAAJYC}{\bkmkend AAAAAAAJYC}
00262                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QLineEdit"}))\par
{\bkmkstart AAAAAAAJYD}{\bkmkend AAAAAAAJYD}
00263                         {\cf19 return} qPrintable(((QLineEdit *) d_this->d_widget)->text ());\par
{\bkmkstart AAAAAAAJYE}{\bkmkend AAAAAAAJYE}
00264                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QLabel"}))\par
{\bkmkstart AAAAAAAJYF}{\bkmkend AAAAAAAJYF}
00265                         {\cf19 return} qPrintable(((QLabel *) d_this->d_widget)->text ());\par
{\bkmkstart AAAAAAAJYG}{\bkmkend AAAAAAAJYG}
00266                 {\cf19 else} {\cf19 if} (d_this->d_widget->inherits ({\cf22 "QGroupBox"}))\par
{\bkmkstart AAAAAAAJYH}{\bkmkend AAAAAAAJYH}
00267                         {\cf19 return} qPrintable(((QGroupBox *) d_this->d_widget)->title ());\par
{\bkmkstart AAAAAAAJYI}{\bkmkend AAAAAAAJYI}
00268                 {\cf19 else}\par
{\bkmkstart AAAAAAAJYJ}{\bkmkend AAAAAAAJYJ}
00269                         {\cf19 return} qPrintable(d_this->d_widget->windowTitle ());\par
{\bkmkstart AAAAAAAJYK}{\bkmkend AAAAAAAJYK}
00270         \}\par
{\bkmkstart AAAAAAAJYL}{\bkmkend AAAAAAAJYL}
00271         {\cf19 return} {\cf22 ""};\par
{\bkmkstart AAAAAAAJYM}{\bkmkend AAAAAAAJYM}
00272 \}\par
{\bkmkstart AAAAAAAJYN}{\bkmkend AAAAAAAJYN}
00273 \par
{\bkmkstart AAAAAAAJYO}{\bkmkend AAAAAAAJYO}
00274 \par
{\bkmkstart AAAAAAAJYP}{\bkmkend AAAAAAAJYP}
00275 \par
{\bkmkstart AAAAAAAJYQ}{\bkmkend AAAAAAAJYQ}
00276 {\cf18 bool}\par
{\bkmkstart AAAAAAAJYR}{\bkmkend AAAAAAAJYR}
00277 mxWidget::isVisible (){\cf17  const}\par
{\bkmkstart AAAAAAAJYS}{\bkmkend AAAAAAAJYS}
00278 {\cf17 }\{\par
{\bkmkstart AAAAAAAJYT}{\bkmkend AAAAAAAJYT}
00279         {\cf19 return} d_this->d_widget->isVisible ();\par
{\bkmkstart AAAAAAAJYU}{\bkmkend AAAAAAAJYU}
00280 \}\par
{\bkmkstart AAAAAAAJYV}{\bkmkend AAAAAAAJYV}
00281 \par
{\bkmkstart AAAAAAAJYW}{\bkmkend AAAAAAAJYW}
00282 \par
{\bkmkstart AAAAAAAJYX}{\bkmkend AAAAAAAJYX}
00283 \par
{\bkmkstart AAAAAAAJYY}{\bkmkend AAAAAAAJYY}
00284 {\cf18 bool}\par
{\bkmkstart AAAAAAAJYZ}{\bkmkend AAAAAAAJYZ}
00285 mxWidget::isEnabled (){\cf17  const}\par
{\bkmkstart AAAAAAAJZA}{\bkmkend AAAAAAAJZA}
00286 {\cf17 }\{\par
{\bkmkstart AAAAAAAJZB}{\bkmkend AAAAAAAJZB}
00287         {\cf19 return} d_this->d_widget->isEnabled ();\par
{\bkmkstart AAAAAAAJZC}{\bkmkend AAAAAAAJZC}
00288 \}\par
{\bkmkstart AAAAAAAJZD}{\bkmkend AAAAAAAJZD}
00289 \par
{\bkmkstart AAAAAAAJZE}{\bkmkend AAAAAAAJZE}
00290 \par
{\bkmkstart AAAAAAAJZF}{\bkmkend AAAAAAAJZF}
00291 \par
{\bkmkstart AAAAAAAJZG}{\bkmkend AAAAAAAJZG}
00292 {\cf18 int}\par
{\bkmkstart AAAAAAAJZH}{\bkmkend AAAAAAAJZH}
00293 mxWidget::getId (){\cf17  const}\par
{\bkmkstart AAAAAAAJZI}{\bkmkend AAAAAAAJZI}
00294 {\cf17 }\{\par
{\bkmkstart AAAAAAAJZJ}{\bkmkend AAAAAAAJZJ}
00295         {\cf19 return} d_this->d_id;\par
{\bkmkstart AAAAAAAJZK}{\bkmkend AAAAAAAJZK}
00296 \}\par
{\bkmkstart AAAAAAAJZL}{\bkmkend AAAAAAAJZL}
00297 \par
{\bkmkstart AAAAAAAJZM}{\bkmkend AAAAAAAJZM}
00298 \par
{\bkmkstart AAAAAAAJZN}{\bkmkend AAAAAAAJZN}
00299 \par
{\bkmkstart AAAAAAAJZO}{\bkmkend AAAAAAAJZO}
00300 {\cf18 void}*\par
{\bkmkstart AAAAAAAJZP}{\bkmkend AAAAAAAJZP}
00301 mxWidget::getUserData (){\cf17  const}\par
{\bkmkstart AAAAAAAJZQ}{\bkmkend AAAAAAAJZQ}
00302 {\cf17 }\{\par
{\bkmkstart AAAAAAAJZR}{\bkmkend AAAAAAAJZR}
00303         {\cf19 return} d_this->d_userData;\par
{\bkmkstart AAAAAAAJZS}{\bkmkend AAAAAAAJZS}
00304 \}\par
{\bkmkstart AAAAAAAJZT}{\bkmkend AAAAAAAJZT}
00305 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxWindow.cpp\par \pard\plain 
{\tc\tcl2 \v mxWindow.cpp}
{\xe \v mxWindow.cpp}
{\bkmkstart AAAAAAAJZU}
{\bkmkend AAAAAAAJZU}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAJZV}{\bkmkend AAAAAAAJZV}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAJZW}{\bkmkend AAAAAAAJZW}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAJZX}{\bkmkend AAAAAAAJZX}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAJZY}{\bkmkend AAAAAAAJZY}
00004 {\cf20 // file:           mxWindow.cpp}\par
{\bkmkstart AAAAAAAJZZ}{\bkmkend AAAAAAAJZZ}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAKAA}{\bkmkend AAAAAAAKAA}
00006 {\cf20 // last modified:  Mar 19 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAKAB}{\bkmkend AAAAAAAKAB}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAKAC}{\bkmkend AAAAAAAKAC}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAKAD}{\bkmkend AAAAAAAKAD}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAKAE}{\bkmkend AAAAAAAKAE}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAKAF}{\bkmkend AAAAAAAKAF}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAKAG}{\bkmkend AAAAAAAKAG}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAKAH}{\bkmkend AAAAAAAKAH}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAKAI}{\bkmkend AAAAAAAKAI}
00014 {\cf21 #include "mxWindow_i.h"}\par
{\bkmkstart AAAAAAAKAJ}{\bkmkend AAAAAAAKAJ}
00015 \par
{\bkmkstart AAAAAAAKAK}{\bkmkend AAAAAAAKAK}
00016 \par
{\bkmkstart AAAAAAAKAL}{\bkmkend AAAAAAAKAL}
00017 \par
{\bkmkstart AAAAAAAKAM}{\bkmkend AAAAAAAKAM}
00018 {\cf17 extern} QApplication *d_Application;\par
{\bkmkstart AAAAAAAKAN}{\bkmkend AAAAAAAKAN}
00019 {\cf17 extern} mxWindow *d_mainWindow;\par
{\bkmkstart AAAAAAAKAO}{\bkmkend AAAAAAAKAO}
00020 \par
{\bkmkstart AAAAAAAKAP}{\bkmkend AAAAAAAKAP}
00021 \par
{\bkmkstart AAAAAAAKAQ}{\bkmkend AAAAAAAKAQ}
00022 \par
{\bkmkstart AAAAAAAKAR}{\bkmkend AAAAAAAKAR}
00023 mxWindow::mxWindow (mxWindow *parent, {\cf18 int} x, {\cf18 int} y, {\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char}\par
{\bkmkstart AAAAAAAKAS}{\bkmkend AAAAAAAKAS}
00024 *label, {\cf18 int} style)\par
{\bkmkstart AAAAAAAKAT}{\bkmkend AAAAAAAKAT}
00025 : mxWidget (parent, x, y, w, h, label)\par
{\bkmkstart AAAAAAAKAU}{\bkmkend AAAAAAAKAU}
00026 \{\par
{\bkmkstart AAAAAAAKAV}{\bkmkend AAAAAAAKAV}
00027         QWidget *p = 0;\par
{\bkmkstart AAAAAAAKAW}{\bkmkend AAAAAAAKAW}
00028         Qt::WindowFlags flags;\par
{\bkmkstart AAAAAAAKAX}{\bkmkend AAAAAAAKAX}
00029 \par
{\bkmkstart AAAAAAAKAY}{\bkmkend AAAAAAAKAY}
00030         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAKAZ}{\bkmkend AAAAAAAKAZ}
00031                 p = (QWidget *) parent->getHandle ();\par
{\bkmkstart AAAAAAAKBA}{\bkmkend AAAAAAAKBA}
00032 \par
{\bkmkstart AAAAAAAKBB}{\bkmkend AAAAAAAKBB}
00033         d_this = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKBC" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i}}}
 (p, {\cf17 this});\par
{\bkmkstart AAAAAAAKBD}{\bkmkend AAAAAAAKBD}
00034 \par
{\bkmkstart AAAAAAAKBE}{\bkmkend AAAAAAAKBE}
00035         setHandle (({\cf18 void} *) d_this);\par
{\bkmkstart AAAAAAAKBF}{\bkmkend AAAAAAAKBF}
00036         setParent (parent);\par
{\bkmkstart AAAAAAAKBG}{\bkmkend AAAAAAAKBG}
00037 \par
{\bkmkstart AAAAAAAKBH}{\bkmkend AAAAAAAKBH}
00038         {\cf19 if} (style == Normal)\par
{\bkmkstart AAAAAAAKBI}{\bkmkend AAAAAAAKBI}
00039                 flags = Qt::Widget;\par
{\bkmkstart AAAAAAAKBJ}{\bkmkend AAAAAAAKBJ}
00040         {\cf19 else} {\cf19 if} (style == Popup)\par
{\bkmkstart AAAAAAAKBK}{\bkmkend AAAAAAAKBK}
00041                 flags = Qt::Popup;\par
{\bkmkstart AAAAAAAKBL}{\bkmkend AAAAAAAKBL}
00042         {\cf19 else} {\cf19 if} (style == Dialog)\par
{\bkmkstart AAAAAAAKBM}{\bkmkend AAAAAAAKBM}
00043                 flags = Qt::Dialog;\par
{\bkmkstart AAAAAAAKBN}{\bkmkend AAAAAAAKBN}
00044         {\cf19 else} {\cf19 if} (style == ModalDialog)\par
{\bkmkstart AAAAAAAKBO}{\bkmkend AAAAAAAKBO}
00045         \{\par
{\bkmkstart AAAAAAAKBP}{\bkmkend AAAAAAAKBP}
00046                 d_this->setWindowModality(Qt::WindowModal);\par
{\bkmkstart AAAAAAAKBQ}{\bkmkend AAAAAAAKBQ}
00047                 flags = Qt::Dialog;\par
{\bkmkstart AAAAAAAKBR}{\bkmkend AAAAAAAKBR}
00048         \}\par
{\bkmkstart AAAAAAAKBS}{\bkmkend AAAAAAAKBS}
00049 \par
{\bkmkstart AAAAAAAKBT}{\bkmkend AAAAAAAKBT}
00050         d_this->setWindowFlags(flags);\par
{\bkmkstart AAAAAAAKBU}{\bkmkend AAAAAAAKBU}
00051 \par
{\bkmkstart AAAAAAAKBV}{\bkmkend AAAAAAAKBV}
00052         {\cf19 if} (parent)\par
{\bkmkstart AAAAAAAKBW}{\bkmkend AAAAAAAKBW}
00053         \{\par
{\bkmkstart AAAAAAAKBX}{\bkmkend AAAAAAAKBX}
00054                 setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAKBY}{\bkmkend AAAAAAAKBY}
00055         \}\par
{\bkmkstart AAAAAAAKBZ}{\bkmkend AAAAAAAKBZ}
00056 \par
{\bkmkstart AAAAAAAKCA}{\bkmkend AAAAAAAKCA}
00057 \par
{\bkmkstart AAAAAAAKCB}{\bkmkend AAAAAAAKCB}
00058         setLabel (label);\par
{\bkmkstart AAAAAAAKCC}{\bkmkend AAAAAAAKCC}
00059         setBounds (x, y, w, h);\par
{\bkmkstart AAAAAAAKCD}{\bkmkend AAAAAAAKCD}
00060         setType (MX_WINDOW);\par
{\bkmkstart AAAAAAAKCE}{\bkmkend AAAAAAAKCE}
00061         \par
{\bkmkstart AAAAAAAKCF}{\bkmkend AAAAAAAKCF}
00062         {\cf19 if} (!d_mainWindow)\par
{\bkmkstart AAAAAAAKCG}{\bkmkend AAAAAAAKCG}
00063         \{\par
{\bkmkstart AAAAAAAKCH}{\bkmkend AAAAAAAKCH}
00064                 d_mainWindow = {\cf17 this};\par
{\bkmkstart AAAAAAAKCI}{\bkmkend AAAAAAAKCI}
00065         \}\par
{\bkmkstart AAAAAAAKCJ}{\bkmkend AAAAAAAKCJ}
00066 \}\par
{\bkmkstart AAAAAAAKCK}{\bkmkend AAAAAAAKCK}
00067 \par
{\bkmkstart AAAAAAAKCL}{\bkmkend AAAAAAAKCL}
00068 \par
{\bkmkstart AAAAAAAKCM}{\bkmkend AAAAAAAKCM}
00069 \par
{\bkmkstart AAAAAAAKCN}{\bkmkend AAAAAAAKCN}
00070 mxWindow::~mxWindow ()\par
{\bkmkstart AAAAAAAKCO}{\bkmkend AAAAAAAKCO}
00071 \{\par
{\bkmkstart AAAAAAAKCP}{\bkmkend AAAAAAAKCP}
00072         d_this->killTimer (d_this->getTimerId());\par
{\bkmkstart AAAAAAAKCQ}{\bkmkend AAAAAAAKCQ}
00073         {\cf17 delete} d_this;\par
{\bkmkstart AAAAAAAKCR}{\bkmkend AAAAAAAKCR}
00074 \}\par
{\bkmkstart AAAAAAAKCS}{\bkmkend AAAAAAAKCS}
00075 \par
{\bkmkstart AAAAAAAKCT}{\bkmkend AAAAAAAKCT}
00076 \par
{\bkmkstart AAAAAAAKCU}{\bkmkend AAAAAAAKCU}
00077 \par
{\bkmkstart AAAAAAAKCV}{\bkmkend AAAAAAAKCV}
00078 {\cf18 int}\par
{\bkmkstart AAAAAAAKCW}{\bkmkend AAAAAAAKCW}
00079 mxWindow::handleEvent (mxEvent *event)\par
{\bkmkstart AAAAAAAKCX}{\bkmkend AAAAAAAKCX}
00080 \{\par
{\bkmkstart AAAAAAAKCY}{\bkmkend AAAAAAAKCY}
00081         {\cf19 return} 0;\par
{\bkmkstart AAAAAAAKCZ}{\bkmkend AAAAAAAKCZ}
00082 \}\par
{\bkmkstart AAAAAAAKDA}{\bkmkend AAAAAAAKDA}
00083 \par
{\bkmkstart AAAAAAAKDB}{\bkmkend AAAAAAAKDB}
00084 \par
{\bkmkstart AAAAAAAKDC}{\bkmkend AAAAAAAKDC}
00085 \par
{\bkmkstart AAAAAAAKDD}{\bkmkend AAAAAAAKDD}
00086 {\cf18 void}\par
{\bkmkstart AAAAAAAKDE}{\bkmkend AAAAAAAKDE}
00087 mxWindow::redraw ()\par
{\bkmkstart AAAAAAAKDF}{\bkmkend AAAAAAAKDF}
00088 \{\par
{\bkmkstart AAAAAAAKDG}{\bkmkend AAAAAAAKDG}
00089 \}\par
{\bkmkstart AAAAAAAKDH}{\bkmkend AAAAAAAKDH}
00090 \par
{\bkmkstart AAAAAAAKDI}{\bkmkend AAAAAAAKDI}
00091 \par
{\bkmkstart AAAAAAAKDJ}{\bkmkend AAAAAAAKDJ}
00092 \par
{\bkmkstart AAAAAAAKDK}{\bkmkend AAAAAAAKDK}
00093 {\cf18 void}\par
{\bkmkstart AAAAAAAKDL}{\bkmkend AAAAAAAKDL}
00094 mxWindow::setTimer ({\cf18 int} milliSeconds)\par
{\bkmkstart AAAAAAAKDM}{\bkmkend AAAAAAAKDM}
00095 \{\par
{\bkmkstart AAAAAAAKDN}{\bkmkend AAAAAAAKDN}
00096         {\cf19 if} (milliSeconds > 0)\par
{\bkmkstart AAAAAAAKDO}{\bkmkend AAAAAAAKDO}
00097         \{\par
{\bkmkstart AAAAAAAKDP}{\bkmkend AAAAAAAKDP}
00098                 {\cf18 int} timerId = d_this->startTimer (milliSeconds);\par
{\bkmkstart AAAAAAAKDQ}{\bkmkend AAAAAAAKDQ}
00099                 d_this->setTimerId (timerId);\par
{\bkmkstart AAAAAAAKDR}{\bkmkend AAAAAAAKDR}
00100         \}\par
{\bkmkstart AAAAAAAKDS}{\bkmkend AAAAAAAKDS}
00101         {\cf19 else}\par
{\bkmkstart AAAAAAAKDT}{\bkmkend AAAAAAAKDT}
00102                 d_this->killTimer (d_this->getTimerId());\par
{\bkmkstart AAAAAAAKDU}{\bkmkend AAAAAAAKDU}
00103 \}\par
{\bkmkstart AAAAAAAKDV}{\bkmkend AAAAAAAKDV}
00104 \par
{\bkmkstart AAAAAAAKDW}{\bkmkend AAAAAAAKDW}
00105 \par
{\bkmkstart AAAAAAAKDX}{\bkmkend AAAAAAAKDX}
00106 \par
{\bkmkstart AAAAAAAKDY}{\bkmkend AAAAAAAKDY}
00107 {\cf18 void}\par
{\bkmkstart AAAAAAAKDZ}{\bkmkend AAAAAAAKDZ}
00108 mxWindow::setMenuBar (mxMenuBar *menuBar)\par
{\bkmkstart AAAAAAAKEA}{\bkmkend AAAAAAAKEA}
00109 \{\par
{\bkmkstart AAAAAAAKEB}{\bkmkend AAAAAAAKEB}
00110         d_this->setMenuBar ((QMenuBar *) menuBar->getHandle ());\par
{\bkmkstart AAAAAAAKEC}{\bkmkend AAAAAAAKEC}
00111 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mxWindow_i.h\par \pard\plain 
{\tc\tcl2 \v mxWindow_i.h}
{\xe \v mxWindow_i.h}
{\bkmkstart AAAAAAAKED}
{\bkmkend AAAAAAAKED}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAKEE}{\bkmkend AAAAAAAKEE}
00001 {\cf20 //}\par
{\bkmkstart AAAAAAAKEF}{\bkmkend AAAAAAAKEF}
00002 {\cf20 //                 mxToolKit (c) 1999 by Mete Ciragan}\par
{\bkmkstart AAAAAAAKEG}{\bkmkend AAAAAAAKEG}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAKEH}{\bkmkend AAAAAAAKEH}
00004 {\cf20 // file:           mxWindow_i.h}\par
{\bkmkstart AAAAAAAKEI}{\bkmkend AAAAAAAKEI}
00005 {\cf20 // implementation: Qt Free Edition}\par
{\bkmkstart AAAAAAAKEJ}{\bkmkend AAAAAAAKEJ}
00006 {\cf20 // last modified:  Apr 20 1999, Mete Ciragan}\par
{\bkmkstart AAAAAAAKEK}{\bkmkend AAAAAAAKEK}
00007 {\cf20 // copyright:      The programs and associated files contained in this}\par
{\bkmkstart AAAAAAAKEL}{\bkmkend AAAAAAAKEL}
00008 {\cf20 //                 distribution were developed by Mete Ciragan. The programs}\par
{\bkmkstart AAAAAAAKEM}{\bkmkend AAAAAAAKEM}
00009 {\cf20 //                 are not in the public domain, but they are freely}\par
{\bkmkstart AAAAAAAKEN}{\bkmkend AAAAAAAKEN}
00010 {\cf20 //                 distributable without licensing fees. These programs are}\par
{\bkmkstart AAAAAAAKEO}{\bkmkend AAAAAAAKEO}
00011 {\cf20 //                 provided without guarantee or warrantee expressed or}\par
{\bkmkstart AAAAAAAKEP}{\bkmkend AAAAAAAKEP}
00012 {\cf20 //                 implied.}\par
{\bkmkstart AAAAAAAKEQ}{\bkmkend AAAAAAAKEQ}
00013 {\cf20 //}\par
{\bkmkstart AAAAAAAKER}{\bkmkend AAAAAAAKER}
00014 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAKES}{\bkmkend AAAAAAAKES}
00015 {\cf21 #include <mx/mx.h>}\par
{\bkmkstart AAAAAAAKET}{\bkmkend AAAAAAAKET}
00016 {\cf21 #include <QResizeEvent>}\par
{\bkmkstart AAAAAAAKEU}{\bkmkend AAAAAAAKEU}
00017 {\cf21 #include <QMainWindow>}\par
{\bkmkstart AAAAAAAKEV}{\bkmkend AAAAAAAKEV}
00018 {\cf21 #include <QMenuBar>}\par
{\bkmkstart AAAAAAAKEW}{\bkmkend AAAAAAAKEW}
00019 {\cf21 #include <QApplication>}\par
{\bkmkstart AAAAAAAKEX}{\bkmkend AAAAAAAKEX}
00020 \par
{\bkmkstart AAAAAAAKEY}{\bkmkend AAAAAAAKEY}
00021 \par
{\bkmkstart AAAAAAAKEZ}{\bkmkend AAAAAAAKEZ}
00022 \par
{\bkmkstart AAAAAAAKFA}{\bkmkend AAAAAAAKFA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKBC" }{}}{\fldrslt {\cs37\ul\cf2 00023}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKBC" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i}}}
 : {\cf17 public} QMainWindow\par
{\bkmkstart AAAAAAAKFB}{\bkmkend AAAAAAAKFB}
00024 \{\par
{\bkmkstart AAAAAAAKFC}{\bkmkend AAAAAAAKFC}
00025         Q_OBJECT\par
{\bkmkstart AAAAAAAKFD}{\bkmkend AAAAAAAKFD}
00026         mxWindow *d_window;\par
{\bkmkstart AAAAAAAKFE}{\bkmkend AAAAAAAKFE}
00027         {\cf18 bool} d_dragging;\par
{\bkmkstart AAAAAAAKFF}{\bkmkend AAAAAAAKFF}
00028         {\cf18 int} d_button;\par
{\bkmkstart AAAAAAAKFG}{\bkmkend AAAAAAAKFG}
00029         {\cf18 int} d_timerId;\par
{\bkmkstart AAAAAAAKFH}{\bkmkend AAAAAAAKFH}
00030 {\cf17 public}:\par
{\bkmkstart AAAAAAAKFI}{\bkmkend AAAAAAAKFI}
00031         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKBC" }{}}{\fldrslt {\cs37\ul\cf2 mxWindow_i}}}
 (QWidget *parent, mxWindow *window) : QMainWindow ((QMainWindow *)parent)\par
{\bkmkstart AAAAAAAKFJ}{\bkmkend AAAAAAAKFJ}
00032         \{\par
{\bkmkstart AAAAAAAKFK}{\bkmkend AAAAAAAKFK}
00033                 d_window = window;\par
{\bkmkstart AAAAAAAKFL}{\bkmkend AAAAAAAKFL}
00034                 d_dragging = {\cf17 false};\par
{\bkmkstart AAAAAAAKFM}{\bkmkend AAAAAAAKFM}
00035                 d_button = 0;\par
{\bkmkstart AAAAAAAKFN}{\bkmkend AAAAAAAKFN}
00036                 d_timerId = 0;\par
{\bkmkstart AAAAAAAKFO}{\bkmkend AAAAAAAKFO}
00037                 {\cf20 //setMouseGrabEnabled(true);}\par
{\bkmkstart AAAAAAAKFP}{\bkmkend AAAAAAAKFP}
00038                 setMouseTracking ({\cf17 true});\par
{\bkmkstart AAAAAAAKFQ}{\bkmkend AAAAAAAKFQ}
00039                 installEventFilter ({\cf17 this});\par
{\bkmkstart AAAAAAAKFR}{\bkmkend AAAAAAAKFR}
00040         \}\par
{\bkmkstart AAAAAAAKFS}{\bkmkend AAAAAAAKFS}
00041 \par
{\bkmkstart AAAAAAAKFT}{\bkmkend AAAAAAAKFT}
00042         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAKBC" }{}}{\fldrslt {\cs37\ul\cf2 ~mxWindow_i}}}
 ()\par
{\bkmkstart AAAAAAAKFU}{\bkmkend AAAAAAAKFU}
00043         \{\par
{\bkmkstart AAAAAAAKFV}{\bkmkend AAAAAAAKFV}
00044         \}\par
{\bkmkstart AAAAAAAKFW}{\bkmkend AAAAAAAKFW}
00045 \par
{\bkmkstart AAAAAAAKFX}{\bkmkend AAAAAAAKFX}
00046         {\cf18 void} setTimerId({\cf18 int} timerId)\par
{\bkmkstart AAAAAAAKFY}{\bkmkend AAAAAAAKFY}
00047         \{\par
{\bkmkstart AAAAAAAKFZ}{\bkmkend AAAAAAAKFZ}
00048                 d_timerId = timerId;\par
{\bkmkstart AAAAAAAKGA}{\bkmkend AAAAAAAKGA}
00049         \}\par
{\bkmkstart AAAAAAAKGB}{\bkmkend AAAAAAAKGB}
00050 \par
{\bkmkstart AAAAAAAKGC}{\bkmkend AAAAAAAKGC}
00051         {\cf18 int} getTimerId()\par
{\bkmkstart AAAAAAAKGD}{\bkmkend AAAAAAAKGD}
00052         \{\par
{\bkmkstart AAAAAAAKGE}{\bkmkend AAAAAAAKGE}
00053                 {\cf19 return} d_timerId;\par
{\bkmkstart AAAAAAAKGF}{\bkmkend AAAAAAAKGF}
00054         \}\par
{\bkmkstart AAAAAAAKGG}{\bkmkend AAAAAAAKGG}
00055 {\cf17 public} slots:\par
{\bkmkstart AAAAAAAKGH}{\bkmkend AAAAAAAKGH}
00056         {\cf18 void} idleEvent ()\par
{\bkmkstart AAAAAAAKGI}{\bkmkend AAAAAAAKGI}
00057         \{\par
{\bkmkstart AAAAAAAKGJ}{\bkmkend AAAAAAAKGJ}
00058                 mxEvent event;\par
{\bkmkstart AAAAAAAKGK}{\bkmkend AAAAAAAKGK}
00059                 {\cf17 event}.event = mxEvent::Idle;\par
{\bkmkstart AAAAAAAKGL}{\bkmkend AAAAAAAKGL}
00060                 d_window->handleEvent (&event);\par
{\bkmkstart AAAAAAAKGM}{\bkmkend AAAAAAAKGM}
00061         \}\par
{\bkmkstart AAAAAAAKGN}{\bkmkend AAAAAAAKGN}
00062         \par
{\bkmkstart AAAAAAAKGO}{\bkmkend AAAAAAAKGO}
00063 {\cf17 protected}:\par
{\bkmkstart AAAAAAAKGP}{\bkmkend AAAAAAAKGP}
00064         {\cf17 virtual} {\cf18 void} resizeEvent (QResizeEvent *e)\par
{\bkmkstart AAAAAAAKGQ}{\bkmkend AAAAAAAKGQ}
00065         \{\par
{\bkmkstart AAAAAAAKGR}{\bkmkend AAAAAAAKGR}
00066                 QMainWindow::resizeEvent (e);\par
{\bkmkstart AAAAAAAKGS}{\bkmkend AAAAAAAKGS}
00067                 mxEvent event;\par
{\bkmkstart AAAAAAAKGT}{\bkmkend AAAAAAAKGT}
00068                 {\cf17 event}.event = mxEvent::Size;\par
{\bkmkstart AAAAAAAKGU}{\bkmkend AAAAAAAKGU}
00069                 {\cf17 event}.width = e->size ().width ();\par
{\bkmkstart AAAAAAAKGV}{\bkmkend AAAAAAAKGV}
00070                 {\cf17 event}.height = e->size ().height ();\par
{\bkmkstart AAAAAAAKGW}{\bkmkend AAAAAAAKGW}
00071                 d_window->handleEvent (&event);\par
{\bkmkstart AAAAAAAKGX}{\bkmkend AAAAAAAKGX}
00072         \}\par
{\bkmkstart AAAAAAAKGY}{\bkmkend AAAAAAAKGY}
00073 \par
{\bkmkstart AAAAAAAKGZ}{\bkmkend AAAAAAAKGZ}
00074         {\cf17 virtual} {\cf18 void} mousePressEvent (QMouseEvent *e)\par
{\bkmkstart AAAAAAAKHA}{\bkmkend AAAAAAAKHA}
00075         \{\par
{\bkmkstart AAAAAAAKHB}{\bkmkend AAAAAAAKHB}
00076                 QMainWindow::mousePressEvent (e);\par
{\bkmkstart AAAAAAAKHC}{\bkmkend AAAAAAAKHC}
00077                 d_dragging = {\cf17 true};\par
{\bkmkstart AAAAAAAKHD}{\bkmkend AAAAAAAKHD}
00078 \par
{\bkmkstart AAAAAAAKHE}{\bkmkend AAAAAAAKHE}
00079                 d_button = 0;\par
{\bkmkstart AAAAAAAKHF}{\bkmkend AAAAAAAKHF}
00080                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
{\bkmkstart AAAAAAAKHG}{\bkmkend AAAAAAAKHG}
00081                         d_button |= mxEvent::MouseLeftButton;\par
{\bkmkstart AAAAAAAKHH}{\bkmkend AAAAAAAKHH}
00082                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
{\bkmkstart AAAAAAAKHI}{\bkmkend AAAAAAAKHI}
00083                         d_button |= mxEvent::MouseRightButton;\par
{\bkmkstart AAAAAAAKHJ}{\bkmkend AAAAAAAKHJ}
00084                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
{\bkmkstart AAAAAAAKHK}{\bkmkend AAAAAAAKHK}
00085                         d_button |= mxEvent::MouseMiddleButton;\par
{\bkmkstart AAAAAAAKHL}{\bkmkend AAAAAAAKHL}
00086                 \par
{\bkmkstart AAAAAAAKHM}{\bkmkend AAAAAAAKHM}
00087                 mxEvent event;\par
{\bkmkstart AAAAAAAKHN}{\bkmkend AAAAAAAKHN}
00088                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
{\bkmkstart AAAAAAAKHO}{\bkmkend AAAAAAAKHO}
00089                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
{\bkmkstart AAAAAAAKHP}{\bkmkend AAAAAAAKHP}
00090                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
{\bkmkstart AAAAAAAKHQ}{\bkmkend AAAAAAAKHQ}
00091                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
{\bkmkstart AAAAAAAKHR}{\bkmkend AAAAAAAKHR}
00092                 {\cf17 event}.event = mxEvent::MouseDown;\par
{\bkmkstart AAAAAAAKHS}{\bkmkend AAAAAAAKHS}
00093                 {\cf17 event}.buttons = d_button;\par
{\bkmkstart AAAAAAAKHT}{\bkmkend AAAAAAAKHT}
00094                 {\cf17 event}.x = e->x ();\par
{\bkmkstart AAAAAAAKHU}{\bkmkend AAAAAAAKHU}
00095                 {\cf17 event}.y = e->y ();\par
{\bkmkstart AAAAAAAKHV}{\bkmkend AAAAAAAKHV}
00096                 d_window->handleEvent (&event);\par
{\bkmkstart AAAAAAAKHW}{\bkmkend AAAAAAAKHW}
00097         \}\par
{\bkmkstart AAAAAAAKHX}{\bkmkend AAAAAAAKHX}
00098 \par
{\bkmkstart AAAAAAAKHY}{\bkmkend AAAAAAAKHY}
00099         {\cf17 virtual} {\cf18 void} mouseMoveEvent (QMouseEvent *e)\par
{\bkmkstart AAAAAAAKHZ}{\bkmkend AAAAAAAKHZ}
00100         \{\par
{\bkmkstart AAAAAAAKIA}{\bkmkend AAAAAAAKIA}
00101                 QMainWindow::mouseMoveEvent (e);\par
{\bkmkstart AAAAAAAKIB}{\bkmkend AAAAAAAKIB}
00102 \par
{\bkmkstart AAAAAAAKIC}{\bkmkend AAAAAAAKIC}
00103                 d_button = 0;\par
{\bkmkstart AAAAAAAKID}{\bkmkend AAAAAAAKID}
00104                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
{\bkmkstart AAAAAAAKIE}{\bkmkend AAAAAAAKIE}
00105                         d_button |= mxEvent::MouseLeftButton;\par
{\bkmkstart AAAAAAAKIF}{\bkmkend AAAAAAAKIF}
00106                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
{\bkmkstart AAAAAAAKIG}{\bkmkend AAAAAAAKIG}
00107                         d_button |= mxEvent::MouseRightButton;\par
{\bkmkstart AAAAAAAKIH}{\bkmkend AAAAAAAKIH}
00108                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
{\bkmkstart AAAAAAAKII}{\bkmkend AAAAAAAKII}
00109                         d_button |= mxEvent::MouseMiddleButton;\par
{\bkmkstart AAAAAAAKIJ}{\bkmkend AAAAAAAKIJ}
00110                 \par
{\bkmkstart AAAAAAAKIK}{\bkmkend AAAAAAAKIK}
00111                 mxEvent event;\par
{\bkmkstart AAAAAAAKIL}{\bkmkend AAAAAAAKIL}
00112                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
{\bkmkstart AAAAAAAKIM}{\bkmkend AAAAAAAKIM}
00113                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
{\bkmkstart AAAAAAAKIN}{\bkmkend AAAAAAAKIN}
00114                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
{\bkmkstart AAAAAAAKIO}{\bkmkend AAAAAAAKIO}
00115                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
{\bkmkstart AAAAAAAKIP}{\bkmkend AAAAAAAKIP}
00116 \par
{\bkmkstart AAAAAAAKIQ}{\bkmkend AAAAAAAKIQ}
00117                 {\cf17 event}.buttons = d_button;\par
{\bkmkstart AAAAAAAKIR}{\bkmkend AAAAAAAKIR}
00118                 {\cf17 event}.x = e->x ();\par
{\bkmkstart AAAAAAAKIS}{\bkmkend AAAAAAAKIS}
00119                 {\cf17 event}.y = e->y ();\par
{\bkmkstart AAAAAAAKIT}{\bkmkend AAAAAAAKIT}
00120                 \par
{\bkmkstart AAAAAAAKIU}{\bkmkend AAAAAAAKIU}
00121                 {\cf19 if} (d_dragging)\par
{\bkmkstart AAAAAAAKIV}{\bkmkend AAAAAAAKIV}
00122                         {\cf17 event}.event = mxEvent::MouseDrag;\par
{\bkmkstart AAAAAAAKIW}{\bkmkend AAAAAAAKIW}
00123                 {\cf19 else}\par
{\bkmkstart AAAAAAAKIX}{\bkmkend AAAAAAAKIX}
00124                         {\cf17 event}.event = mxEvent::MouseMove;\par
{\bkmkstart AAAAAAAKIY}{\bkmkend AAAAAAAKIY}
00125                         \par
{\bkmkstart AAAAAAAKIZ}{\bkmkend AAAAAAAKIZ}
00126                 d_window->handleEvent (&event);\par
{\bkmkstart AAAAAAAKJA}{\bkmkend AAAAAAAKJA}
00127         \}\par
{\bkmkstart AAAAAAAKJB}{\bkmkend AAAAAAAKJB}
00128 \par
{\bkmkstart AAAAAAAKJC}{\bkmkend AAAAAAAKJC}
00129         {\cf17 virtual} {\cf18 void} mouseReleaseEvent (QMouseEvent *e)\par
{\bkmkstart AAAAAAAKJD}{\bkmkend AAAAAAAKJD}
00130         \{\par
{\bkmkstart AAAAAAAKJE}{\bkmkend AAAAAAAKJE}
00131                 QMainWindow::mouseReleaseEvent (e);\par
{\bkmkstart AAAAAAAKJF}{\bkmkend AAAAAAAKJF}
00132                 d_dragging = {\cf17 false};\par
{\bkmkstart AAAAAAAKJG}{\bkmkend AAAAAAAKJG}
00133                 d_button = 0;\par
{\bkmkstart AAAAAAAKJH}{\bkmkend AAAAAAAKJH}
00134                 \par
{\bkmkstart AAAAAAAKJI}{\bkmkend AAAAAAAKJI}
00135                 {\cf19 if} (e->buttons () & Qt::LeftButton)\par
{\bkmkstart AAAAAAAKJJ}{\bkmkend AAAAAAAKJJ}
00136                         d_button |= mxEvent::MouseLeftButton;\par
{\bkmkstart AAAAAAAKJK}{\bkmkend AAAAAAAKJK}
00137                 {\cf19 if} (e->buttons () & Qt::RightButton)\par
{\bkmkstart AAAAAAAKJL}{\bkmkend AAAAAAAKJL}
00138                         d_button |= mxEvent::MouseRightButton;\par
{\bkmkstart AAAAAAAKJM}{\bkmkend AAAAAAAKJM}
00139                 {\cf19 if} (e->buttons () & Qt::MidButton)\par
{\bkmkstart AAAAAAAKJN}{\bkmkend AAAAAAAKJN}
00140                         d_button |= mxEvent::MouseMiddleButton;\par
{\bkmkstart AAAAAAAKJO}{\bkmkend AAAAAAAKJO}
00141                 \par
{\bkmkstart AAAAAAAKJP}{\bkmkend AAAAAAAKJP}
00142                 mxEvent event;\par
{\bkmkstart AAAAAAAKJQ}{\bkmkend AAAAAAAKJQ}
00143                 {\cf19 if} (e->buttons () & Qt::ControlModifier)\par
{\bkmkstart AAAAAAAKJR}{\bkmkend AAAAAAAKJR}
00144                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
{\bkmkstart AAAAAAAKJS}{\bkmkend AAAAAAAKJS}
00145                 {\cf19 if} (e->buttons () & Qt::ShiftModifier)\par
{\bkmkstart AAAAAAAKJT}{\bkmkend AAAAAAAKJT}
00146                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
{\bkmkstart AAAAAAAKJU}{\bkmkend AAAAAAAKJU}
00147 \par
{\bkmkstart AAAAAAAKJV}{\bkmkend AAAAAAAKJV}
00148                 {\cf17 event}.event = mxEvent::MouseUp;\par
{\bkmkstart AAAAAAAKJW}{\bkmkend AAAAAAAKJW}
00149                 {\cf17 event}.buttons = d_button;\par
{\bkmkstart AAAAAAAKJX}{\bkmkend AAAAAAAKJX}
00150                 {\cf17 event}.x = e->x ();\par
{\bkmkstart AAAAAAAKJY}{\bkmkend AAAAAAAKJY}
00151                 {\cf17 event}.y = e->y ();\par
{\bkmkstart AAAAAAAKJZ}{\bkmkend AAAAAAAKJZ}
00152                 \par
{\bkmkstart AAAAAAAKKA}{\bkmkend AAAAAAAKKA}
00153                 d_window->handleEvent (&event);\par
{\bkmkstart AAAAAAAKKB}{\bkmkend AAAAAAAKKB}
00154                 d_button = 0;\par
{\bkmkstart AAAAAAAKKC}{\bkmkend AAAAAAAKKC}
00155         \}\par
{\bkmkstart AAAAAAAKKD}{\bkmkend AAAAAAAKKD}
00156         \par
{\bkmkstart AAAAAAAKKE}{\bkmkend AAAAAAAKKE}
00157         {\cf17 virtual} {\cf18 void} keyPressEvent (QKeyEvent *e)\par
{\bkmkstart AAAAAAAKKF}{\bkmkend AAAAAAAKKF}
00158         \{\par
{\bkmkstart AAAAAAAKKG}{\bkmkend AAAAAAAKKG}
00159                 QMainWindow::keyPressEvent (e);\par
{\bkmkstart AAAAAAAKKH}{\bkmkend AAAAAAAKKH}
00160 \par
{\bkmkstart AAAAAAAKKI}{\bkmkend AAAAAAAKKI}
00161                 mxEvent event;\par
{\bkmkstart AAAAAAAKKJ}{\bkmkend AAAAAAAKKJ}
00162 \par
{\bkmkstart AAAAAAAKKK}{\bkmkend AAAAAAAKKK}
00163                 {\cf17 event}.key = tolower (e->key ());\par
{\bkmkstart AAAAAAAKKL}{\bkmkend AAAAAAAKKL}
00164 \par
{\bkmkstart AAAAAAAKKM}{\bkmkend AAAAAAAKKM}
00165                 {\cf19 if} (e->modifiers () & Qt::ControlModifier)\par
{\bkmkstart AAAAAAAKKN}{\bkmkend AAAAAAAKKN}
00166                         {\cf17 event}.modifiers |= mxEvent::KeyCtrl;\par
{\bkmkstart AAAAAAAKKO}{\bkmkend AAAAAAAKKO}
00167                 {\cf19 if} (e->modifiers () & Qt::ShiftModifier)\par
{\bkmkstart AAAAAAAKKP}{\bkmkend AAAAAAAKKP}
00168                         {\cf17 event}.modifiers |= mxEvent::KeyShift;\par
{\bkmkstart AAAAAAAKKQ}{\bkmkend AAAAAAAKKQ}
00169 \par
{\bkmkstart AAAAAAAKKR}{\bkmkend AAAAAAAKKR}
00170                 {\cf17 event}.event = mxEvent::KeyDown;\par
{\bkmkstart AAAAAAAKKS}{\bkmkend AAAAAAAKKS}
00171                 d_window->handleEvent (&event);\par
{\bkmkstart AAAAAAAKKT}{\bkmkend AAAAAAAKKT}
00172         \}\par
{\bkmkstart AAAAAAAKKU}{\bkmkend AAAAAAAKKU}
00173 \par
{\bkmkstart AAAAAAAKKV}{\bkmkend AAAAAAAKKV}
00174         {\cf17 virtual} {\cf18 void} timerEvent (QTimerEvent *e)\par
{\bkmkstart AAAAAAAKKW}{\bkmkend AAAAAAAKKW}
00175         \{\par
{\bkmkstart AAAAAAAKKX}{\bkmkend AAAAAAAKKX}
00176                 mxEvent event;\par
{\bkmkstart AAAAAAAKKY}{\bkmkend AAAAAAAKKY}
00177                 {\cf17 event}.event = mxEvent::Timer;\par
{\bkmkstart AAAAAAAKKZ}{\bkmkend AAAAAAAKKZ}
00178                 d_window->handleEvent (&event);\par
{\bkmkstart AAAAAAAKLA}{\bkmkend AAAAAAAKLA}
00179         \}\par
{\bkmkstart AAAAAAAKLB}{\bkmkend AAAAAAAKLB}
00180 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RCWindow.cpp\par \pard\plain 
{\bkmkstart AAAAAAAKLC}
{\bkmkend AAAAAAAKLC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAKLD}{\bkmkend AAAAAAAKLD}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAKLE}{\bkmkend AAAAAAAKLE}
00002 {\cf20 //}\par
{\bkmkstart AAAAAAAKLF}{\bkmkend AAAAAAAKLF}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAKLG}{\bkmkend AAAAAAAKLG}
00004 {\cf20 //}\par
{\bkmkstart AAAAAAAKLH}{\bkmkend AAAAAAAKLH}
00005 {\cf20 // file: RCWindow.cpp}\par
{\bkmkstart AAAAAAAKLI}{\bkmkend AAAAAAAKLI}
00006 {\cf20 // last modified:}\par
{\bkmkstart AAAAAAAKLJ}{\bkmkend AAAAAAAKLJ}
00007 {\cf20 // copyright:}\par
{\bkmkstart AAAAAAAKLK}{\bkmkend AAAAAAAKLK}
00008 {\cf20 // version:}\par
{\bkmkstart AAAAAAAKLL}{\bkmkend AAAAAAAKLL}
00009 {\cf20 //}\par
{\bkmkstart AAAAAAAKLM}{\bkmkend AAAAAAAKLM}
00010 {\cf20 // email:}\par
{\bkmkstart AAAAAAAKLN}{\bkmkend AAAAAAAKLN}
00011 {\cf20 // web:}\par
{\bkmkstart AAAAAAAKLO}{\bkmkend AAAAAAAKLO}
00012 {\cf20 //}\par
{\bkmkstart AAAAAAAKLP}{\bkmkend AAAAAAAKLP}
00013 {\cf20 */}\par
{\bkmkstart AAAAAAAKLQ}{\bkmkend AAAAAAAKLQ}
00014 \par
{\bkmkstart AAAAAAAKLR}{\bkmkend AAAAAAAKLR}
00015 {\cf21 #include <cstdio>}\par
{\bkmkstart AAAAAAAKLS}{\bkmkend AAAAAAAKLS}
00016 {\cf21 #include <cstdlib>}\par
{\bkmkstart AAAAAAAKLT}{\bkmkend AAAAAAAKLT}
00017 {\cf21 #include <cstring>}\par
{\bkmkstart AAAAAAAKLU}{\bkmkend AAAAAAAKLU}
00018 {\cf21 #include <mx/mx.h>}\par
{\bkmkstart AAAAAAAKLV}{\bkmkend AAAAAAAKLV}
00019 {\cf21 #include <mx/gl.h>}\par
{\bkmkstart AAAAAAAKLW}{\bkmkend AAAAAAAKLW}
00020 {\cf21 #include "GlWindow.h"}\par
{\bkmkstart AAAAAAAKLX}{\bkmkend AAAAAAAKLX}
00021 {\cf20 //#include "CmdLine.h"}\par
{\bkmkstart AAAAAAAKLY}{\bkmkend AAAAAAAKLY}
00022 {\cf20 //#include "shared.h"}\par
{\bkmkstart AAAAAAAKLZ}{\bkmkend AAAAAAAKLZ}
00023 {\cf20 //#include "server.h"}\par
{\bkmkstart AAAAAAAKMA}{\bkmkend AAAAAAAKMA}
00024 \par
{\bkmkstart AAAAAAAKMB}{\bkmkend AAAAAAAKMB}
00025 {\cf21 #include "RCWindow.h"}\par
{\bkmkstart AAAAAAAKMC}{\bkmkend AAAAAAAKMC}
00026 \par
{\bkmkstart AAAAAAAKMD}{\bkmkend AAAAAAAKMD}
00027 {\cf20 /*}\par
{\bkmkstart AAAAAAAKME}{\bkmkend AAAAAAAKME}
00028 {\cf20 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAAKMF}{\bkmkend AAAAAAAKMF}
00029 {\cf20 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAKMG}{\bkmkend AAAAAAAKMG}
00030 {\cf20 extern "C"}\par
{\bkmkstart AAAAAAAKMH}{\bkmkend AAAAAAAKMH}
00031 {\cf20 \{}\par
{\bkmkstart AAAAAAAKMI}{\bkmkend AAAAAAAKMI}
00032 {\cf20     namespace \{}\par
{\bkmkstart AAAAAAAKMJ}{\bkmkend AAAAAAAKMJ}
00033 {\cf20 #endif}\par
{\bkmkstart AAAAAAAKMK}{\bkmkend AAAAAAAKMK}
00034 {\cf20 extern void delay(unsigned int howLong);}\par
{\bkmkstart AAAAAAAKML}{\bkmkend AAAAAAAKML}
00035 {\cf20 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAKMM}{\bkmkend AAAAAAAKMM}
00036 {\cf20     \} //namespace}\par
{\bkmkstart AAAAAAAKMN}{\bkmkend AAAAAAAKMN}
00037 {\cf20 \}}\par
{\bkmkstart AAAAAAAKMO}{\bkmkend AAAAAAAKMO}
00038 {\cf20 #endif}\par
{\bkmkstart AAAAAAAKMP}{\bkmkend AAAAAAAKMP}
00039 {\cf20 #else}\par
{\bkmkstart AAAAAAAKMQ}{\bkmkend AAAAAAAKMQ}
00040 {\cf20 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAAKMR}{\bkmkend AAAAAAAKMR}
00041 {\cf20 #endif //_SOFTGPIO}\par
{\bkmkstart AAAAAAAKMS}{\bkmkend AAAAAAAKMS}
00042 {\cf20 */}\par
{\bkmkstart AAAAAAAKMT}{\bkmkend AAAAAAAKMT}
00043 \par
{\bkmkstart AAAAAAAKMU}{\bkmkend AAAAAAAKMU}
00044 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZW" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow}}}
 *g_RCWindow = 0;\par
{\bkmkstart AAAAAAAKMV}{\bkmkend AAAAAAAKMV}
00045 {\cf20 //char g_appTitle[] = "Sender Window";}\par
{\bkmkstart AAAAAAAKMW}{\bkmkend AAAAAAAKMW}
00046 \par
{\bkmkstart AAAAAAAKMX}{\bkmkend AAAAAAAKMX}
00047 RCWindow :: RCWindow() : mxWindow( 0, 0, 0, 0, 0, {\cf22 "Receiver Window"}, mxWindow::Normal )\par
{\bkmkstart AAAAAAAKMY}{\bkmkend AAAAAAAKMY}
00048 \{\par
{\bkmkstart AAAAAAAKMZ}{\bkmkend AAAAAAAKMZ}
00049         {\cf20 // create menu stuff}\par
{\bkmkstart AAAAAAAKNA}{\bkmkend AAAAAAAKNA}
00050         mb = {\cf17 new} mxMenuBar ({\cf17 this});\par
{\bkmkstart AAAAAAAKNB}{\bkmkend AAAAAAAKNB}
00051         {\cf20 /*}\par
{\bkmkstart AAAAAAAKNC}{\bkmkend AAAAAAAKNC}
00052 {\cf20         mxMenu *menuFile = new mxMenu ();}\par
{\bkmkstart AAAAAAAKND}{\bkmkend AAAAAAAKND}
00053 {\cf20         mxMenu *menuAction = new mxMenu ();}\par
{\bkmkstart AAAAAAAKNE}{\bkmkend AAAAAAAKNE}
00054 {\cf20 //      mxMenu *menuTool = new mxMenu ();}\par
{\bkmkstart AAAAAAAKNF}{\bkmkend AAAAAAAKNF}
00055 {\cf20         mxMenu *menuHelp = new mxMenu ();}\par
{\bkmkstart AAAAAAAKNG}{\bkmkend AAAAAAAKNG}
00056 {\cf20 }\par
{\bkmkstart AAAAAAAKNH}{\bkmkend AAAAAAAKNH}
00057 {\cf20         mb->addMenu ("File", menuFile);}\par
{\bkmkstart AAAAAAAKNI}{\bkmkend AAAAAAAKNI}
00058 {\cf20         mb->addMenu ("Action", menuAction);}\par
{\bkmkstart AAAAAAAKNJ}{\bkmkend AAAAAAAKNJ}
00059 {\cf20 //      mb->addMenu ("Tools", menuTool);}\par
{\bkmkstart AAAAAAAKNK}{\bkmkend AAAAAAAKNK}
00060 {\cf20         mb->addMenu ("Help", menuHelp);}\par
{\bkmkstart AAAAAAAKNL}{\bkmkend AAAAAAAKNL}
00061 {\cf20 }\par
{\bkmkstart AAAAAAAKNM}{\bkmkend AAAAAAAKNM}
00062 {\cf20 //      menuFile->addSeparator ();}\par
{\bkmkstart AAAAAAAKNN}{\bkmkend AAAAAAAKNN}
00063 {\cf20         menuFile->add ("Exit", IDC_FILE_EXIT);}\par
{\bkmkstart AAAAAAAKNO}{\bkmkend AAAAAAAKNO}
00064 {\cf20 }\par
{\bkmkstart AAAAAAAKNP}{\bkmkend AAAAAAAKNP}
00065 {\cf20 //      menuAction->add ("Connect...", IDC_ACTION_CONNECT);}\par
{\bkmkstart AAAAAAAKNQ}{\bkmkend AAAAAAAKNQ}
00066 {\cf20 //      menuAction->add ("Disconnect...", IDC_ACTION_DISCONNECT);}\par
{\bkmkstart AAAAAAAKNR}{\bkmkend AAAAAAAKNR}
00067 {\cf20         menuAction->add ("Display Information", IDC_ACTION_INFO);}\par
{\bkmkstart AAAAAAAKNS}{\bkmkend AAAAAAAKNS}
00068 {\cf20         menuAction->addSeparator ();}\par
{\bkmkstart AAAAAAAKNT}{\bkmkend AAAAAAAKNT}
00069 {\cf20         menuAction->add ("Undo", IDC_ACTION_UNDO);}\par
{\bkmkstart AAAAAAAKNU}{\bkmkend AAAAAAAKNU}
00070 {\cf20 //      menuAction->add ("Redo", IDC_ACTION_REDO);}\par
{\bkmkstart AAAAAAAKNV}{\bkmkend AAAAAAAKNV}
00071 {\cf20         menuAction->addSeparator ();}\par
{\bkmkstart AAAAAAAKNW}{\bkmkend AAAAAAAKNW}
00072 {\cf20         menuAction->add ("Clear Sceen", IDC_ACTION_CLS);}\par
{\bkmkstart AAAAAAAKNX}{\bkmkend AAAAAAAKNX}
00073 {\cf20 //      menuAction->add ("Refresh", IDC_ACTION_REFRESH);}\par
{\bkmkstart AAAAAAAKNY}{\bkmkend AAAAAAAKNY}
00074 {\cf20 }\par
{\bkmkstart AAAAAAAKNZ}{\bkmkend AAAAAAAKNZ}
00075 {\cf20         menuHelp->add ("About...", IDC_HELP_ABOUT);}\par
{\bkmkstart AAAAAAAKOA}{\bkmkend AAAAAAAKOA}
00076 {\cf20     */}\par
{\bkmkstart AAAAAAAKOB}{\bkmkend AAAAAAAKOB}
00077         {\cf20 // create the OpenGL window}\par
{\bkmkstart AAAAAAAKOC}{\bkmkend AAAAAAAKOC}
00078         d_GlWindow = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 ({\cf17 this}, 0, 0, 0, 0, {\cf22 ""}, mxWindow::Normal);\par
{\bkmkstart AAAAAAAKOD}{\bkmkend AAAAAAAKOD}
00079 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAAKOE}{\bkmkend AAAAAAAKOE}
00080         SetWindowLong ((HWND) d_GlWindow->getHandle (), GWL_EXSTYLE, WS_EX_CLIENTEDGE);\par
{\bkmkstart AAAAAAAKOF}{\bkmkend AAAAAAAKOF}
00081 {\cf21 #endif}\par
{\bkmkstart AAAAAAAKOG}{\bkmkend AAAAAAAKOG}
00082 \par
{\bkmkstart AAAAAAAKOH}{\bkmkend AAAAAAAKOH}
00083         g_GlWindow = d_GlWindow;\par
{\bkmkstart AAAAAAAKOI}{\bkmkend AAAAAAAKOI}
00084 \par
{\bkmkstart AAAAAAAKOJ}{\bkmkend AAAAAAAKOJ}
00085 {\cf20 //      line_t emptyline = \{0,0,0,0\};}\par
{\bkmkstart AAAAAAAKOK}{\bkmkend AAAAAAAKOK}
00086 {\cf20 //      cmd_lines.assign(32, emptyline);}\par
{\bkmkstart AAAAAAAKOL}{\bkmkend AAAAAAAKOL}
00087 \par
{\bkmkstart AAAAAAAKOM}{\bkmkend AAAAAAAKOM}
00088         setBounds (20, 20, 640, 540);\par
{\bkmkstart AAAAAAAKON}{\bkmkend AAAAAAAKON}
00089         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAAKOO}{\bkmkend AAAAAAAKOO}
00090         g_GlWindow->setEnabled({\cf17 false});\par
{\bkmkstart AAAAAAAKOP}{\bkmkend AAAAAAAKOP}
00091 \}\par
{\bkmkstart AAAAAAAKOQ}{\bkmkend AAAAAAAKOQ}
00092 \par
{\bkmkstart AAAAAAAKOR}{\bkmkend AAAAAAAKOR}
00093 \par
{\bkmkstart AAAAAAAKOS}{\bkmkend AAAAAAAKOS}
00094 \par
{\bkmkstart AAAAAAAKOT}{\bkmkend AAAAAAAKOT}
00095 RCWindow::~RCWindow ()\par
{\bkmkstart AAAAAAAKOU}{\bkmkend AAAAAAAKOU}
00096 \{\par
{\bkmkstart AAAAAAAKOV}{\bkmkend AAAAAAAKOV}
00097         {\cf20 // grab some params in case that hasn't updates}\par
{\bkmkstart AAAAAAAKOW}{\bkmkend AAAAAAAKOW}
00098 \par
{\bkmkstart AAAAAAAKOX}{\bkmkend AAAAAAAKOX}
00099 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAAKOY}{\bkmkend AAAAAAAKOY}
00100         DeleteFile ({\cf22 "midump.txt"});\par
{\bkmkstart AAAAAAAKOZ}{\bkmkend AAAAAAAKOZ}
00101 {\cf21 #endif}\par
{\bkmkstart AAAAAAAKPA}{\bkmkend AAAAAAAKPA}
00102 \}\par
{\bkmkstart AAAAAAAKPB}{\bkmkend AAAAAAAKPB}
00103 {\cf20 /*}\par
{\bkmkstart AAAAAAAKPC}{\bkmkend AAAAAAAKPC}
00104 {\cf20 void RCWindow :: checkboxSet( int id, bool bState )}\par
{\bkmkstart AAAAAAAKPD}{\bkmkend AAAAAAAKPD}
00105 {\cf20 \{}\par
{\bkmkstart AAAAAAAKPE}{\bkmkend AAAAAAAKPE}
00106 {\cf20         mb->setChecked( id, bState );}\par
{\bkmkstart AAAAAAAKPF}{\bkmkend AAAAAAAKPF}
00107 {\cf20 \}}\par
{\bkmkstart AAAAAAAKPG}{\bkmkend AAAAAAAKPG}
00108 {\cf20 */}\par
{\bkmkstart AAAAAAAKPH}{\bkmkend AAAAAAAKPH}
00109 {\cf18 int}\par
{\bkmkstart AAAAAAAKPI}{\bkmkend AAAAAAAKPI}
00110 RCWindow::handleEvent (mxEvent *event)\par
{\bkmkstart AAAAAAAKPJ}{\bkmkend AAAAAAAKPJ}
00111 \{\par
{\bkmkstart AAAAAAAKPK}{\bkmkend AAAAAAAKPK}
00112         {\cf19 switch} (event->event)\par
{\bkmkstart AAAAAAAKPL}{\bkmkend AAAAAAAKPL}
00113         \{\par
{\bkmkstart AAAAAAAKPM}{\bkmkend AAAAAAAKPM}
00114 \par
{\bkmkstart AAAAAAAKPN}{\bkmkend AAAAAAAKPN}
00115         {\cf19 case} mxEvent::Action:\par
{\bkmkstart AAAAAAAKPO}{\bkmkend AAAAAAAKPO}
00116         \{\par
{\bkmkstart AAAAAAAKPP}{\bkmkend AAAAAAAKPP}
00117                 {\cf19 switch} (event->action)\par
{\bkmkstart AAAAAAAKPQ}{\bkmkend AAAAAAAKPQ}
00118                 \{\par
{\bkmkstart AAAAAAAKPR}{\bkmkend AAAAAAAKPR}
00119                 {\cf19 case} IDC_FILE_EXIT:\par
{\bkmkstart AAAAAAAKPS}{\bkmkend AAAAAAAKPS}
00120                 \{\par
{\bkmkstart AAAAAAAKPT}{\bkmkend AAAAAAAKPT}
00121                         redraw ();\par
{\bkmkstart AAAAAAAKPU}{\bkmkend AAAAAAAKPU}
00122                         mx::quit ();\par
{\bkmkstart AAAAAAAKPV}{\bkmkend AAAAAAAKPV}
00123                 \}\par
{\bkmkstart AAAAAAAKPW}{\bkmkend AAAAAAAKPW}
00124                 {\cf19 break};\par
{\bkmkstart AAAAAAAKPX}{\bkmkend AAAAAAAKPX}
00125 \par
{\bkmkstart AAAAAAAKPY}{\bkmkend AAAAAAAKPY}
00126                 {\cf19 case} IDC_ACTION_CLS:\par
{\bkmkstart AAAAAAAKPZ}{\bkmkend AAAAAAAKPZ}
00127             getGlWindow()->LineClear();\par
{\bkmkstart AAAAAAAKQA}{\bkmkend AAAAAAAKQA}
00128             {\cf19 break};\par
{\bkmkstart AAAAAAAKQB}{\bkmkend AAAAAAAKQB}
00129 \par
{\bkmkstart AAAAAAAKQC}{\bkmkend AAAAAAAKQC}
00130         {\cf19 case} IDC_ACTION_UNDO:\par
{\bkmkstart AAAAAAAKQD}{\bkmkend AAAAAAAKQD}
00131             getGlWindow()->LineUndo();\par
{\bkmkstart AAAAAAAKQE}{\bkmkend AAAAAAAKQE}
00132             {\cf19 break};\par
{\bkmkstart AAAAAAAKQF}{\bkmkend AAAAAAAKQF}
00133 \par
{\bkmkstart AAAAAAAKQG}{\bkmkend AAAAAAAKQG}
00134                 {\cf19 case} IDC_HELP_ABOUT:\par
{\bkmkstart AAAAAAAKQH}{\bkmkend AAAAAAAKQH}
00135                         mxMessageBox ({\cf17 this},\par
{\bkmkstart AAAAAAAKQI}{\bkmkend AAAAAAAKQI}
00136                                 {\cf22 "Painter P20\\n"}\par
{\bkmkstart AAAAAAAKQJ}{\bkmkend AAAAAAAKQJ}
00137                                 {\cf22 "Build:\\t"} __DATE__ {\cf22 ".\\n"}\par
{\bkmkstart AAAAAAAKQK}{\bkmkend AAAAAAAKQK}
00138                                 {\cf22 "Email:\\tjw26u22@soton.ac.uk\\n"}, {\cf22 "Painter"},\par
{\bkmkstart AAAAAAAKQL}{\bkmkend AAAAAAAKQL}
00139                                 MX_MB_OK | MX_MB_INFORMATION );\par
{\bkmkstart AAAAAAAKQM}{\bkmkend AAAAAAAKQM}
00140                         {\cf19 break};\par
{\bkmkstart AAAAAAAKQN}{\bkmkend AAAAAAAKQN}
00141 \par
{\bkmkstart AAAAAAAKQO}{\bkmkend AAAAAAAKQO}
00142                 \} {\cf20 //switch (event->action)}\par
{\bkmkstart AAAAAAAKQP}{\bkmkend AAAAAAAKQP}
00143 \par
{\bkmkstart AAAAAAAKQQ}{\bkmkend AAAAAAAKQQ}
00144         \} {\cf20 // mxEvent::Action}\par
{\bkmkstart AAAAAAAKQR}{\bkmkend AAAAAAAKQR}
00145         {\cf19 break};\par
{\bkmkstart AAAAAAAKQS}{\bkmkend AAAAAAAKQS}
00146 \par
{\bkmkstart AAAAAAAKQT}{\bkmkend AAAAAAAKQT}
00147         {\cf19 case} mxEvent::Size:\par
{\bkmkstart AAAAAAAKQU}{\bkmkend AAAAAAAKQU}
00148         \{\par
{\bkmkstart AAAAAAAKQV}{\bkmkend AAAAAAAKQV}
00149                 {\cf18 int} w = {\cf17 event}->width;\par
{\bkmkstart AAAAAAAKQW}{\bkmkend AAAAAAAKQW}
00150                 {\cf18 int} h = {\cf17 event}->height;\par
{\bkmkstart AAAAAAAKQX}{\bkmkend AAAAAAAKQX}
00151                 {\cf18 int} y = mb->getHeight ();\par
{\bkmkstart AAAAAAAKQY}{\bkmkend AAAAAAAKQY}
00152 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAAKQZ}{\bkmkend AAAAAAAKQZ}
00153 {\cf21 #define HEIGHT 120}\par
{\bkmkstart AAAAAAAKRA}{\bkmkend AAAAAAAKRA}
00154 {\cf21 #else}\par
{\bkmkstart AAAAAAAKRB}{\bkmkend AAAAAAAKRB}
00155 {\cf21 #define HEIGHT 140}\par
{\bkmkstart AAAAAAAKRC}{\bkmkend AAAAAAAKRC}
00156                 h -= 40;\par
{\bkmkstart AAAAAAAKRD}{\bkmkend AAAAAAAKRD}
00157 {\cf21 #endif}\par
{\bkmkstart AAAAAAAKRE}{\bkmkend AAAAAAAKRE}
00158 \par
{\bkmkstart AAAAAAAKRF}{\bkmkend AAAAAAAKRF}
00159 {\cf20 //              d_GlWindow->setBounds (0, y, w, h - HEIGHT);}\par
{\bkmkstart AAAAAAAKRG}{\bkmkend AAAAAAAKRG}
00160                 d_GlWindow->setBounds (0, y, w, h);\par
{\bkmkstart AAAAAAAKRH}{\bkmkend AAAAAAAKRH}
00161 {\cf20 //              d_cpl->setBounds (0, y + h - HEIGHT, w, HEIGHT);}\par
{\bkmkstart AAAAAAAKRI}{\bkmkend AAAAAAAKRI}
00162         \}\par
{\bkmkstart AAAAAAAKRJ}{\bkmkend AAAAAAAKRJ}
00163         {\cf19 break};\par
{\bkmkstart AAAAAAAKRK}{\bkmkend AAAAAAAKRK}
00164 \par
{\bkmkstart AAAAAAAKRL}{\bkmkend AAAAAAAKRL}
00165         {\cf19 break};\par
{\bkmkstart AAAAAAAKRM}{\bkmkend AAAAAAAKRM}
00166         \} {\cf20 // event->event}\par
{\bkmkstart AAAAAAAKRN}{\bkmkend AAAAAAAKRN}
00167 \par
{\bkmkstart AAAAAAAKRO}{\bkmkend AAAAAAAKRO}
00168         {\cf19 return} 1;\par
{\bkmkstart AAAAAAAKRP}{\bkmkend AAAAAAAKRP}
00169 \}\par
{\bkmkstart AAAAAAAKRQ}{\bkmkend AAAAAAAKRQ}
00170 \par
{\bkmkstart AAAAAAAKRR}{\bkmkend AAAAAAAKRR}
00171 \par
{\bkmkstart AAAAAAAKRS}{\bkmkend AAAAAAAKRS}
00172 \par
{\bkmkstart AAAAAAAKRT}{\bkmkend AAAAAAAKRT}
00173 {\cf18 void}\par
{\bkmkstart AAAAAAAKRU}{\bkmkend AAAAAAAKRU}
00174 RCWindow::redraw ()\par
{\bkmkstart AAAAAAAKRV}{\bkmkend AAAAAAAKRV}
00175 \{\par
{\bkmkstart AAAAAAAKRW}{\bkmkend AAAAAAAKRW}
00176         mxEvent event;\par
{\bkmkstart AAAAAAAKRX}{\bkmkend AAAAAAAKRX}
00177         {\cf17 event}.event = mxEvent::Size;\par
{\bkmkstart AAAAAAAKRY}{\bkmkend AAAAAAAKRY}
00178         {\cf17 event}.width = w2 ();\par
{\bkmkstart AAAAAAAKRZ}{\bkmkend AAAAAAAKRZ}
00179         {\cf17 event}.height = h2 ();\par
{\bkmkstart AAAAAAAKSA}{\bkmkend AAAAAAAKSA}
00180         handleEvent (&event);\par
{\bkmkstart AAAAAAAKSB}{\bkmkend AAAAAAAKSB}
00181 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RCWindow.h\par \pard\plain 
{\bkmkstart AAAAAAAKSC}
{\bkmkend AAAAAAAKSC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAKSD}{\bkmkend AAAAAAAKSD}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAKSE}{\bkmkend AAAAAAAKSE}
00002 {\cf20 //}\par
{\bkmkstart AAAAAAAKSF}{\bkmkend AAAAAAAKSF}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAKSG}{\bkmkend AAAAAAAKSG}
00004 {\cf20 //}\par
{\bkmkstart AAAAAAAKSH}{\bkmkend AAAAAAAKSH}
00005 {\cf20 // file: RCWindow.h}\par
{\bkmkstart AAAAAAAKSI}{\bkmkend AAAAAAAKSI}
00006 {\cf20 // last modified:}\par
{\bkmkstart AAAAAAAKSJ}{\bkmkend AAAAAAAKSJ}
00007 {\cf20 // copyright:}\par
{\bkmkstart AAAAAAAKSK}{\bkmkend AAAAAAAKSK}
00008 {\cf20 // version:}\par
{\bkmkstart AAAAAAAKSL}{\bkmkend AAAAAAAKSL}
00009 {\cf20 //}\par
{\bkmkstart AAAAAAAKSM}{\bkmkend AAAAAAAKSM}
00010 {\cf20 // email:}\par
{\bkmkstart AAAAAAAKSN}{\bkmkend AAAAAAAKSN}
00011 {\cf20 // web:}\par
{\bkmkstart AAAAAAAKSO}{\bkmkend AAAAAAAKSO}
00012 {\cf20 //}\par
{\bkmkstart AAAAAAAKSP}{\bkmkend AAAAAAAKSP}
00013 {\cf20 */}\par
{\bkmkstart AAAAAAAKSQ}{\bkmkend AAAAAAAKSQ}
00014 \par
{\bkmkstart AAAAAAAKSR}{\bkmkend AAAAAAAKSR}
00015 {\cf21 #ifndef INCLUDED_RCWINDOW}\par
{\bkmkstart AAAAAAAKSS}{\bkmkend AAAAAAAKSS}
00016 {\cf21 #define INCLUDED_RCWINDOW}\par
{\bkmkstart AAAAAAAKST}{\bkmkend AAAAAAAKST}
00017 \par
{\bkmkstart AAAAAAAKSU}{\bkmkend AAAAAAAKSU}
00018 \par
{\bkmkstart AAAAAAAKSV}{\bkmkend AAAAAAAKSV}
00019 \par
{\bkmkstart AAAAAAAKSW}{\bkmkend AAAAAAAKSW}
00020 {\cf21 #ifndef INCLUDED_MXWINDOW}\par
{\bkmkstart AAAAAAAKSX}{\bkmkend AAAAAAAKSX}
00021 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAAKSY}{\bkmkend AAAAAAAKSY}
00022 {\cf21 #endif}\par
{\bkmkstart AAAAAAAKSZ}{\bkmkend AAAAAAAKSZ}
00023 \par
{\bkmkstart AAAAAAAKTA}{\bkmkend AAAAAAAKTA}
00024 {\cf20 //#include "CmdLine.h"}\par
{\bkmkstart AAAAAAAKTB}{\bkmkend AAAAAAAKTB}
00025 \par
{\bkmkstart AAAAAAAKTC}{\bkmkend AAAAAAAKTC}
00026 {\cf21 #define IDC_FILE_EXIT                   1017}\par
{\bkmkstart AAAAAAAKTD}{\bkmkend AAAAAAAKTD}
00027 \par
{\bkmkstart AAAAAAAKTE}{\bkmkend AAAAAAAKTE}
00028 {\cf21 #define IDC_ACTION_CONNECT              1101}\par
{\bkmkstart AAAAAAAKTF}{\bkmkend AAAAAAAKTF}
00029 {\cf21 #define IDC_ACTION_DISCONNECT   1102}\par
{\bkmkstart AAAAAAAKTG}{\bkmkend AAAAAAAKTG}
00030 {\cf21 #define IDC_ACTION_INFO         1103}\par
{\bkmkstart AAAAAAAKTH}{\bkmkend AAAAAAAKTH}
00031 {\cf21 #define IDC_ACTION_UNDO         1104}\par
{\bkmkstart AAAAAAAKTI}{\bkmkend AAAAAAAKTI}
00032 {\cf21 #define IDC_ACTION_REDO         1105}\par
{\bkmkstart AAAAAAAKTJ}{\bkmkend AAAAAAAKTJ}
00033 {\cf21 #define IDC_ACTION_CLS          1106}\par
{\bkmkstart AAAAAAAKTK}{\bkmkend AAAAAAAKTK}
00034 {\cf21 #define IDC_ACTION_REFRESH      1107}\par
{\bkmkstart AAAAAAAKTL}{\bkmkend AAAAAAAKTL}
00035 \par
{\bkmkstart AAAAAAAKTM}{\bkmkend AAAAAAAKTM}
00036 {\cf21 #define IDC_HELP_GOTOHOMEPAGE   1301}\par
{\bkmkstart AAAAAAAKTN}{\bkmkend AAAAAAAKTN}
00037 {\cf21 #define IDC_HELP_ABOUT                  1302}\par
{\bkmkstart AAAAAAAKTO}{\bkmkend AAAAAAAKTO}
00038 \par
{\bkmkstart AAAAAAAKTP}{\bkmkend AAAAAAAKTP}
00039 {\cf20 //for window}\par
{\bkmkstart AAAAAAAKTQ}{\bkmkend AAAAAAAKTQ}
00040 {\cf21 #define X_RESOLUTION 640}\par
{\bkmkstart AAAAAAAKTR}{\bkmkend AAAAAAAKTR}
00041 {\cf21 #define Y_RESOLUTION 540}\par
{\bkmkstart AAAAAAAKTS}{\bkmkend AAAAAAAKTS}
00042 \par
{\bkmkstart AAAAAAAKTT}{\bkmkend AAAAAAAKTT}
00043 \par
{\bkmkstart AAAAAAAKTU}{\bkmkend AAAAAAAKTU}
00044 {\cf17 class }mxMenuBar;\par
{\bkmkstart AAAAAAAKTV}{\bkmkend AAAAAAAKTV}
00045 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
;\par
{\bkmkstart AAAAAAAKTW}{\bkmkend AAAAAAAKTW}
00046 \par
{\bkmkstart AAAAAAAKTX}{\bkmkend AAAAAAAKTX}
00047 \par
{\bkmkstart AAAAAAAKTY}{\bkmkend AAAAAAAKTY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZW" }{}}{\fldrslt {\cs37\ul\cf2 00048}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZW" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow}}}
 : {\cf17 public} mxWindow\par
{\bkmkstart AAAAAAAKTZ}{\bkmkend AAAAAAAKTZ}
00049 \{\par
{\bkmkstart AAAAAAAKUA}{\bkmkend AAAAAAAKUA}
00050 {\cf17 public}:\par
{\bkmkstart AAAAAAAKUB}{\bkmkend AAAAAAAKUB}
00051         {\cf20 // CREATORS}\par
{\bkmkstart AAAAAAAKUC}{\bkmkend AAAAAAAKUC}
00052         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZW" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow}}}
 ();\par
{\bkmkstart AAAAAAAKUD}{\bkmkend AAAAAAAKUD}
00053         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZW" }{}}{\fldrslt {\cs37\ul\cf2 ~RCWindow}}}
 ();\par
{\bkmkstart AAAAAAAKUE}{\bkmkend AAAAAAAKUE}
00054 \par
{\bkmkstart AAAAAAAKUF}{\bkmkend AAAAAAAKUF}
00055         {\cf20 // MANIPULATORS}\par
{\bkmkstart AAAAAAAKUG}{\bkmkend AAAAAAAKUG}
00056         {\cf17 virtual} {\cf18 int} handleEvent (mxEvent *event);\par
{\bkmkstart AAAAAAAKUH}{\bkmkend AAAAAAAKUH}
00057 {\cf20 //      void checkboxSet( int id, bool bState );}\par
{\bkmkstart AAAAAAAKUI}{\bkmkend AAAAAAAKUI}
00058         {\cf18 void} redraw ();\par
{\bkmkstart AAAAAAAKUJ}{\bkmkend AAAAAAAKUJ}
00059 \par
{\bkmkstart AAAAAAAKUK}{\bkmkend AAAAAAAKUK}
00060         {\cf20 // ACCESSORS}\par
{\bkmkstart AAAAAAAKUL}{\bkmkend AAAAAAAKUL}
00061         mxMenuBar *getMenuBar (){\cf17  const }\{ {\cf19 return} mb; \}\par
{\bkmkstart AAAAAAAKUM}{\bkmkend AAAAAAAKUM}
00062         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 *getGlWindow (){\cf17  const }\{ {\cf19 return} d_GlWindow; \}\par
{\bkmkstart AAAAAAAKUN}{\bkmkend AAAAAAAKUN}
00063 \par
{\bkmkstart AAAAAAAKUO}{\bkmkend AAAAAAAKUO}
00064 {\cf17 private}:\par
{\bkmkstart AAAAAAAKUP}{\bkmkend AAAAAAAKUP}
00065     mxMenuBar *mb;\par
{\bkmkstart AAAAAAAKUQ}{\bkmkend AAAAAAAKUQ}
00066         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 *d_GlWindow;\par
{\bkmkstart AAAAAAAKUR}{\bkmkend AAAAAAAKUR}
00067 {\cf20 //    line_t PrevLine;}\par
{\bkmkstart AAAAAAAKUS}{\bkmkend AAAAAAAKUS}
00068 {\cf20 //    drawlines_t Buffer;}\par
{\bkmkstart AAAAAAAKUT}{\bkmkend AAAAAAAKUT}
00069 \};\par
{\bkmkstart AAAAAAAKUU}{\bkmkend AAAAAAAKUU}
00070 \par
{\bkmkstart AAAAAAAKUV}{\bkmkend AAAAAAAKUV}
00071 {\cf17 extern} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZW" }{}}{\fldrslt {\cs37\ul\cf2 RCWindow}}}
 *g_RCWindow;\par
{\bkmkstart AAAAAAAKUW}{\bkmkend AAAAAAAKUW}
00072 {\cf20 //extern char g_appTitle[];}\par
{\bkmkstart AAAAAAAKUX}{\bkmkend AAAAAAAKUX}
00073 \par
{\bkmkstart AAAAAAAKUY}{\bkmkend AAAAAAAKUY}
00074 {\cf21 #endif }{\cf20 // INCLUDED_MDLVIEWER}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
receiver.c\par \pard\plain 
{\bkmkstart AAAAAAAKUZ}
{\bkmkend AAAAAAAKUZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAKVA}{\bkmkend AAAAAAAKVA}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAKVB}{\bkmkend AAAAAAAKVB}
00002 {\cf20 }\par
{\bkmkstart AAAAAAAKVC}{\bkmkend AAAAAAAKVC}
00003 {\cf20 ===== receiver.c ========================================================}\par
{\bkmkstart AAAAAAAKVD}{\bkmkend AAAAAAAKVD}
00004 {\cf20 }\par
{\bkmkstart AAAAAAAKVE}{\bkmkend AAAAAAAKVE}
00005 {\cf20 */}\par
{\bkmkstart AAAAAAAKVF}{\bkmkend AAAAAAAKVF}
00006 \par
{\bkmkstart AAAAAAAKVG}{\bkmkend AAAAAAAKVG}
00007 \par
{\bkmkstart AAAAAAAKVH}{\bkmkend AAAAAAAKVH}
00008 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAAKVI}{\bkmkend AAAAAAAKVI}
00009 \par
{\bkmkstart AAAAAAAKVJ}{\bkmkend AAAAAAAKVJ}
00010 {\cf21 #include "buffer.h"}\par
{\bkmkstart AAAAAAAKVK}{\bkmkend AAAAAAAKVK}
00011 \par
{\bkmkstart AAAAAAAKVL}{\bkmkend AAAAAAAKVL}
00012 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAAKVM}{\bkmkend AAAAAAAKVM}
00013 {\cf21 #include "softgpio.h"}\par
{\bkmkstart AAAAAAAKVN}{\bkmkend AAAAAAAKVN}
00014 {\cf21 #else}\par
{\bkmkstart AAAAAAAKVO}{\bkmkend AAAAAAAKVO}
00015 {\cf21 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAAKVP}{\bkmkend AAAAAAAKVP}
00016 {\cf21 #endif}\par
{\bkmkstart AAAAAAAKVQ}{\bkmkend AAAAAAAKVQ}
00017 \par
{\bkmkstart AAAAAAAKVR}{\bkmkend AAAAAAAKVR}
00018 {\cf21 #include "shared.h"}\par
{\bkmkstart AAAAAAAKVS}{\bkmkend AAAAAAAKVS}
00019 \par
{\bkmkstart AAAAAAAKVT}{\bkmkend AAAAAAAKVT}
00020 \par
{\bkmkstart AAAAAAAKVU}{\bkmkend AAAAAAAKVU}
00021 {\cf18 int} flag_receiver_ready;\par
{\bkmkstart AAAAAAAKVV}{\bkmkend AAAAAAAKVV}
00022 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 receiver_buffer;\par
{\bkmkstart AAAAAAAKVW}{\bkmkend AAAAAAAKVW}
00023 {\cf17 static} {\cf18 byte} elem;\par
{\bkmkstart AAAAAAAKVX}{\bkmkend AAAAAAAKVX}
00024 \par
{\bkmkstart AAAAAAAKVY}{\bkmkend AAAAAAAKVY}
00025 \par
{\bkmkstart AAAAAAAKVZ}{\bkmkend AAAAAAAKVZ}
00026 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAKWA}{\bkmkend AAAAAAAKWA}
00027 {\cf18 byte} RC_buffer_get()    {\cf20 /*function may block process */}\par
{\bkmkstart AAAAAAAKWB}{\bkmkend AAAAAAAKWB}
00028 \{\par
{\bkmkstart AAAAAAAKWC}{\bkmkend AAAAAAAKWC}
00029     {\cf18 byte} elem;\par
{\bkmkstart AAAAAAAKWD}{\bkmkend AAAAAAAKWD}
00030     {\cf19 if}(!buffer_empty(&receiver_buffer))\par
{\bkmkstart AAAAAAAKWE}{\bkmkend AAAAAAAKWE}
00031         buffer_get(&receiver_buffer, &elem);\par
{\bkmkstart AAAAAAAKWF}{\bkmkend AAAAAAAKWF}
00032     {\cf19 else}\par
{\bkmkstart AAAAAAAKWG}{\bkmkend AAAAAAAKWG}
00033     \{\par
{\bkmkstart AAAAAAAKWH}{\bkmkend AAAAAAAKWH}
00034         printf({\cf22 "Receiver::buffer is empty, please wait...\\n"});\par
{\bkmkstart AAAAAAAKWI}{\bkmkend AAAAAAAKWI}
00035         {\cf19 for}(;buffer_empty(&receiver_buffer);)\par
{\bkmkstart AAAAAAAKWJ}{\bkmkend AAAAAAAKWJ}
00036             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAKWK}{\bkmkend AAAAAAAKWK}
00037         buffer_get(&receiver_buffer, &elem);\par
{\bkmkstart AAAAAAAKWL}{\bkmkend AAAAAAAKWL}
00038     \}\par
{\bkmkstart AAAAAAAKWM}{\bkmkend AAAAAAAKWM}
00039     {\cf19 return} elem;\par
{\bkmkstart AAAAAAAKWN}{\bkmkend AAAAAAAKWN}
00040 \}\par
{\bkmkstart AAAAAAAKWO}{\bkmkend AAAAAAAKWO}
00041 {\cf21 #else}\par
{\bkmkstart AAAAAAAKWP}{\bkmkend AAAAAAAKWP}
00042 {\cf18 byte} RC_buffer_get()\par
{\bkmkstart AAAAAAAKWQ}{\bkmkend AAAAAAAKWQ}
00043 \{\par
{\bkmkstart AAAAAAAKWR}{\bkmkend AAAAAAAKWR}
00044     {\cf18 byte} elem;\par
{\bkmkstart AAAAAAAKWS}{\bkmkend AAAAAAAKWS}
00045     {\cf19 for}(;buffer_empty(&receiver_buffer);)\par
{\bkmkstart AAAAAAAKWT}{\bkmkend AAAAAAAKWT}
00046         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAKWU}{\bkmkend AAAAAAAKWU}
00047     buffer_get(&receiver_buffer, &elem);\par
{\bkmkstart AAAAAAAKWV}{\bkmkend AAAAAAAKWV}
00048     {\cf19 return} elem;\par
{\bkmkstart AAAAAAAKWW}{\bkmkend AAAAAAAKWW}
00049 \}\par
{\bkmkstart AAAAAAAKWX}{\bkmkend AAAAAAAKWX}
00050 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAKWY}{\bkmkend AAAAAAAKWY}
00051 \par
{\bkmkstart AAAAAAAKWZ}{\bkmkend AAAAAAAKWZ}
00052 {\cf18 void} RC_print_buffer()\par
{\bkmkstart AAAAAAAKXA}{\bkmkend AAAAAAAKXA}
00053 \{\par
{\bkmkstart AAAAAAAKXB}{\bkmkend AAAAAAAKXB}
00054     printf({\cf22 "------------------\\n"});\par
{\bkmkstart AAAAAAAKXC}{\bkmkend AAAAAAAKXC}
00055     buffer_print(&receiver_buffer);\par
{\bkmkstart AAAAAAAKXD}{\bkmkend AAAAAAAKXD}
00056     buffer_display(&receiver_buffer);\par
{\bkmkstart AAAAAAAKXE}{\bkmkend AAAAAAAKXE}
00057     printf({\cf22 "------------------\\n"});\par
{\bkmkstart AAAAAAAKXF}{\bkmkend AAAAAAAKXF}
00058 \}\par
{\bkmkstart AAAAAAAKXG}{\bkmkend AAAAAAAKXG}
00059 \par
{\bkmkstart AAAAAAAKXH}{\bkmkend AAAAAAAKXH}
00060 {\cf18 void} RC_flush_buffer()\par
{\bkmkstart AAAAAAAKXI}{\bkmkend AAAAAAAKXI}
00061 \{\par
{\bkmkstart AAAAAAAKXJ}{\bkmkend AAAAAAAKXJ}
00062     buffer_flush(&receiver_buffer);\par
{\bkmkstart AAAAAAAKXK}{\bkmkend AAAAAAAKXK}
00063 \}\par
{\bkmkstart AAAAAAAKXL}{\bkmkend AAAAAAAKXL}
00064 \par
{\bkmkstart AAAAAAAKXM}{\bkmkend AAAAAAAKXM}
00065 {\cf18 void} receiver_init()\par
{\bkmkstart AAAAAAAKXN}{\bkmkend AAAAAAAKXN}
00066 \{\par
{\bkmkstart AAAAAAAKXO}{\bkmkend AAAAAAAKXO}
00067     {\cf19 for}(; !flag_sender_ready;)\par
{\bkmkstart AAAAAAAKXP}{\bkmkend AAAAAAAKXP}
00068         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAKXQ}{\bkmkend AAAAAAAKXQ}
00069     {\cf20 /*wiringPiSetup();*/}\par
{\bkmkstart AAAAAAAKXR}{\bkmkend AAAAAAAKXR}
00070     pinMode(RX, INPUT);\par
{\bkmkstart AAAAAAAKXS}{\bkmkend AAAAAAAKXS}
00071 \par
{\bkmkstart AAAAAAAKXT}{\bkmkend AAAAAAAKXT}
00072 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAKXU}{\bkmkend AAAAAAAKXU}
00073     printf({\cf22 "Receiver::GPIO RX is ready\\n"});\par
{\bkmkstart AAAAAAAKXV}{\bkmkend AAAAAAAKXV}
00074 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAKXW}{\bkmkend AAAAAAAKXW}
00075 \par
{\bkmkstart AAAAAAAKXX}{\bkmkend AAAAAAAKXX}
00076     buffer_init(&receiver_buffer, BUFFER_SIZE);\par
{\bkmkstart AAAAAAAKXY}{\bkmkend AAAAAAAKXY}
00077     {\cf19 for}(; !digitalRead(RX);)\par
{\bkmkstart AAAAAAAKXZ}{\bkmkend AAAAAAAKXZ}
00078         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAKYA}{\bkmkend AAAAAAAKYA}
00079     flag_receiver_ready = 1;\par
{\bkmkstart AAAAAAAKYB}{\bkmkend AAAAAAAKYB}
00080 \par
{\bkmkstart AAAAAAAKYC}{\bkmkend AAAAAAAKYC}
00081 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAKYD}{\bkmkend AAAAAAAKYD}
00082     printf({\cf22 "Receiver::receiver is ready\\n"});\par
{\bkmkstart AAAAAAAKYE}{\bkmkend AAAAAAAKYE}
00083 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAKYF}{\bkmkend AAAAAAAKYF}
00084 \par
{\bkmkstart AAAAAAAKYG}{\bkmkend AAAAAAAKYG}
00085 \}\par
{\bkmkstart AAAAAAAKYH}{\bkmkend AAAAAAAKYH}
00086 \par
{\bkmkstart AAAAAAAKYI}{\bkmkend AAAAAAAKYI}
00087 {\cf18 void} receiver_main()\par
{\bkmkstart AAAAAAAKYJ}{\bkmkend AAAAAAAKYJ}
00088 \{\par
{\bkmkstart AAAAAAAKYK}{\bkmkend AAAAAAAKYK}
00089 \par
{\bkmkstart AAAAAAAKYL}{\bkmkend AAAAAAAKYL}
00090     receiver_init();\par
{\bkmkstart AAAAAAAKYM}{\bkmkend AAAAAAAKYM}
00091 \par
{\bkmkstart AAAAAAAKYN}{\bkmkend AAAAAAAKYN}
00092     {\cf19 for}(;;)\par
{\bkmkstart AAAAAAAKYO}{\bkmkend AAAAAAAKYO}
00093     \{\par
{\bkmkstart AAAAAAAKYP}{\bkmkend AAAAAAAKYP}
00094         {\cf19 if}(digitalRead(RX))     {\cf20 /* stop bit */}\par
{\bkmkstart AAAAAAAKYQ}{\bkmkend AAAAAAAKYQ}
00095         \{\par
{\bkmkstart AAAAAAAKYR}{\bkmkend AAAAAAAKYR}
00096             {\cf19 for}(; digitalRead(RX);)\par
{\bkmkstart AAAAAAAKYS}{\bkmkend AAAAAAAKYS}
00097                 delay(_SCAN_TIME_SPAN);\par
{\bkmkstart AAAAAAAKYT}{\bkmkend AAAAAAAKYT}
00098 \par
{\bkmkstart AAAAAAAKYU}{\bkmkend AAAAAAAKYU}
00099 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAKYV}{\bkmkend AAAAAAAKYV}
00100             printf({\cf22 "Receiver::receiving...\\n"});\par
{\bkmkstart AAAAAAAKYW}{\bkmkend AAAAAAAKYW}
00101 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAKYX}{\bkmkend AAAAAAAKYX}
00102 \par
{\bkmkstart AAAAAAAKYY}{\bkmkend AAAAAAAKYY}
00103             delay(BAUD_RATE + BAUD_RATE/2);\par
{\bkmkstart AAAAAAAKYZ}{\bkmkend AAAAAAAKYZ}
00104 \par
{\bkmkstart AAAAAAAKZA}{\bkmkend AAAAAAAKZA}
00105 {\cf21 #ifdef _MSB}\par
{\bkmkstart AAAAAAAKZB}{\bkmkend AAAAAAAKZB}
00106 \par
{\bkmkstart AAAAAAAKZC}{\bkmkend AAAAAAAKZC}
00107             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAAKZD}{\bkmkend AAAAAAAKZD}
00108                 elem |= 1 << 7;\par
{\bkmkstart AAAAAAAKZE}{\bkmkend AAAAAAAKZE}
00109             {\cf19 else}\par
{\bkmkstart AAAAAAAKZF}{\bkmkend AAAAAAAKZF}
00110                 elem |= 0 << 7;\par
{\bkmkstart AAAAAAAKZG}{\bkmkend AAAAAAAKZG}
00111             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAKZH}{\bkmkend AAAAAAAKZH}
00112 \par
{\bkmkstart AAAAAAAKZI}{\bkmkend AAAAAAAKZI}
00113             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAAKZJ}{\bkmkend AAAAAAAKZJ}
00114                 elem |= 1 << 6;\par
{\bkmkstart AAAAAAAKZK}{\bkmkend AAAAAAAKZK}
00115             {\cf19 else}\par
{\bkmkstart AAAAAAAKZL}{\bkmkend AAAAAAAKZL}
00116                 elem |= 0 << 6;\par
{\bkmkstart AAAAAAAKZM}{\bkmkend AAAAAAAKZM}
00117             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAKZN}{\bkmkend AAAAAAAKZN}
00118 \par
{\bkmkstart AAAAAAAKZO}{\bkmkend AAAAAAAKZO}
00119             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAAKZP}{\bkmkend AAAAAAAKZP}
00120                 elem |= 1 << 5;\par
{\bkmkstart AAAAAAAKZQ}{\bkmkend AAAAAAAKZQ}
00121             {\cf19 else}\par
{\bkmkstart AAAAAAAKZR}{\bkmkend AAAAAAAKZR}
00122                 elem |= 0 << 5;\par
{\bkmkstart AAAAAAAKZS}{\bkmkend AAAAAAAKZS}
00123             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAKZT}{\bkmkend AAAAAAAKZT}
00124 \par
{\bkmkstart AAAAAAAKZU}{\bkmkend AAAAAAAKZU}
00125             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAAKZV}{\bkmkend AAAAAAAKZV}
00126                 elem |= 1 << 4;\par
{\bkmkstart AAAAAAAKZW}{\bkmkend AAAAAAAKZW}
00127             {\cf19 else}\par
{\bkmkstart AAAAAAAKZX}{\bkmkend AAAAAAAKZX}
00128                 elem |= 0 << 4;\par
{\bkmkstart AAAAAAAKZY}{\bkmkend AAAAAAAKZY}
00129             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAKZZ}{\bkmkend AAAAAAAKZZ}
00130 \par
{\bkmkstart AAAAAAALAA}{\bkmkend AAAAAAALAA}
00131             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALAB}{\bkmkend AAAAAAALAB}
00132                 elem |= 1 << 3;\par
{\bkmkstart AAAAAAALAC}{\bkmkend AAAAAAALAC}
00133             {\cf19 else}\par
{\bkmkstart AAAAAAALAD}{\bkmkend AAAAAAALAD}
00134                 elem |= 0 << 3;\par
{\bkmkstart AAAAAAALAE}{\bkmkend AAAAAAALAE}
00135             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALAF}{\bkmkend AAAAAAALAF}
00136 \par
{\bkmkstart AAAAAAALAG}{\bkmkend AAAAAAALAG}
00137             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALAH}{\bkmkend AAAAAAALAH}
00138                 elem |= 1 << 2;\par
{\bkmkstart AAAAAAALAI}{\bkmkend AAAAAAALAI}
00139             {\cf19 else}\par
{\bkmkstart AAAAAAALAJ}{\bkmkend AAAAAAALAJ}
00140                 elem |= 0 << 2;\par
{\bkmkstart AAAAAAALAK}{\bkmkend AAAAAAALAK}
00141             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALAL}{\bkmkend AAAAAAALAL}
00142 \par
{\bkmkstart AAAAAAALAM}{\bkmkend AAAAAAALAM}
00143             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALAN}{\bkmkend AAAAAAALAN}
00144                 elem |= 1 << 1;\par
{\bkmkstart AAAAAAALAO}{\bkmkend AAAAAAALAO}
00145             {\cf19 else}\par
{\bkmkstart AAAAAAALAP}{\bkmkend AAAAAAALAP}
00146                 elem |= 0 << 1;\par
{\bkmkstart AAAAAAALAQ}{\bkmkend AAAAAAALAQ}
00147             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALAR}{\bkmkend AAAAAAALAR}
00148 \par
{\bkmkstart AAAAAAALAS}{\bkmkend AAAAAAALAS}
00149             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALAT}{\bkmkend AAAAAAALAT}
00150                 elem |= 1;\par
{\bkmkstart AAAAAAALAU}{\bkmkend AAAAAAALAU}
00151             {\cf19 else}\par
{\bkmkstart AAAAAAALAV}{\bkmkend AAAAAAALAV}
00152                 elem |= 0;\par
{\bkmkstart AAAAAAALAW}{\bkmkend AAAAAAALAW}
00153             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALAX}{\bkmkend AAAAAAALAX}
00154 {\cf21 #else}\par
{\bkmkstart AAAAAAALAY}{\bkmkend AAAAAAALAY}
00155             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALAZ}{\bkmkend AAAAAAALAZ}
00156                 elem |= 1;\par
{\bkmkstart AAAAAAALBA}{\bkmkend AAAAAAALBA}
00157             {\cf19 else}\par
{\bkmkstart AAAAAAALBB}{\bkmkend AAAAAAALBB}
00158                 elem |= 0;\par
{\bkmkstart AAAAAAALBC}{\bkmkend AAAAAAALBC}
00159             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALBD}{\bkmkend AAAAAAALBD}
00160 \par
{\bkmkstart AAAAAAALBE}{\bkmkend AAAAAAALBE}
00161             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALBF}{\bkmkend AAAAAAALBF}
00162                 elem |= 1 << 1;\par
{\bkmkstart AAAAAAALBG}{\bkmkend AAAAAAALBG}
00163             {\cf19 else}\par
{\bkmkstart AAAAAAALBH}{\bkmkend AAAAAAALBH}
00164                 elem |= 0 << 1;\par
{\bkmkstart AAAAAAALBI}{\bkmkend AAAAAAALBI}
00165             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALBJ}{\bkmkend AAAAAAALBJ}
00166 \par
{\bkmkstart AAAAAAALBK}{\bkmkend AAAAAAALBK}
00167             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALBL}{\bkmkend AAAAAAALBL}
00168                 elem |= 1 << 2;\par
{\bkmkstart AAAAAAALBM}{\bkmkend AAAAAAALBM}
00169             {\cf19 else}\par
{\bkmkstart AAAAAAALBN}{\bkmkend AAAAAAALBN}
00170                 elem |= 0 << 2;\par
{\bkmkstart AAAAAAALBO}{\bkmkend AAAAAAALBO}
00171             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALBP}{\bkmkend AAAAAAALBP}
00172 \par
{\bkmkstart AAAAAAALBQ}{\bkmkend AAAAAAALBQ}
00173             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALBR}{\bkmkend AAAAAAALBR}
00174                 elem |= 1 << 3;\par
{\bkmkstart AAAAAAALBS}{\bkmkend AAAAAAALBS}
00175             {\cf19 else}\par
{\bkmkstart AAAAAAALBT}{\bkmkend AAAAAAALBT}
00176                 elem |= 0 << 3;\par
{\bkmkstart AAAAAAALBU}{\bkmkend AAAAAAALBU}
00177             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALBV}{\bkmkend AAAAAAALBV}
00178 \par
{\bkmkstart AAAAAAALBW}{\bkmkend AAAAAAALBW}
00179             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALBX}{\bkmkend AAAAAAALBX}
00180                 elem |= 1 << 4;\par
{\bkmkstart AAAAAAALBY}{\bkmkend AAAAAAALBY}
00181             {\cf19 else}\par
{\bkmkstart AAAAAAALBZ}{\bkmkend AAAAAAALBZ}
00182                 elem |= 0 << 4;\par
{\bkmkstart AAAAAAALCA}{\bkmkend AAAAAAALCA}
00183             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALCB}{\bkmkend AAAAAAALCB}
00184 \par
{\bkmkstart AAAAAAALCC}{\bkmkend AAAAAAALCC}
00185             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALCD}{\bkmkend AAAAAAALCD}
00186                 elem |= 1 << 5;\par
{\bkmkstart AAAAAAALCE}{\bkmkend AAAAAAALCE}
00187             {\cf19 else}\par
{\bkmkstart AAAAAAALCF}{\bkmkend AAAAAAALCF}
00188                 elem |= 0 << 5;\par
{\bkmkstart AAAAAAALCG}{\bkmkend AAAAAAALCG}
00189             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALCH}{\bkmkend AAAAAAALCH}
00190 \par
{\bkmkstart AAAAAAALCI}{\bkmkend AAAAAAALCI}
00191             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALCJ}{\bkmkend AAAAAAALCJ}
00192                 elem |= 1 << 6;\par
{\bkmkstart AAAAAAALCK}{\bkmkend AAAAAAALCK}
00193             {\cf19 else}\par
{\bkmkstart AAAAAAALCL}{\bkmkend AAAAAAALCL}
00194                 elem |= 0 << 6;\par
{\bkmkstart AAAAAAALCM}{\bkmkend AAAAAAALCM}
00195             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALCN}{\bkmkend AAAAAAALCN}
00196 \par
{\bkmkstart AAAAAAALCO}{\bkmkend AAAAAAALCO}
00197             {\cf19 if}(digitalRead(RX))\par
{\bkmkstart AAAAAAALCP}{\bkmkend AAAAAAALCP}
00198                 elem |= 1 << 7;\par
{\bkmkstart AAAAAAALCQ}{\bkmkend AAAAAAALCQ}
00199             {\cf19 else}\par
{\bkmkstart AAAAAAALCR}{\bkmkend AAAAAAALCR}
00200                 elem |= 0 << 7;\par
{\bkmkstart AAAAAAALCS}{\bkmkend AAAAAAALCS}
00201             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALCT}{\bkmkend AAAAAAALCT}
00202 {\cf21 #endif  }{\cf20 /* _MSB */}{\cf21 }\par
{\bkmkstart AAAAAAALCU}{\bkmkend AAAAAAALCU}
00203 \par
{\bkmkstart AAAAAAALCV}{\bkmkend AAAAAAALCV}
00204             buffer_put(&receiver_buffer, &elem);\par
{\bkmkstart AAAAAAALCW}{\bkmkend AAAAAAALCW}
00205             elem = 0;\par
{\bkmkstart AAAAAAALCX}{\bkmkend AAAAAAALCX}
00206         \}\par
{\bkmkstart AAAAAAALCY}{\bkmkend AAAAAAALCY}
00207         {\cf19 else}\par
{\bkmkstart AAAAAAALCZ}{\bkmkend AAAAAAALCZ}
00208             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALDA}{\bkmkend AAAAAAALDA}
00209     \}\par
{\bkmkstart AAAAAAALDB}{\bkmkend AAAAAAALDB}
00210 \par
{\bkmkstart AAAAAAALDC}{\bkmkend AAAAAAALDC}
00211 \}\par
{\bkmkstart AAAAAAALDD}{\bkmkend AAAAAAALDD}
00212 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDWindow.cpp\par \pard\plain 
{\bkmkstart AAAAAAALDE}
{\bkmkend AAAAAAALDE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAALDF}{\bkmkend AAAAAAALDF}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAALDG}{\bkmkend AAAAAAALDG}
00002 {\cf20 //}\par
{\bkmkstart AAAAAAALDH}{\bkmkend AAAAAAALDH}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAALDI}{\bkmkend AAAAAAALDI}
00004 {\cf20 //}\par
{\bkmkstart AAAAAAALDJ}{\bkmkend AAAAAAALDJ}
00005 {\cf20 // file: SDWindow.cpp}\par
{\bkmkstart AAAAAAALDK}{\bkmkend AAAAAAALDK}
00006 {\cf20 // last modified:}\par
{\bkmkstart AAAAAAALDL}{\bkmkend AAAAAAALDL}
00007 {\cf20 // copyright:}\par
{\bkmkstart AAAAAAALDM}{\bkmkend AAAAAAALDM}
00008 {\cf20 // version:}\par
{\bkmkstart AAAAAAALDN}{\bkmkend AAAAAAALDN}
00009 {\cf20 //}\par
{\bkmkstart AAAAAAALDO}{\bkmkend AAAAAAALDO}
00010 {\cf20 // email:}\par
{\bkmkstart AAAAAAALDP}{\bkmkend AAAAAAALDP}
00011 {\cf20 // web:}\par
{\bkmkstart AAAAAAALDQ}{\bkmkend AAAAAAALDQ}
00012 {\cf20 //}\par
{\bkmkstart AAAAAAALDR}{\bkmkend AAAAAAALDR}
00013 {\cf20 */}\par
{\bkmkstart AAAAAAALDS}{\bkmkend AAAAAAALDS}
00014 \par
{\bkmkstart AAAAAAALDT}{\bkmkend AAAAAAALDT}
00015 {\cf21 #include <cstdio>}\par
{\bkmkstart AAAAAAALDU}{\bkmkend AAAAAAALDU}
00016 {\cf21 #include <cstdlib>}\par
{\bkmkstart AAAAAAALDV}{\bkmkend AAAAAAALDV}
00017 {\cf21 #include <cstring>}\par
{\bkmkstart AAAAAAALDW}{\bkmkend AAAAAAALDW}
00018 {\cf21 #include <mx/mx.h>}\par
{\bkmkstart AAAAAAALDX}{\bkmkend AAAAAAALDX}
00019 {\cf21 #include <mx/gl.h>}\par
{\bkmkstart AAAAAAALDY}{\bkmkend AAAAAAALDY}
00020 {\cf21 #include "GlWindow.h"}\par
{\bkmkstart AAAAAAALDZ}{\bkmkend AAAAAAALDZ}
00021 {\cf20 //#include "CmdLine.h"}\par
{\bkmkstart AAAAAAALEA}{\bkmkend AAAAAAALEA}
00022 {\cf20 //#include "shared.h"}\par
{\bkmkstart AAAAAAALEB}{\bkmkend AAAAAAALEB}
00023 {\cf20 //#include "server.h"}\par
{\bkmkstart AAAAAAALEC}{\bkmkend AAAAAAALEC}
00024 \par
{\bkmkstart AAAAAAALED}{\bkmkend AAAAAAALED}
00025 {\cf21 #include "SDWindow.h"}\par
{\bkmkstart AAAAAAALEE}{\bkmkend AAAAAAALEE}
00026 \par
{\bkmkstart AAAAAAALEF}{\bkmkend AAAAAAALEF}
00027 {\cf20 /*}\par
{\bkmkstart AAAAAAALEG}{\bkmkend AAAAAAALEG}
00028 {\cf20 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAALEH}{\bkmkend AAAAAAALEH}
00029 {\cf20 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAALEI}{\bkmkend AAAAAAALEI}
00030 {\cf20 extern "C"}\par
{\bkmkstart AAAAAAALEJ}{\bkmkend AAAAAAALEJ}
00031 {\cf20 \{}\par
{\bkmkstart AAAAAAALEK}{\bkmkend AAAAAAALEK}
00032 {\cf20     namespace \{}\par
{\bkmkstart AAAAAAALEL}{\bkmkend AAAAAAALEL}
00033 {\cf20 #endif}\par
{\bkmkstart AAAAAAALEM}{\bkmkend AAAAAAALEM}
00034 {\cf20 extern void delay(unsigned int howLong);}\par
{\bkmkstart AAAAAAALEN}{\bkmkend AAAAAAALEN}
00035 {\cf20 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAALEO}{\bkmkend AAAAAAALEO}
00036 {\cf20     \} //namespace}\par
{\bkmkstart AAAAAAALEP}{\bkmkend AAAAAAALEP}
00037 {\cf20 \}}\par
{\bkmkstart AAAAAAALEQ}{\bkmkend AAAAAAALEQ}
00038 {\cf20 #endif}\par
{\bkmkstart AAAAAAALER}{\bkmkend AAAAAAALER}
00039 {\cf20 #else}\par
{\bkmkstart AAAAAAALES}{\bkmkend AAAAAAALES}
00040 {\cf20 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAALET}{\bkmkend AAAAAAALET}
00041 {\cf20 #endif //_SOFTGPIO}\par
{\bkmkstart AAAAAAALEU}{\bkmkend AAAAAAALEU}
00042 {\cf20 */}\par
{\bkmkstart AAAAAAALEV}{\bkmkend AAAAAAALEV}
00043 \par
{\bkmkstart AAAAAAALEW}{\bkmkend AAAAAAALEW}
00044 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZQ" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow}}}
 *g_SDWindow = 0;\par
{\bkmkstart AAAAAAALEX}{\bkmkend AAAAAAALEX}
00045 {\cf20 //char g_appTitle[] = "Sender Window";}\par
{\bkmkstart AAAAAAALEY}{\bkmkend AAAAAAALEY}
00046 \par
{\bkmkstart AAAAAAALEZ}{\bkmkend AAAAAAALEZ}
00047 SDWindow :: SDWindow() : mxWindow( 0, 0, 0, 0, 0, {\cf22 "Sender Window"}, mxWindow::Normal )\par
{\bkmkstart AAAAAAALFA}{\bkmkend AAAAAAALFA}
00048 \{\par
{\bkmkstart AAAAAAALFB}{\bkmkend AAAAAAALFB}
00049         {\cf20 // create menu stuff}\par
{\bkmkstart AAAAAAALFC}{\bkmkend AAAAAAALFC}
00050         mb = {\cf17 new} mxMenuBar ({\cf17 this});\par
{\bkmkstart AAAAAAALFD}{\bkmkend AAAAAAALFD}
00051         mxMenu *menuFile = {\cf17 new} mxMenu ();\par
{\bkmkstart AAAAAAALFE}{\bkmkend AAAAAAALFE}
00052         mxMenu *menuAction = {\cf17 new} mxMenu ();\par
{\bkmkstart AAAAAAALFF}{\bkmkend AAAAAAALFF}
00053 {\cf20 //      mxMenu *menuTool = new mxMenu ();}\par
{\bkmkstart AAAAAAALFG}{\bkmkend AAAAAAALFG}
00054         mxMenu *menuHelp = {\cf17 new} mxMenu ();\par
{\bkmkstart AAAAAAALFH}{\bkmkend AAAAAAALFH}
00055 \par
{\bkmkstart AAAAAAALFI}{\bkmkend AAAAAAALFI}
00056         mb->addMenu ({\cf22 "File"}, menuFile);\par
{\bkmkstart AAAAAAALFJ}{\bkmkend AAAAAAALFJ}
00057         mb->addMenu ({\cf22 "Action"}, menuAction);\par
{\bkmkstart AAAAAAALFK}{\bkmkend AAAAAAALFK}
00058 {\cf20 //      mb->addMenu ("Tools", menuTool);}\par
{\bkmkstart AAAAAAALFL}{\bkmkend AAAAAAALFL}
00059         mb->addMenu ({\cf22 "Help"}, menuHelp);\par
{\bkmkstart AAAAAAALFM}{\bkmkend AAAAAAALFM}
00060 \par
{\bkmkstart AAAAAAALFN}{\bkmkend AAAAAAALFN}
00061 {\cf20 //      menuFile->addSeparator ();}\par
{\bkmkstart AAAAAAALFO}{\bkmkend AAAAAAALFO}
00062         menuFile->add ({\cf22 "Exit"}, IDC_FILE_EXIT);\par
{\bkmkstart AAAAAAALFP}{\bkmkend AAAAAAALFP}
00063 \par
{\bkmkstart AAAAAAALFQ}{\bkmkend AAAAAAALFQ}
00064 {\cf20 //      menuAction->add ("Connect...", IDC_ACTION_CONNECT);}\par
{\bkmkstart AAAAAAALFR}{\bkmkend AAAAAAALFR}
00065 {\cf20 //      menuAction->add ("Disconnect...", IDC_ACTION_DISCONNECT);}\par
{\bkmkstart AAAAAAALFS}{\bkmkend AAAAAAALFS}
00066         menuAction->add ({\cf22 "Display Information"}, IDC_ACTION_INFO);\par
{\bkmkstart AAAAAAALFT}{\bkmkend AAAAAAALFT}
00067         menuAction->addSeparator ();\par
{\bkmkstart AAAAAAALFU}{\bkmkend AAAAAAALFU}
00068         menuAction->add ({\cf22 "Undo"}, IDC_ACTION_UNDO);\par
{\bkmkstart AAAAAAALFV}{\bkmkend AAAAAAALFV}
00069 {\cf20 //      menuAction->add ("Redo", IDC_ACTION_REDO);}\par
{\bkmkstart AAAAAAALFW}{\bkmkend AAAAAAALFW}
00070         menuAction->addSeparator ();\par
{\bkmkstart AAAAAAALFX}{\bkmkend AAAAAAALFX}
00071         menuAction->add ({\cf22 "Clear Sceen"}, IDC_ACTION_CLS);\par
{\bkmkstart AAAAAAALFY}{\bkmkend AAAAAAALFY}
00072 {\cf20 //      menuAction->add ("Refresh", IDC_ACTION_REFRESH);}\par
{\bkmkstart AAAAAAALFZ}{\bkmkend AAAAAAALFZ}
00073 \par
{\bkmkstart AAAAAAALGA}{\bkmkend AAAAAAALGA}
00074         menuHelp->add ({\cf22 "About..."}, IDC_HELP_ABOUT);\par
{\bkmkstart AAAAAAALGB}{\bkmkend AAAAAAALGB}
00075 \par
{\bkmkstart AAAAAAALGC}{\bkmkend AAAAAAALGC}
00076         {\cf20 // create the OpenGL window}\par
{\bkmkstart AAAAAAALGD}{\bkmkend AAAAAAALGD}
00077         d_GlWindow = {\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 ({\cf17 this}, 0, 0, 0, 0, {\cf22 ""}, mxWindow::Normal);\par
{\bkmkstart AAAAAAALGE}{\bkmkend AAAAAAALGE}
00078 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAALGF}{\bkmkend AAAAAAALGF}
00079         SetWindowLong ((HWND) d_GlWindow->getHandle (), GWL_EXSTYLE, WS_EX_CLIENTEDGE);\par
{\bkmkstart AAAAAAALGG}{\bkmkend AAAAAAALGG}
00080 {\cf21 #endif}\par
{\bkmkstart AAAAAAALGH}{\bkmkend AAAAAAALGH}
00081 \par
{\bkmkstart AAAAAAALGI}{\bkmkend AAAAAAALGI}
00082         g_GlWindow = d_GlWindow;\par
{\bkmkstart AAAAAAALGJ}{\bkmkend AAAAAAALGJ}
00083 \par
{\bkmkstart AAAAAAALGK}{\bkmkend AAAAAAALGK}
00084 {\cf20 //      line_t emptyline = \{0,0,0,0\};}\par
{\bkmkstart AAAAAAALGL}{\bkmkend AAAAAAALGL}
00085 {\cf20 //      cmd_lines.assign(32, emptyline);}\par
{\bkmkstart AAAAAAALGM}{\bkmkend AAAAAAALGM}
00086 \par
{\bkmkstart AAAAAAALGN}{\bkmkend AAAAAAALGN}
00087         setBounds (20, 20, 640, 540);\par
{\bkmkstart AAAAAAALGO}{\bkmkend AAAAAAALGO}
00088         setVisible ({\cf17 true});\par
{\bkmkstart AAAAAAALGP}{\bkmkend AAAAAAALGP}
00089 \}\par
{\bkmkstart AAAAAAALGQ}{\bkmkend AAAAAAALGQ}
00090 \par
{\bkmkstart AAAAAAALGR}{\bkmkend AAAAAAALGR}
00091 \par
{\bkmkstart AAAAAAALGS}{\bkmkend AAAAAAALGS}
00092 \par
{\bkmkstart AAAAAAALGT}{\bkmkend AAAAAAALGT}
00093 SDWindow::~SDWindow ()\par
{\bkmkstart AAAAAAALGU}{\bkmkend AAAAAAALGU}
00094 \{\par
{\bkmkstart AAAAAAALGV}{\bkmkend AAAAAAALGV}
00095         {\cf20 // grab some params in case that hasn't updates}\par
{\bkmkstart AAAAAAALGW}{\bkmkend AAAAAAALGW}
00096 \par
{\bkmkstart AAAAAAALGX}{\bkmkend AAAAAAALGX}
00097 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAALGY}{\bkmkend AAAAAAALGY}
00098         DeleteFile ({\cf22 "midump.txt"});\par
{\bkmkstart AAAAAAALGZ}{\bkmkend AAAAAAALGZ}
00099 {\cf21 #endif}\par
{\bkmkstart AAAAAAALHA}{\bkmkend AAAAAAALHA}
00100 \}\par
{\bkmkstart AAAAAAALHB}{\bkmkend AAAAAAALHB}
00101 {\cf20 /*}\par
{\bkmkstart AAAAAAALHC}{\bkmkend AAAAAAALHC}
00102 {\cf20 void SDWindow :: checkboxSet( int id, bool bState )}\par
{\bkmkstart AAAAAAALHD}{\bkmkend AAAAAAALHD}
00103 {\cf20 \{}\par
{\bkmkstart AAAAAAALHE}{\bkmkend AAAAAAALHE}
00104 {\cf20         mb->setChecked( id, bState );}\par
{\bkmkstart AAAAAAALHF}{\bkmkend AAAAAAALHF}
00105 {\cf20 \}}\par
{\bkmkstart AAAAAAALHG}{\bkmkend AAAAAAALHG}
00106 {\cf20 */}\par
{\bkmkstart AAAAAAALHH}{\bkmkend AAAAAAALHH}
00107 {\cf18 int}\par
{\bkmkstart AAAAAAALHI}{\bkmkend AAAAAAALHI}
00108 SDWindow::handleEvent (mxEvent *event)\par
{\bkmkstart AAAAAAALHJ}{\bkmkend AAAAAAALHJ}
00109 \{\par
{\bkmkstart AAAAAAALHK}{\bkmkend AAAAAAALHK}
00110         {\cf19 switch} (event->event)\par
{\bkmkstart AAAAAAALHL}{\bkmkend AAAAAAALHL}
00111         \{\par
{\bkmkstart AAAAAAALHM}{\bkmkend AAAAAAALHM}
00112 \par
{\bkmkstart AAAAAAALHN}{\bkmkend AAAAAAALHN}
00113         {\cf19 case} mxEvent::Action:\par
{\bkmkstart AAAAAAALHO}{\bkmkend AAAAAAALHO}
00114         \{\par
{\bkmkstart AAAAAAALHP}{\bkmkend AAAAAAALHP}
00115                 {\cf19 switch} (event->action)\par
{\bkmkstart AAAAAAALHQ}{\bkmkend AAAAAAALHQ}
00116                 \{\par
{\bkmkstart AAAAAAALHR}{\bkmkend AAAAAAALHR}
00117                 {\cf19 case} IDC_FILE_EXIT:\par
{\bkmkstart AAAAAAALHS}{\bkmkend AAAAAAALHS}
00118                 \{\par
{\bkmkstart AAAAAAALHT}{\bkmkend AAAAAAALHT}
00119                         redraw ();\par
{\bkmkstart AAAAAAALHU}{\bkmkend AAAAAAALHU}
00120                         mx::quit ();\par
{\bkmkstart AAAAAAALHV}{\bkmkend AAAAAAALHV}
00121                 \}\par
{\bkmkstart AAAAAAALHW}{\bkmkend AAAAAAALHW}
00122                 {\cf19 break};\par
{\bkmkstart AAAAAAALHX}{\bkmkend AAAAAAALHX}
00123 \par
{\bkmkstart AAAAAAALHY}{\bkmkend AAAAAAALHY}
00124                 {\cf19 case} IDC_ACTION_CLS:\par
{\bkmkstart AAAAAAALHZ}{\bkmkend AAAAAAALHZ}
00125             getGlWindow()->LineClear();\par
{\bkmkstart AAAAAAALIA}{\bkmkend AAAAAAALIA}
00126             {\cf19 break};\par
{\bkmkstart AAAAAAALIB}{\bkmkend AAAAAAALIB}
00127 \par
{\bkmkstart AAAAAAALIC}{\bkmkend AAAAAAALIC}
00128         {\cf19 case} IDC_ACTION_UNDO:\par
{\bkmkstart AAAAAAALID}{\bkmkend AAAAAAALID}
00129             getGlWindow()->LineUndo();\par
{\bkmkstart AAAAAAALIE}{\bkmkend AAAAAAALIE}
00130             {\cf19 break};\par
{\bkmkstart AAAAAAALIF}{\bkmkend AAAAAAALIF}
00131 \par
{\bkmkstart AAAAAAALIG}{\bkmkend AAAAAAALIG}
00132                 {\cf19 case} IDC_HELP_ABOUT:\par
{\bkmkstart AAAAAAALIH}{\bkmkend AAAAAAALIH}
00133                         mxMessageBox ({\cf17 this},\par
{\bkmkstart AAAAAAALII}{\bkmkend AAAAAAALII}
00134                                 {\cf22 "Painter P20\\n"}\par
{\bkmkstart AAAAAAALIJ}{\bkmkend AAAAAAALIJ}
00135                                 {\cf22 "Build:\\t"} __DATE__ {\cf22 ".\\n"}\par
{\bkmkstart AAAAAAALIK}{\bkmkend AAAAAAALIK}
00136                                 {\cf22 "Email:\\tjw26u22@soton.ac.uk\\n"}, {\cf22 "Painter"},\par
{\bkmkstart AAAAAAALIL}{\bkmkend AAAAAAALIL}
00137                                 MX_MB_OK | MX_MB_INFORMATION );\par
{\bkmkstart AAAAAAALIM}{\bkmkend AAAAAAALIM}
00138                         {\cf19 break};\par
{\bkmkstart AAAAAAALIN}{\bkmkend AAAAAAALIN}
00139 \par
{\bkmkstart AAAAAAALIO}{\bkmkend AAAAAAALIO}
00140                 \} {\cf20 //switch (event->action)}\par
{\bkmkstart AAAAAAALIP}{\bkmkend AAAAAAALIP}
00141 \par
{\bkmkstart AAAAAAALIQ}{\bkmkend AAAAAAALIQ}
00142         \} {\cf20 // mxEvent::Action}\par
{\bkmkstart AAAAAAALIR}{\bkmkend AAAAAAALIR}
00143         {\cf19 break};\par
{\bkmkstart AAAAAAALIS}{\bkmkend AAAAAAALIS}
00144 \par
{\bkmkstart AAAAAAALIT}{\bkmkend AAAAAAALIT}
00145         {\cf19 case} mxEvent::Size:\par
{\bkmkstart AAAAAAALIU}{\bkmkend AAAAAAALIU}
00146         \{\par
{\bkmkstart AAAAAAALIV}{\bkmkend AAAAAAALIV}
00147                 {\cf18 int} w = {\cf17 event}->width;\par
{\bkmkstart AAAAAAALIW}{\bkmkend AAAAAAALIW}
00148                 {\cf18 int} h = {\cf17 event}->height;\par
{\bkmkstart AAAAAAALIX}{\bkmkend AAAAAAALIX}
00149                 {\cf18 int} y = mb->getHeight ();\par
{\bkmkstart AAAAAAALIY}{\bkmkend AAAAAAALIY}
00150 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAALIZ}{\bkmkend AAAAAAALIZ}
00151 {\cf21 #define HEIGHT 120}\par
{\bkmkstart AAAAAAALJA}{\bkmkend AAAAAAALJA}
00152 {\cf21 #else}\par
{\bkmkstart AAAAAAALJB}{\bkmkend AAAAAAALJB}
00153 {\cf21 #define HEIGHT 140}\par
{\bkmkstart AAAAAAALJC}{\bkmkend AAAAAAALJC}
00154                 h -= 40;\par
{\bkmkstart AAAAAAALJD}{\bkmkend AAAAAAALJD}
00155 {\cf21 #endif}\par
{\bkmkstart AAAAAAALJE}{\bkmkend AAAAAAALJE}
00156 \par
{\bkmkstart AAAAAAALJF}{\bkmkend AAAAAAALJF}
00157 {\cf20 //              d_GlWindow->setBounds (0, y, w, h - HEIGHT);}\par
{\bkmkstart AAAAAAALJG}{\bkmkend AAAAAAALJG}
00158                 d_GlWindow->setBounds (0, y, w, h);\par
{\bkmkstart AAAAAAALJH}{\bkmkend AAAAAAALJH}
00159 {\cf20 //              d_cpl->setBounds (0, y + h - HEIGHT, w, HEIGHT);}\par
{\bkmkstart AAAAAAALJI}{\bkmkend AAAAAAALJI}
00160         \}\par
{\bkmkstart AAAAAAALJJ}{\bkmkend AAAAAAALJJ}
00161         {\cf19 break};\par
{\bkmkstart AAAAAAALJK}{\bkmkend AAAAAAALJK}
00162 \par
{\bkmkstart AAAAAAALJL}{\bkmkend AAAAAAALJL}
00163         {\cf19 break};\par
{\bkmkstart AAAAAAALJM}{\bkmkend AAAAAAALJM}
00164         \} {\cf20 // event->event}\par
{\bkmkstart AAAAAAALJN}{\bkmkend AAAAAAALJN}
00165 \par
{\bkmkstart AAAAAAALJO}{\bkmkend AAAAAAALJO}
00166         {\cf19 return} 1;\par
{\bkmkstart AAAAAAALJP}{\bkmkend AAAAAAALJP}
00167 \}\par
{\bkmkstart AAAAAAALJQ}{\bkmkend AAAAAAALJQ}
00168 \par
{\bkmkstart AAAAAAALJR}{\bkmkend AAAAAAALJR}
00169 \par
{\bkmkstart AAAAAAALJS}{\bkmkend AAAAAAALJS}
00170 \par
{\bkmkstart AAAAAAALJT}{\bkmkend AAAAAAALJT}
00171 {\cf18 void}\par
{\bkmkstart AAAAAAALJU}{\bkmkend AAAAAAALJU}
00172 SDWindow::redraw ()\par
{\bkmkstart AAAAAAALJV}{\bkmkend AAAAAAALJV}
00173 \{\par
{\bkmkstart AAAAAAALJW}{\bkmkend AAAAAAALJW}
00174         mxEvent event;\par
{\bkmkstart AAAAAAALJX}{\bkmkend AAAAAAALJX}
00175         {\cf17 event}.event = mxEvent::Size;\par
{\bkmkstart AAAAAAALJY}{\bkmkend AAAAAAALJY}
00176         {\cf17 event}.width = w2 ();\par
{\bkmkstart AAAAAAALJZ}{\bkmkend AAAAAAALJZ}
00177         {\cf17 event}.height = h2 ();\par
{\bkmkstart AAAAAAALKA}{\bkmkend AAAAAAALKA}
00178         handleEvent (&event);\par
{\bkmkstart AAAAAAALKB}{\bkmkend AAAAAAALKB}
00179 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDWindow.h\par \pard\plain 
{\bkmkstart AAAAAAALKC}
{\bkmkend AAAAAAALKC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAALKD}{\bkmkend AAAAAAALKD}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAALKE}{\bkmkend AAAAAAALKE}
00002 {\cf20 //}\par
{\bkmkstart AAAAAAALKF}{\bkmkend AAAAAAALKF}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAALKG}{\bkmkend AAAAAAALKG}
00004 {\cf20 //}\par
{\bkmkstart AAAAAAALKH}{\bkmkend AAAAAAALKH}
00005 {\cf20 // file: SDWindow.h}\par
{\bkmkstart AAAAAAALKI}{\bkmkend AAAAAAALKI}
00006 {\cf20 // last modified:}\par
{\bkmkstart AAAAAAALKJ}{\bkmkend AAAAAAALKJ}
00007 {\cf20 // copyright:}\par
{\bkmkstart AAAAAAALKK}{\bkmkend AAAAAAALKK}
00008 {\cf20 // version:}\par
{\bkmkstart AAAAAAALKL}{\bkmkend AAAAAAALKL}
00009 {\cf20 //}\par
{\bkmkstart AAAAAAALKM}{\bkmkend AAAAAAALKM}
00010 {\cf20 // email:}\par
{\bkmkstart AAAAAAALKN}{\bkmkend AAAAAAALKN}
00011 {\cf20 // web:}\par
{\bkmkstart AAAAAAALKO}{\bkmkend AAAAAAALKO}
00012 {\cf20 //}\par
{\bkmkstart AAAAAAALKP}{\bkmkend AAAAAAALKP}
00013 {\cf20 */}\par
{\bkmkstart AAAAAAALKQ}{\bkmkend AAAAAAALKQ}
00014 \par
{\bkmkstart AAAAAAALKR}{\bkmkend AAAAAAALKR}
00015 {\cf21 #ifndef INCLUDED_SDWINDOW}\par
{\bkmkstart AAAAAAALKS}{\bkmkend AAAAAAALKS}
00016 {\cf21 #define INCLUDED_SDWINDOW}\par
{\bkmkstart AAAAAAALKT}{\bkmkend AAAAAAALKT}
00017 \par
{\bkmkstart AAAAAAALKU}{\bkmkend AAAAAAALKU}
00018 \par
{\bkmkstart AAAAAAALKV}{\bkmkend AAAAAAALKV}
00019 \par
{\bkmkstart AAAAAAALKW}{\bkmkend AAAAAAALKW}
00020 {\cf21 #ifndef INCLUDED_MXWINDOW}\par
{\bkmkstart AAAAAAALKX}{\bkmkend AAAAAAALKX}
00021 {\cf21 #include <mx/mxWindow.h>}\par
{\bkmkstart AAAAAAALKY}{\bkmkend AAAAAAALKY}
00022 {\cf21 #endif}\par
{\bkmkstart AAAAAAALKZ}{\bkmkend AAAAAAALKZ}
00023 \par
{\bkmkstart AAAAAAALLA}{\bkmkend AAAAAAALLA}
00024 {\cf20 //#include "CmdLine.h"}\par
{\bkmkstart AAAAAAALLB}{\bkmkend AAAAAAALLB}
00025 \par
{\bkmkstart AAAAAAALLC}{\bkmkend AAAAAAALLC}
00026 {\cf21 #define IDC_FILE_EXIT                   1017}\par
{\bkmkstart AAAAAAALLD}{\bkmkend AAAAAAALLD}
00027 \par
{\bkmkstart AAAAAAALLE}{\bkmkend AAAAAAALLE}
00028 {\cf21 #define IDC_ACTION_CONNECT              1101}\par
{\bkmkstart AAAAAAALLF}{\bkmkend AAAAAAALLF}
00029 {\cf21 #define IDC_ACTION_DISCONNECT   1102}\par
{\bkmkstart AAAAAAALLG}{\bkmkend AAAAAAALLG}
00030 {\cf21 #define IDC_ACTION_INFO         1103}\par
{\bkmkstart AAAAAAALLH}{\bkmkend AAAAAAALLH}
00031 {\cf21 #define IDC_ACTION_UNDO         1104}\par
{\bkmkstart AAAAAAALLI}{\bkmkend AAAAAAALLI}
00032 {\cf21 #define IDC_ACTION_REDO         1105}\par
{\bkmkstart AAAAAAALLJ}{\bkmkend AAAAAAALLJ}
00033 {\cf21 #define IDC_ACTION_CLS          1106}\par
{\bkmkstart AAAAAAALLK}{\bkmkend AAAAAAALLK}
00034 {\cf21 #define IDC_ACTION_REFRESH      1107}\par
{\bkmkstart AAAAAAALLL}{\bkmkend AAAAAAALLL}
00035 \par
{\bkmkstart AAAAAAALLM}{\bkmkend AAAAAAALLM}
00036 {\cf21 #define IDC_HELP_GOTOHOMEPAGE   1301}\par
{\bkmkstart AAAAAAALLN}{\bkmkend AAAAAAALLN}
00037 {\cf21 #define IDC_HELP_ABOUT                  1302}\par
{\bkmkstart AAAAAAALLO}{\bkmkend AAAAAAALLO}
00038 \par
{\bkmkstart AAAAAAALLP}{\bkmkend AAAAAAALLP}
00039 {\cf20 //for window}\par
{\bkmkstart AAAAAAALLQ}{\bkmkend AAAAAAALLQ}
00040 {\cf21 #define X_RESOLUTION 640}\par
{\bkmkstart AAAAAAALLR}{\bkmkend AAAAAAALLR}
00041 {\cf21 #define Y_RESOLUTION 540}\par
{\bkmkstart AAAAAAALLS}{\bkmkend AAAAAAALLS}
00042 \par
{\bkmkstart AAAAAAALLT}{\bkmkend AAAAAAALLT}
00043 \par
{\bkmkstart AAAAAAALLU}{\bkmkend AAAAAAALLU}
00044 {\cf17 class }mxMenuBar;\par
{\bkmkstart AAAAAAALLV}{\bkmkend AAAAAAALLV}
00045 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
;\par
{\bkmkstart AAAAAAALLW}{\bkmkend AAAAAAALLW}
00046 \par
{\bkmkstart AAAAAAALLX}{\bkmkend AAAAAAALLX}
00047 \par
{\bkmkstart AAAAAAALLY}{\bkmkend AAAAAAALLY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZQ" }{}}{\fldrslt {\cs37\ul\cf2 00048}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZQ" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow}}}
 : {\cf17 public} mxWindow\par
{\bkmkstart AAAAAAALLZ}{\bkmkend AAAAAAALLZ}
00049 \{\par
{\bkmkstart AAAAAAALMA}{\bkmkend AAAAAAALMA}
00050 {\cf17 public}:\par
{\bkmkstart AAAAAAALMB}{\bkmkend AAAAAAALMB}
00051         {\cf20 // CREATORS}\par
{\bkmkstart AAAAAAALMC}{\bkmkend AAAAAAALMC}
00052         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZQ" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow}}}
 ();\par
{\bkmkstart AAAAAAALMD}{\bkmkend AAAAAAALMD}
00053         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZQ" }{}}{\fldrslt {\cs37\ul\cf2 ~SDWindow}}}
 ();\par
{\bkmkstart AAAAAAALME}{\bkmkend AAAAAAALME}
00054 \par
{\bkmkstart AAAAAAALMF}{\bkmkend AAAAAAALMF}
00055         {\cf20 // MANIPULATORS}\par
{\bkmkstart AAAAAAALMG}{\bkmkend AAAAAAALMG}
00056         {\cf17 virtual} {\cf18 int} handleEvent (mxEvent *event);\par
{\bkmkstart AAAAAAALMH}{\bkmkend AAAAAAALMH}
00057 {\cf20 //      void checkboxSet( int id, bool bState );}\par
{\bkmkstart AAAAAAALMI}{\bkmkend AAAAAAALMI}
00058         {\cf18 void} redraw ();\par
{\bkmkstart AAAAAAALMJ}{\bkmkend AAAAAAALMJ}
00059 \par
{\bkmkstart AAAAAAALMK}{\bkmkend AAAAAAALMK}
00060         {\cf20 // ACCESSORS}\par
{\bkmkstart AAAAAAALML}{\bkmkend AAAAAAALML}
00061         mxMenuBar *getMenuBar (){\cf17  const }\{ {\cf19 return} mb; \}\par
{\bkmkstart AAAAAAALMM}{\bkmkend AAAAAAALMM}
00062         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 *getGlWindow (){\cf17  const }\{ {\cf19 return} d_GlWindow; \}\par
{\bkmkstart AAAAAAALMN}{\bkmkend AAAAAAALMN}
00063 \par
{\bkmkstart AAAAAAALMO}{\bkmkend AAAAAAALMO}
00064 {\cf17 private}:\par
{\bkmkstart AAAAAAALMP}{\bkmkend AAAAAAALMP}
00065     mxMenuBar *mb;\par
{\bkmkstart AAAAAAALMQ}{\bkmkend AAAAAAALMQ}
00066         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAEDS" }{}}{\fldrslt {\cs37\ul\cf2 GlWindow}}}
 *d_GlWindow;\par
{\bkmkstart AAAAAAALMR}{\bkmkend AAAAAAALMR}
00067 {\cf20 //    line_t PrevLine;}\par
{\bkmkstart AAAAAAALMS}{\bkmkend AAAAAAALMS}
00068 {\cf20 //    drawlines_t Buffer;}\par
{\bkmkstart AAAAAAALMT}{\bkmkend AAAAAAALMT}
00069 \};\par
{\bkmkstart AAAAAAALMU}{\bkmkend AAAAAAALMU}
00070 \par
{\bkmkstart AAAAAAALMV}{\bkmkend AAAAAAALMV}
00071 {\cf17 extern} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADZQ" }{}}{\fldrslt {\cs37\ul\cf2 SDWindow}}}
 *g_SDWindow;\par
{\bkmkstart AAAAAAALMW}{\bkmkend AAAAAAALMW}
00072 {\cf20 //extern char g_appTitle[];}\par
{\bkmkstart AAAAAAALMX}{\bkmkend AAAAAAALMX}
00073 \par
{\bkmkstart AAAAAAALMY}{\bkmkend AAAAAAALMY}
00074 {\cf21 #endif }{\cf20 // INCLUDED_MDLVIEWER}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sender.c\par \pard\plain 
{\bkmkstart AAAAAAALMZ}
{\bkmkend AAAAAAALMZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAALNA}{\bkmkend AAAAAAALNA}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAALNB}{\bkmkend AAAAAAALNB}
00002 {\cf20 }\par
{\bkmkstart AAAAAAALNC}{\bkmkend AAAAAAALNC}
00003 {\cf20 ===== sender.c ========================================================}\par
{\bkmkstart AAAAAAALND}{\bkmkend AAAAAAALND}
00004 {\cf20 }\par
{\bkmkstart AAAAAAALNE}{\bkmkend AAAAAAALNE}
00005 {\cf20 */}\par
{\bkmkstart AAAAAAALNF}{\bkmkend AAAAAAALNF}
00006 \par
{\bkmkstart AAAAAAALNG}{\bkmkend AAAAAAALNG}
00007 \par
{\bkmkstart AAAAAAALNH}{\bkmkend AAAAAAALNH}
00008 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAALNI}{\bkmkend AAAAAAALNI}
00009 \par
{\bkmkstart AAAAAAALNJ}{\bkmkend AAAAAAALNJ}
00010 {\cf21 #include "buffer.h"}\par
{\bkmkstart AAAAAAALNK}{\bkmkend AAAAAAALNK}
00011 \par
{\bkmkstart AAAAAAALNL}{\bkmkend AAAAAAALNL}
00012 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAALNM}{\bkmkend AAAAAAALNM}
00013 {\cf21 #include "softgpio.h"}\par
{\bkmkstart AAAAAAALNN}{\bkmkend AAAAAAALNN}
00014 {\cf21 #else}\par
{\bkmkstart AAAAAAALNO}{\bkmkend AAAAAAALNO}
00015 {\cf21 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAALNP}{\bkmkend AAAAAAALNP}
00016 {\cf21 #endif}\par
{\bkmkstart AAAAAAALNQ}{\bkmkend AAAAAAALNQ}
00017 \par
{\bkmkstart AAAAAAALNR}{\bkmkend AAAAAAALNR}
00018 {\cf21 #include "shared.h"}\par
{\bkmkstart AAAAAAALNS}{\bkmkend AAAAAAALNS}
00019 \par
{\bkmkstart AAAAAAALNT}{\bkmkend AAAAAAALNT}
00020 \par
{\bkmkstart AAAAAAALNU}{\bkmkend AAAAAAALNU}
00021 {\cf18 int} flag_sender_ready;\par
{\bkmkstart AAAAAAALNV}{\bkmkend AAAAAAALNV}
00022 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 sender_buffer;\par
{\bkmkstart AAAAAAALNW}{\bkmkend AAAAAAALNW}
00023 {\cf17 static} {\cf18 byte} elem;\par
{\bkmkstart AAAAAAALNX}{\bkmkend AAAAAAALNX}
00024 \par
{\bkmkstart AAAAAAALNY}{\bkmkend AAAAAAALNY}
00025 \par
{\bkmkstart AAAAAAALNZ}{\bkmkend AAAAAAALNZ}
00026 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAALOA}{\bkmkend AAAAAAALOA}
00027 {\cf18 void} SD_buffer_put({\cf18 byte} elem)   {\cf20 /*function may block process */}\par
{\bkmkstart AAAAAAALOB}{\bkmkend AAAAAAALOB}
00028 \{\par
{\bkmkstart AAAAAAALOC}{\bkmkend AAAAAAALOC}
00029     {\cf19 if}(!buffer_full(&sender_buffer))\par
{\bkmkstart AAAAAAALOD}{\bkmkend AAAAAAALOD}
00030         buffer_put(&sender_buffer, &elem);\par
{\bkmkstart AAAAAAALOE}{\bkmkend AAAAAAALOE}
00031     {\cf19 else}\par
{\bkmkstart AAAAAAALOF}{\bkmkend AAAAAAALOF}
00032     \{\par
{\bkmkstart AAAAAAALOG}{\bkmkend AAAAAAALOG}
00033         printf({\cf22 "Sender::buffer is full, please wait...\\n"});\par
{\bkmkstart AAAAAAALOH}{\bkmkend AAAAAAALOH}
00034         {\cf19 for}(;buffer_full(&sender_buffer);)\par
{\bkmkstart AAAAAAALOI}{\bkmkend AAAAAAALOI}
00035             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALOJ}{\bkmkend AAAAAAALOJ}
00036         buffer_put(&sender_buffer, &elem);\par
{\bkmkstart AAAAAAALOK}{\bkmkend AAAAAAALOK}
00037     \}\par
{\bkmkstart AAAAAAALOL}{\bkmkend AAAAAAALOL}
00038 \}\par
{\bkmkstart AAAAAAALOM}{\bkmkend AAAAAAALOM}
00039 {\cf21 #else}\par
{\bkmkstart AAAAAAALON}{\bkmkend AAAAAAALON}
00040 {\cf18 void} SD_buffer_put({\cf18 byte} elem)\par
{\bkmkstart AAAAAAALOO}{\bkmkend AAAAAAALOO}
00041 \{\par
{\bkmkstart AAAAAAALOP}{\bkmkend AAAAAAALOP}
00042     {\cf19 for}(;buffer_full(&sender_buffer);)\par
{\bkmkstart AAAAAAALOQ}{\bkmkend AAAAAAALOQ}
00043         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALOR}{\bkmkend AAAAAAALOR}
00044     buffer_put(&sender_buffer, &elem);\par
{\bkmkstart AAAAAAALOS}{\bkmkend AAAAAAALOS}
00045 \}\par
{\bkmkstart AAAAAAALOT}{\bkmkend AAAAAAALOT}
00046 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAALOU}{\bkmkend AAAAAAALOU}
00047 \par
{\bkmkstart AAAAAAALOV}{\bkmkend AAAAAAALOV}
00048 {\cf18 void} SD_print_buffer()\par
{\bkmkstart AAAAAAALOW}{\bkmkend AAAAAAALOW}
00049 \{\par
{\bkmkstart AAAAAAALOX}{\bkmkend AAAAAAALOX}
00050     printf({\cf22 "------------------\\n"});\par
{\bkmkstart AAAAAAALOY}{\bkmkend AAAAAAALOY}
00051     buffer_print(&sender_buffer);\par
{\bkmkstart AAAAAAALOZ}{\bkmkend AAAAAAALOZ}
00052     buffer_display(&sender_buffer);\par
{\bkmkstart AAAAAAALPA}{\bkmkend AAAAAAALPA}
00053     printf({\cf22 "------------------\\n"});\par
{\bkmkstart AAAAAAALPB}{\bkmkend AAAAAAALPB}
00054 \}\par
{\bkmkstart AAAAAAALPC}{\bkmkend AAAAAAALPC}
00055 \par
{\bkmkstart AAAAAAALPD}{\bkmkend AAAAAAALPD}
00056 {\cf18 void} SD_flush_buffer()\par
{\bkmkstart AAAAAAALPE}{\bkmkend AAAAAAALPE}
00057 \{\par
{\bkmkstart AAAAAAALPF}{\bkmkend AAAAAAALPF}
00058     buffer_flush(&sender_buffer);\par
{\bkmkstart AAAAAAALPG}{\bkmkend AAAAAAALPG}
00059 \}\par
{\bkmkstart AAAAAAALPH}{\bkmkend AAAAAAALPH}
00060 \par
{\bkmkstart AAAAAAALPI}{\bkmkend AAAAAAALPI}
00061 {\cf18 void} sender_init()\par
{\bkmkstart AAAAAAALPJ}{\bkmkend AAAAAAALPJ}
00062 \{\par
{\bkmkstart AAAAAAALPK}{\bkmkend AAAAAAALPK}
00063     {\cf20 /*wiringPiSetup();*/}\par
{\bkmkstart AAAAAAALPL}{\bkmkend AAAAAAALPL}
00064     wiringPiSetupGpio();\par
{\bkmkstart AAAAAAALPM}{\bkmkend AAAAAAALPM}
00065     pinMode(TX, OUTPUT);\par
{\bkmkstart AAAAAAALPN}{\bkmkend AAAAAAALPN}
00066 \par
{\bkmkstart AAAAAAALPO}{\bkmkend AAAAAAALPO}
00067 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAALPP}{\bkmkend AAAAAAALPP}
00068     printf({\cf22 "Sender::GPIO TX is ready\\n"});\par
{\bkmkstart AAAAAAALPQ}{\bkmkend AAAAAAALPQ}
00069 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAALPR}{\bkmkend AAAAAAALPR}
00070 \par
{\bkmkstart AAAAAAALPS}{\bkmkend AAAAAAALPS}
00071     buffer_init(&sender_buffer, BUFFER_SIZE);\par
{\bkmkstart AAAAAAALPT}{\bkmkend AAAAAAALPT}
00072     digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALPU}{\bkmkend AAAAAAALPU}
00073     delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALPV}{\bkmkend AAAAAAALPV}
00074     delay(BAUD_RATE); {\cf20 /* sleep for 2 bit */}\par
{\bkmkstart AAAAAAALPW}{\bkmkend AAAAAAALPW}
00075     flag_sender_ready = 1;\par
{\bkmkstart AAAAAAALPX}{\bkmkend AAAAAAALPX}
00076 \par
{\bkmkstart AAAAAAALPY}{\bkmkend AAAAAAALPY}
00077 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAALPZ}{\bkmkend AAAAAAALPZ}
00078     printf({\cf22 "Sender::sender is ready\\n"});\par
{\bkmkstart AAAAAAALQA}{\bkmkend AAAAAAALQA}
00079 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAALQB}{\bkmkend AAAAAAALQB}
00080 \par
{\bkmkstart AAAAAAALQC}{\bkmkend AAAAAAALQC}
00081 \}\par
{\bkmkstart AAAAAAALQD}{\bkmkend AAAAAAALQD}
00082 \par
{\bkmkstart AAAAAAALQE}{\bkmkend AAAAAAALQE}
00083 {\cf18 void} sender_main()\par
{\bkmkstart AAAAAAALQF}{\bkmkend AAAAAAALQF}
00084 \{\par
{\bkmkstart AAAAAAALQG}{\bkmkend AAAAAAALQG}
00085 \par
{\bkmkstart AAAAAAALQH}{\bkmkend AAAAAAALQH}
00086     sender_init();\par
{\bkmkstart AAAAAAALQI}{\bkmkend AAAAAAALQI}
00087 \par
{\bkmkstart AAAAAAALQJ}{\bkmkend AAAAAAALQJ}
00088     {\cf19 for}(;;)\par
{\bkmkstart AAAAAAALQK}{\bkmkend AAAAAAALQK}
00089     \{\par
{\bkmkstart AAAAAAALQL}{\bkmkend AAAAAAALQL}
00090         {\cf19 if}(!buffer_empty(&sender_buffer))\par
{\bkmkstart AAAAAAALQM}{\bkmkend AAAAAAALQM}
00091         \{\par
{\bkmkstart AAAAAAALQN}{\bkmkend AAAAAAALQN}
00092 \par
{\bkmkstart AAAAAAALQO}{\bkmkend AAAAAAALQO}
00093 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAALQP}{\bkmkend AAAAAAALQP}
00094             printf({\cf22 "Sender::sending...\\n"});\par
{\bkmkstart AAAAAAALQQ}{\bkmkend AAAAAAALQQ}
00095 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAALQR}{\bkmkend AAAAAAALQR}
00096 \par
{\bkmkstart AAAAAAALQS}{\bkmkend AAAAAAALQS}
00097             digitalWrite(TX, LOW);  {\cf20 /* start bit */}\par
{\bkmkstart AAAAAAALQT}{\bkmkend AAAAAAALQT}
00098             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALQU}{\bkmkend AAAAAAALQU}
00099 \par
{\bkmkstart AAAAAAALQV}{\bkmkend AAAAAAALQV}
00100             buffer_get(&sender_buffer, &elem);\par
{\bkmkstart AAAAAAALQW}{\bkmkend AAAAAAALQW}
00101 \par
{\bkmkstart AAAAAAALQX}{\bkmkend AAAAAAALQX}
00102 {\cf21 #ifdef _MSB}\par
{\bkmkstart AAAAAAALQY}{\bkmkend AAAAAAALQY}
00103             {\cf19 if}((elem >> 7) & 1)\par
{\bkmkstart AAAAAAALQZ}{\bkmkend AAAAAAALQZ}
00104                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALRA}{\bkmkend AAAAAAALRA}
00105             {\cf19 else}\par
{\bkmkstart AAAAAAALRB}{\bkmkend AAAAAAALRB}
00106                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALRC}{\bkmkend AAAAAAALRC}
00107             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALRD}{\bkmkend AAAAAAALRD}
00108 \par
{\bkmkstart AAAAAAALRE}{\bkmkend AAAAAAALRE}
00109             {\cf19 if}((elem >> 6) & 1)\par
{\bkmkstart AAAAAAALRF}{\bkmkend AAAAAAALRF}
00110                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALRG}{\bkmkend AAAAAAALRG}
00111             {\cf19 else}\par
{\bkmkstart AAAAAAALRH}{\bkmkend AAAAAAALRH}
00112                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALRI}{\bkmkend AAAAAAALRI}
00113             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALRJ}{\bkmkend AAAAAAALRJ}
00114 \par
{\bkmkstart AAAAAAALRK}{\bkmkend AAAAAAALRK}
00115             {\cf19 if}((elem >> 5) & 1)\par
{\bkmkstart AAAAAAALRL}{\bkmkend AAAAAAALRL}
00116                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALRM}{\bkmkend AAAAAAALRM}
00117             {\cf19 else}\par
{\bkmkstart AAAAAAALRN}{\bkmkend AAAAAAALRN}
00118                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALRO}{\bkmkend AAAAAAALRO}
00119             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALRP}{\bkmkend AAAAAAALRP}
00120 \par
{\bkmkstart AAAAAAALRQ}{\bkmkend AAAAAAALRQ}
00121             {\cf19 if}((elem >> 4) & 1)\par
{\bkmkstart AAAAAAALRR}{\bkmkend AAAAAAALRR}
00122                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALRS}{\bkmkend AAAAAAALRS}
00123             {\cf19 else}\par
{\bkmkstart AAAAAAALRT}{\bkmkend AAAAAAALRT}
00124                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALRU}{\bkmkend AAAAAAALRU}
00125             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALRV}{\bkmkend AAAAAAALRV}
00126 \par
{\bkmkstart AAAAAAALRW}{\bkmkend AAAAAAALRW}
00127             {\cf19 if}((elem >> 3) & 1)\par
{\bkmkstart AAAAAAALRX}{\bkmkend AAAAAAALRX}
00128                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALRY}{\bkmkend AAAAAAALRY}
00129             {\cf19 else}\par
{\bkmkstart AAAAAAALRZ}{\bkmkend AAAAAAALRZ}
00130                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALSA}{\bkmkend AAAAAAALSA}
00131             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALSB}{\bkmkend AAAAAAALSB}
00132 \par
{\bkmkstart AAAAAAALSC}{\bkmkend AAAAAAALSC}
00133             {\cf19 if}((elem >> 2) & 1)\par
{\bkmkstart AAAAAAALSD}{\bkmkend AAAAAAALSD}
00134                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALSE}{\bkmkend AAAAAAALSE}
00135             {\cf19 else}\par
{\bkmkstart AAAAAAALSF}{\bkmkend AAAAAAALSF}
00136                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALSG}{\bkmkend AAAAAAALSG}
00137             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALSH}{\bkmkend AAAAAAALSH}
00138 \par
{\bkmkstart AAAAAAALSI}{\bkmkend AAAAAAALSI}
00139             {\cf19 if}((elem >> 1) & 1)\par
{\bkmkstart AAAAAAALSJ}{\bkmkend AAAAAAALSJ}
00140                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALSK}{\bkmkend AAAAAAALSK}
00141             {\cf19 else}\par
{\bkmkstart AAAAAAALSL}{\bkmkend AAAAAAALSL}
00142                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALSM}{\bkmkend AAAAAAALSM}
00143             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALSN}{\bkmkend AAAAAAALSN}
00144 \par
{\bkmkstart AAAAAAALSO}{\bkmkend AAAAAAALSO}
00145             {\cf19 if}(elem & 1)\par
{\bkmkstart AAAAAAALSP}{\bkmkend AAAAAAALSP}
00146                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALSQ}{\bkmkend AAAAAAALSQ}
00147             {\cf19 else}\par
{\bkmkstart AAAAAAALSR}{\bkmkend AAAAAAALSR}
00148                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALSS}{\bkmkend AAAAAAALSS}
00149             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALST}{\bkmkend AAAAAAALST}
00150 {\cf21 #else}\par
{\bkmkstart AAAAAAALSU}{\bkmkend AAAAAAALSU}
00151             {\cf19 if}(elem & 1)\par
{\bkmkstart AAAAAAALSV}{\bkmkend AAAAAAALSV}
00152                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALSW}{\bkmkend AAAAAAALSW}
00153             {\cf19 else}\par
{\bkmkstart AAAAAAALSX}{\bkmkend AAAAAAALSX}
00154                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALSY}{\bkmkend AAAAAAALSY}
00155             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALSZ}{\bkmkend AAAAAAALSZ}
00156 \par
{\bkmkstart AAAAAAALTA}{\bkmkend AAAAAAALTA}
00157             {\cf19 if}((elem >> 1) & 1)\par
{\bkmkstart AAAAAAALTB}{\bkmkend AAAAAAALTB}
00158                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALTC}{\bkmkend AAAAAAALTC}
00159             {\cf19 else}\par
{\bkmkstart AAAAAAALTD}{\bkmkend AAAAAAALTD}
00160                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALTE}{\bkmkend AAAAAAALTE}
00161             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALTF}{\bkmkend AAAAAAALTF}
00162 \par
{\bkmkstart AAAAAAALTG}{\bkmkend AAAAAAALTG}
00163             {\cf19 if}((elem >> 2) & 1)\par
{\bkmkstart AAAAAAALTH}{\bkmkend AAAAAAALTH}
00164                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALTI}{\bkmkend AAAAAAALTI}
00165             {\cf19 else}\par
{\bkmkstart AAAAAAALTJ}{\bkmkend AAAAAAALTJ}
00166                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALTK}{\bkmkend AAAAAAALTK}
00167             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALTL}{\bkmkend AAAAAAALTL}
00168 \par
{\bkmkstart AAAAAAALTM}{\bkmkend AAAAAAALTM}
00169             {\cf19 if}((elem >> 3) & 1)\par
{\bkmkstart AAAAAAALTN}{\bkmkend AAAAAAALTN}
00170                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALTO}{\bkmkend AAAAAAALTO}
00171             {\cf19 else}\par
{\bkmkstart AAAAAAALTP}{\bkmkend AAAAAAALTP}
00172                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALTQ}{\bkmkend AAAAAAALTQ}
00173             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALTR}{\bkmkend AAAAAAALTR}
00174 \par
{\bkmkstart AAAAAAALTS}{\bkmkend AAAAAAALTS}
00175             {\cf19 if}((elem >> 4) & 1)\par
{\bkmkstart AAAAAAALTT}{\bkmkend AAAAAAALTT}
00176                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALTU}{\bkmkend AAAAAAALTU}
00177             {\cf19 else}\par
{\bkmkstart AAAAAAALTV}{\bkmkend AAAAAAALTV}
00178                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALTW}{\bkmkend AAAAAAALTW}
00179             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALTX}{\bkmkend AAAAAAALTX}
00180 \par
{\bkmkstart AAAAAAALTY}{\bkmkend AAAAAAALTY}
00181             {\cf19 if}((elem >> 5) & 1)\par
{\bkmkstart AAAAAAALTZ}{\bkmkend AAAAAAALTZ}
00182                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALUA}{\bkmkend AAAAAAALUA}
00183             {\cf19 else}\par
{\bkmkstart AAAAAAALUB}{\bkmkend AAAAAAALUB}
00184                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALUC}{\bkmkend AAAAAAALUC}
00185             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALUD}{\bkmkend AAAAAAALUD}
00186 \par
{\bkmkstart AAAAAAALUE}{\bkmkend AAAAAAALUE}
00187             {\cf19 if}((elem >> 6) & 1)\par
{\bkmkstart AAAAAAALUF}{\bkmkend AAAAAAALUF}
00188                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALUG}{\bkmkend AAAAAAALUG}
00189             {\cf19 else}\par
{\bkmkstart AAAAAAALUH}{\bkmkend AAAAAAALUH}
00190                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALUI}{\bkmkend AAAAAAALUI}
00191             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALUJ}{\bkmkend AAAAAAALUJ}
00192 \par
{\bkmkstart AAAAAAALUK}{\bkmkend AAAAAAALUK}
00193             {\cf19 if}((elem >> 7) & 1)\par
{\bkmkstart AAAAAAALUL}{\bkmkend AAAAAAALUL}
00194                 digitalWrite(TX, HIGH);\par
{\bkmkstart AAAAAAALUM}{\bkmkend AAAAAAALUM}
00195             {\cf19 else}\par
{\bkmkstart AAAAAAALUN}{\bkmkend AAAAAAALUN}
00196                 digitalWrite(TX, LOW);\par
{\bkmkstart AAAAAAALUO}{\bkmkend AAAAAAALUO}
00197             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALUP}{\bkmkend AAAAAAALUP}
00198 {\cf21 #endif  }{\cf20 /* _MSB */}{\cf21 }\par
{\bkmkstart AAAAAAALUQ}{\bkmkend AAAAAAALUQ}
00199 \par
{\bkmkstart AAAAAAALUR}{\bkmkend AAAAAAALUR}
00200             digitalWrite(TX, HIGH); {\cf20 /*stop bit*/}\par
{\bkmkstart AAAAAAALUS}{\bkmkend AAAAAAALUS}
00201             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALUT}{\bkmkend AAAAAAALUT}
00202 \par
{\bkmkstart AAAAAAALUU}{\bkmkend AAAAAAALUU}
00203             delay(BAUD_RATE);   {\cf20 /* optional */}\par
{\bkmkstart AAAAAAALUV}{\bkmkend AAAAAAALUV}
00204 \par
{\bkmkstart AAAAAAALUW}{\bkmkend AAAAAAALUW}
00205 {\cf21 #ifdef _SLOW}\par
{\bkmkstart AAAAAAALUX}{\bkmkend AAAAAAALUX}
00206             delay(BAUD_RATE * 11);\par
{\bkmkstart AAAAAAALUY}{\bkmkend AAAAAAALUY}
00207 {\cf21 #endif }{\cf20 /*// _SLOW*/}{\cf21 }\par
{\bkmkstart AAAAAAALUZ}{\bkmkend AAAAAAALUZ}
00208 \par
{\bkmkstart AAAAAAALVA}{\bkmkend AAAAAAALVA}
00209 {\cf21 #ifdef _SLOWX2}\par
{\bkmkstart AAAAAAALVB}{\bkmkend AAAAAAALVB}
00210             delay(BAUD_RATE * 22);\par
{\bkmkstart AAAAAAALVC}{\bkmkend AAAAAAALVC}
00211 {\cf21 #endif }{\cf20 /*// _SLOWX2*/}{\cf21 }\par
{\bkmkstart AAAAAAALVD}{\bkmkend AAAAAAALVD}
00212 \par
{\bkmkstart AAAAAAALVE}{\bkmkend AAAAAAALVE}
00213         \}\par
{\bkmkstart AAAAAAALVF}{\bkmkend AAAAAAALVF}
00214 \par
{\bkmkstart AAAAAAALVG}{\bkmkend AAAAAAALVG}
00215         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALVH}{\bkmkend AAAAAAALVH}
00216     \}\par
{\bkmkstart AAAAAAALVI}{\bkmkend AAAAAAALVI}
00217 \par
{\bkmkstart AAAAAAALVJ}{\bkmkend AAAAAAALVJ}
00218 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
server.c\par \pard\plain 
{\bkmkstart AAAAAAALVK}
{\bkmkend AAAAAAALVK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAALVL}{\bkmkend AAAAAAALVL}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAALVM}{\bkmkend AAAAAAALVM}
00002 {\cf20 }\par
{\bkmkstart AAAAAAALVN}{\bkmkend AAAAAAALVN}
00003 {\cf20 ===== server.c ========================================================}\par
{\bkmkstart AAAAAAALVO}{\bkmkend AAAAAAALVO}
00004 {\cf20 }\par
{\bkmkstart AAAAAAALVP}{\bkmkend AAAAAAALVP}
00005 {\cf20 */}\par
{\bkmkstart AAAAAAALVQ}{\bkmkend AAAAAAALVQ}
00006 \par
{\bkmkstart AAAAAAALVR}{\bkmkend AAAAAAALVR}
00007 \par
{\bkmkstart AAAAAAALVS}{\bkmkend AAAAAAALVS}
00008 {\cf21 #include <stdio.h>}\par
{\bkmkstart AAAAAAALVT}{\bkmkend AAAAAAALVT}
00009 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAALVU}{\bkmkend AAAAAAALVU}
00010 {\cf21 #include <string.h>}\par
{\bkmkstart AAAAAAALVV}{\bkmkend AAAAAAALVV}
00011 \par
{\bkmkstart AAAAAAALVW}{\bkmkend AAAAAAALVW}
00012 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAALVX}{\bkmkend AAAAAAALVX}
00013 {\cf21 #include "softgpio.h"}\par
{\bkmkstart AAAAAAALVY}{\bkmkend AAAAAAALVY}
00014 {\cf21 #else}\par
{\bkmkstart AAAAAAALVZ}{\bkmkend AAAAAAALVZ}
00015 {\cf21 #include <wiringPi.h>}\par
{\bkmkstart AAAAAAALWA}{\bkmkend AAAAAAALWA}
00016 {\cf21 #endif}\par
{\bkmkstart AAAAAAALWB}{\bkmkend AAAAAAALWB}
00017 \par
{\bkmkstart AAAAAAALWC}{\bkmkend AAAAAAALWC}
00018 {\cf21 #include "shared.h"}\par
{\bkmkstart AAAAAAALWD}{\bkmkend AAAAAAALWD}
00019 {\cf21 #include "client.h"}\par
{\bkmkstart AAAAAAALWE}{\bkmkend AAAAAAALWE}
00020 \par
{\bkmkstart AAAAAAALWF}{\bkmkend AAAAAAALWF}
00021 {\cf21 #include "server.h"}\par
{\bkmkstart AAAAAAALWG}{\bkmkend AAAAAAALWG}
00022 \par
{\bkmkstart AAAAAAALWH}{\bkmkend AAAAAAALWH}
00023 \par
{\bkmkstart AAAAAAALWI}{\bkmkend AAAAAAALWI}
00024 {\cf18 int} flag_server_ready;\par
{\bkmkstart AAAAAAALWJ}{\bkmkend AAAAAAALWJ}
00025 {\cf18 int} flag_server_isdumping;\par
{\bkmkstart AAAAAAALWK}{\bkmkend AAAAAAALWK}
00026 {\cf17 static} {\cf18 int} server_resend_count;\par
{\bkmkstart AAAAAAALWL}{\bkmkend AAAAAAALWL}
00027 \par
{\bkmkstart AAAAAAALWM}{\bkmkend AAAAAAALWM}
00028 {\cf17 static} {\cf18 char} server_msg_buffer[MAX_MSG_LENGTH + 1];\par
{\bkmkstart AAAAAAALWN}{\bkmkend AAAAAAALWN}
00029 \par
{\bkmkstart AAAAAAALWO}{\bkmkend AAAAAAALWO}
00030 \par
{\bkmkstart AAAAAAALWP}{\bkmkend AAAAAAALWP}
00031 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAALWQ}{\bkmkend AAAAAAALWQ}
00032 {\cf18 void} SV_insert_msg ( {\cf18 unsigned} {\cf18 char} *msg )   {\cf20 /*function may block process */}\par
{\bkmkstart AAAAAAALWR}{\bkmkend AAAAAAALWR}
00033 \{\par
{\bkmkstart AAAAAAALWS}{\bkmkend AAAAAAALWS}
00034     {\cf19 if}(strlen(msg) > MAX_MSG_LENGTH)\par
{\bkmkstart AAAAAAALWT}{\bkmkend AAAAAAALWT}
00035     \{\par
{\bkmkstart AAAAAAALWU}{\bkmkend AAAAAAALWU}
00036         printf({\cf22 "Server::max message length exceeded, aborted!\\n"});\par
{\bkmkstart AAAAAAALWV}{\bkmkend AAAAAAALWV}
00037         {\cf19 return};\par
{\bkmkstart AAAAAAALWW}{\bkmkend AAAAAAALWW}
00038     \}\par
{\bkmkstart AAAAAAALWX}{\bkmkend AAAAAAALWX}
00039     {\cf19 if}(flag_server_ready)\par
{\bkmkstart AAAAAAALWY}{\bkmkend AAAAAAALWY}
00040         strcpy(server_msg_buffer, msg);\par
{\bkmkstart AAAAAAALWZ}{\bkmkend AAAAAAALWZ}
00041     {\cf19 else}\par
{\bkmkstart AAAAAAALXA}{\bkmkend AAAAAAALXA}
00042     \{\par
{\bkmkstart AAAAAAALXB}{\bkmkend AAAAAAALXB}
00043         printf({\cf22 "Server::server is busy, please wait...\\n"});\par
{\bkmkstart AAAAAAALXC}{\bkmkend AAAAAAALXC}
00044         {\cf19 for}(; !flag_server_ready;)\par
{\bkmkstart AAAAAAALXD}{\bkmkend AAAAAAALXD}
00045             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALXE}{\bkmkend AAAAAAALXE}
00046         strcpy(server_msg_buffer, msg);\par
{\bkmkstart AAAAAAALXF}{\bkmkend AAAAAAALXF}
00047     \}\par
{\bkmkstart AAAAAAALXG}{\bkmkend AAAAAAALXG}
00048 \}\par
{\bkmkstart AAAAAAALXH}{\bkmkend AAAAAAALXH}
00049 {\cf21 #else}\par
{\bkmkstart AAAAAAALXI}{\bkmkend AAAAAAALXI}
00050 {\cf18 void} SV_insert_msg ( {\cf18 unsigned} {\cf18 char} *msg )\par
{\bkmkstart AAAAAAALXJ}{\bkmkend AAAAAAALXJ}
00051 \{\par
{\bkmkstart AAAAAAALXK}{\bkmkend AAAAAAALXK}
00052     {\cf19 if}(strlen(msg) > MAX_MSG_LENGTH)\par
{\bkmkstart AAAAAAALXL}{\bkmkend AAAAAAALXL}
00053         {\cf19 return};\par
{\bkmkstart AAAAAAALXM}{\bkmkend AAAAAAALXM}
00054     {\cf19 for}(; !flag_server_ready;)\par
{\bkmkstart AAAAAAALXN}{\bkmkend AAAAAAALXN}
00055         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALXO}{\bkmkend AAAAAAALXO}
00056     strcpy(server_msg_buffer, msg);\par
{\bkmkstart AAAAAAALXP}{\bkmkend AAAAAAALXP}
00057 \}\par
{\bkmkstart AAAAAAALXQ}{\bkmkend AAAAAAALXQ}
00058 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAALXR}{\bkmkend AAAAAAALXR}
00059 \par
{\bkmkstart AAAAAAALXS}{\bkmkend AAAAAAALXS}
00060 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAALXT}{\bkmkend AAAAAAALXT}
00061 {\cf18 int} SV_insert_msg_nb ( {\cf18 unsigned} {\cf18 char} *msg )\par
{\bkmkstart AAAAAAALXU}{\bkmkend AAAAAAALXU}
00062 \{\par
{\bkmkstart AAAAAAALXV}{\bkmkend AAAAAAALXV}
00063     {\cf19 if}(strlen(msg) > MAX_MSG_LENGTH)\par
{\bkmkstart AAAAAAALXW}{\bkmkend AAAAAAALXW}
00064     \{\par
{\bkmkstart AAAAAAALXX}{\bkmkend AAAAAAALXX}
00065         printf({\cf22 "Server::max message length exceeded, aborted!\\n"});\par
{\bkmkstart AAAAAAALXY}{\bkmkend AAAAAAALXY}
00066         {\cf19 return} -2;\par
{\bkmkstart AAAAAAALXZ}{\bkmkend AAAAAAALXZ}
00067     \}\par
{\bkmkstart AAAAAAALYA}{\bkmkend AAAAAAALYA}
00068     {\cf19 if}(flag_server_ready)\par
{\bkmkstart AAAAAAALYB}{\bkmkend AAAAAAALYB}
00069     \{\par
{\bkmkstart AAAAAAALYC}{\bkmkend AAAAAAALYC}
00070         strcpy(server_msg_buffer, msg);\par
{\bkmkstart AAAAAAALYD}{\bkmkend AAAAAAALYD}
00071         {\cf19 return} 0;\par
{\bkmkstart AAAAAAALYE}{\bkmkend AAAAAAALYE}
00072     \}\par
{\bkmkstart AAAAAAALYF}{\bkmkend AAAAAAALYF}
00073     {\cf19 else}\par
{\bkmkstart AAAAAAALYG}{\bkmkend AAAAAAALYG}
00074     \{\par
{\bkmkstart AAAAAAALYH}{\bkmkend AAAAAAALYH}
00075         printf({\cf22 "Server::server is busy, please wait...\\n"});\par
{\bkmkstart AAAAAAALYI}{\bkmkend AAAAAAALYI}
00076         {\cf19 return} -1;\par
{\bkmkstart AAAAAAALYJ}{\bkmkend AAAAAAALYJ}
00077     \}\par
{\bkmkstart AAAAAAALYK}{\bkmkend AAAAAAALYK}
00078 \}\par
{\bkmkstart AAAAAAALYL}{\bkmkend AAAAAAALYL}
00079 {\cf21 #else}\par
{\bkmkstart AAAAAAALYM}{\bkmkend AAAAAAALYM}
00080 {\cf18 int} SV_insert_msg_nb ( {\cf18 unsigned} {\cf18 char} *msg )\par
{\bkmkstart AAAAAAALYN}{\bkmkend AAAAAAALYN}
00081 \{\par
{\bkmkstart AAAAAAALYO}{\bkmkend AAAAAAALYO}
00082     {\cf19 if}(strlen(msg) > MAX_MSG_LENGTH)\par
{\bkmkstart AAAAAAALYP}{\bkmkend AAAAAAALYP}
00083         {\cf19 return} -2;\par
{\bkmkstart AAAAAAALYQ}{\bkmkend AAAAAAALYQ}
00084     {\cf19 if}(flag_server_ready)\par
{\bkmkstart AAAAAAALYR}{\bkmkend AAAAAAALYR}
00085     \{\par
{\bkmkstart AAAAAAALYS}{\bkmkend AAAAAAALYS}
00086         strcpy(server_msg_buffer, msg);\par
{\bkmkstart AAAAAAALYT}{\bkmkend AAAAAAALYT}
00087         {\cf19 return} 0;\par
{\bkmkstart AAAAAAALYU}{\bkmkend AAAAAAALYU}
00088     \}\par
{\bkmkstart AAAAAAALYV}{\bkmkend AAAAAAALYV}
00089     {\cf19 else}\par
{\bkmkstart AAAAAAALYW}{\bkmkend AAAAAAALYW}
00090         {\cf19 return} -1;\par
{\bkmkstart AAAAAAALYX}{\bkmkend AAAAAAALYX}
00091 \}\par
{\bkmkstart AAAAAAALYY}{\bkmkend AAAAAAALYY}
00092 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAALYZ}{\bkmkend AAAAAAALYZ}
00093 \par
{\bkmkstart AAAAAAALZA}{\bkmkend AAAAAAALZA}
00094 {\cf18 void} server_main ( {\cf18 void} )\par
{\bkmkstart AAAAAAALZB}{\bkmkend AAAAAAALZB}
00095 \{\par
{\bkmkstart AAAAAAALZC}{\bkmkend AAAAAAALZC}
00096 \par
{\bkmkstart AAAAAAALZD}{\bkmkend AAAAAAALZD}
00097     {\cf18 byte} server_pak[BUFFER_SIZE + 1];\par
{\bkmkstart AAAAAAALZE}{\bkmkend AAAAAAALZE}
00098 \par
{\bkmkstart AAAAAAALZF}{\bkmkend AAAAAAALZF}
00099     {\cf18 byte} *pak_data_length = &server_pak[1];\par
{\bkmkstart AAAAAAALZG}{\bkmkend AAAAAAALZG}
00100     {\cf18 byte} *pak_data = &server_pak[2];\par
{\bkmkstart AAAAAAALZH}{\bkmkend AAAAAAALZH}
00101     {\cf18 unsigned} {\cf18 short} *pak_crc;\par
{\bkmkstart AAAAAAALZI}{\bkmkend AAAAAAALZI}
00102     {\cf18 byte} *pak_crc_byte;\par
{\bkmkstart AAAAAAALZJ}{\bkmkend AAAAAAALZJ}
00103     {\cf18 byte} *pak_end;\par
{\bkmkstart AAAAAAALZK}{\bkmkend AAAAAAALZK}
00104 \par
{\bkmkstart AAAAAAALZL}{\bkmkend AAAAAAALZL}
00105     {\cf18 int} i;\par
{\bkmkstart AAAAAAALZM}{\bkmkend AAAAAAALZM}
00106     {\cf18 unsigned} {\cf18 short} crcvalue;\par
{\bkmkstart AAAAAAALZN}{\bkmkend AAAAAAALZN}
00107 \par
{\bkmkstart AAAAAAALZO}{\bkmkend AAAAAAALZO}
00108     server_pak[0] = 0;  {\cf20 /* start bit */}\par
{\bkmkstart AAAAAAALZP}{\bkmkend AAAAAAALZP}
00109 \par
{\bkmkstart AAAAAAALZQ}{\bkmkend AAAAAAALZQ}
00110 \par
{\bkmkstart AAAAAAALZR}{\bkmkend AAAAAAALZR}
00111     {\cf19 for}(; !flag_sender_ready || !flag_receiver_ready;)\par
{\bkmkstart AAAAAAALZS}{\bkmkend AAAAAAALZS}
00112         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAALZT}{\bkmkend AAAAAAALZT}
00113     SD_flush_buffer();\par
{\bkmkstart AAAAAAALZU}{\bkmkend AAAAAAALZU}
00114     flag_server_ready = 1;\par
{\bkmkstart AAAAAAALZV}{\bkmkend AAAAAAALZV}
00115 \par
{\bkmkstart AAAAAAALZW}{\bkmkend AAAAAAALZW}
00116 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAALZX}{\bkmkend AAAAAAALZX}
00117             printf({\cf22 "Server::server is ready\\n"});\par
{\bkmkstart AAAAAAALZY}{\bkmkend AAAAAAALZY}
00118 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAALZZ}{\bkmkend AAAAAAALZZ}
00119 \par
{\bkmkstart AAAAAAAMAA}{\bkmkend AAAAAAAMAA}
00120     {\cf19 for}(;;)\par
{\bkmkstart AAAAAAAMAB}{\bkmkend AAAAAAAMAB}
00121     \{\par
{\bkmkstart AAAAAAAMAC}{\bkmkend AAAAAAAMAC}
00122         {\cf19 if}(server_msg_buffer[0]!={\cf23 '\\0'})\par
{\bkmkstart AAAAAAAMAD}{\bkmkend AAAAAAAMAD}
00123         \{\par
{\bkmkstart AAAAAAAMAE}{\bkmkend AAAAAAAMAE}
00124             flag_server_ready = 0;\par
{\bkmkstart AAAAAAAMAF}{\bkmkend AAAAAAAMAF}
00125 \par
{\bkmkstart AAAAAAAMAG}{\bkmkend AAAAAAAMAG}
00126             {\cf19 for}(i=0; server_msg_buffer[i]!={\cf23 '\\0'} && i<MAX_MSG_LENGTH + 1; i++)\par
{\bkmkstart AAAAAAAMAH}{\bkmkend AAAAAAAMAH}
00127                 pak_data[i] = server_msg_buffer[i];\par
{\bkmkstart AAAAAAAMAI}{\bkmkend AAAAAAAMAI}
00128 \par
{\bkmkstart AAAAAAAMAJ}{\bkmkend AAAAAAAMAJ}
00129             server_msg_buffer[0]={\cf23 '\\0'};\par
{\bkmkstart AAAAAAAMAK}{\bkmkend AAAAAAAMAK}
00130             *pak_data_length = i;\par
{\bkmkstart AAAAAAAMAL}{\bkmkend AAAAAAAMAL}
00131             pak_crc = ({\cf18 unsigned} {\cf18 short} *) &pak_data[i];\par
{\bkmkstart AAAAAAAMAM}{\bkmkend AAAAAAAMAM}
00132             pak_crc_byte = &pak_data[i];\par
{\bkmkstart AAAAAAAMAN}{\bkmkend AAAAAAAMAN}
00133             pak_end = &pak_data[i+2];\par
{\bkmkstart AAAAAAAMAO}{\bkmkend AAAAAAAMAO}
00134             pak_end[0] = {\cf23 '\\0'};\par
{\bkmkstart AAAAAAAMAP}{\bkmkend AAAAAAAMAP}
00135 \par
{\bkmkstart AAAAAAAMAQ}{\bkmkend AAAAAAAMAQ}
00136             CRC_Init(&crcvalue);\par
{\bkmkstart AAAAAAAMAR}{\bkmkend AAAAAAAMAR}
00137             {\cf19 for}(i=0; i<*pak_data_length; i++) {\cf20 /* crc16 CCITT_FALSE */}\par
{\bkmkstart AAAAAAAMAS}{\bkmkend AAAAAAAMAS}
00138                 CRC_ProcessByte(&crcvalue, pak_data[i]);\par
{\bkmkstart AAAAAAAMAT}{\bkmkend AAAAAAAMAT}
00139             *pak_crc = CRC_Value(crcvalue);\par
{\bkmkstart AAAAAAAMAU}{\bkmkend AAAAAAAMAU}
00140 \par
{\bkmkstart AAAAAAAMAV}{\bkmkend AAAAAAAMAV}
00141 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAMAW}{\bkmkend AAAAAAAMAW}
00142             printf({\cf22 "Server::ready to send packet:"});\par
{\bkmkstart AAAAAAAMAX}{\bkmkend AAAAAAAMAX}
00143             {\cf19 for}(i=0; i<*pak_data_length + 4; i++)\par
{\bkmkstart AAAAAAAMAY}{\bkmkend AAAAAAAMAY}
00144             \{\par
{\bkmkstart AAAAAAAMAZ}{\bkmkend AAAAAAAMAZ}
00145                 printf({\cf22 "%d "}, server_pak[i]);\par
{\bkmkstart AAAAAAAMBA}{\bkmkend AAAAAAAMBA}
00146             \}\par
{\bkmkstart AAAAAAAMBB}{\bkmkend AAAAAAAMBB}
00147             printf({\cf22 "\\n"});\par
{\bkmkstart AAAAAAAMBC}{\bkmkend AAAAAAAMBC}
00148 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAMBD}{\bkmkend AAAAAAAMBD}
00149 \par
{\bkmkstart AAAAAAAMBE}{\bkmkend AAAAAAAMBE}
00150             {\cf19 for}(; flag_client_isdumping;)\par
{\bkmkstart AAAAAAAMBF}{\bkmkend AAAAAAAMBF}
00151                 delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAMBG}{\bkmkend AAAAAAAMBG}
00152 \par
{\bkmkstart AAAAAAAMBH}{\bkmkend AAAAAAAMBH}
00153             flag_server_isdumping = 1;\par
{\bkmkstart AAAAAAAMBI}{\bkmkend AAAAAAAMBI}
00154             {\cf19 for}(i=0; i<*pak_data_length + 4; i++)\par
{\bkmkstart AAAAAAAMBJ}{\bkmkend AAAAAAAMBJ}
00155                 SD_buffer_put(server_pak[i]);\par
{\bkmkstart AAAAAAAMBK}{\bkmkend AAAAAAAMBK}
00156             flag_server_isdumping = 0;\par
{\bkmkstart AAAAAAAMBL}{\bkmkend AAAAAAAMBL}
00157 \par
{\bkmkstart AAAAAAAMBM}{\bkmkend AAAAAAAMBM}
00158 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAMBN}{\bkmkend AAAAAAAMBN}
00159             printf({\cf22 "Server::sending packet...\\n"});\par
{\bkmkstart AAAAAAAMBO}{\bkmkend AAAAAAAMBO}
00160 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAMBP}{\bkmkend AAAAAAAMBP}
00161 \par
{\bkmkstart AAAAAAAMBQ}{\bkmkend AAAAAAAMBQ}
00162             {\cf19 for}(; !flag_server_ready;)\par
{\bkmkstart AAAAAAAMBR}{\bkmkend AAAAAAAMBR}
00163             \{\par
{\bkmkstart AAAAAAAMBS}{\bkmkend AAAAAAAMBS}
00164                 {\cf19 for}(i=0; i<MAX_WAIT_TIMES; i++,delay(BAUD_RATE))  {\cf20 /* fix me */}\par
{\bkmkstart AAAAAAAMBT}{\bkmkend AAAAAAAMBT}
00165                     {\cf19 if}(flag_client_get_ack)\par
{\bkmkstart AAAAAAAMBU}{\bkmkend AAAAAAAMBU}
00166                     \{\par
{\bkmkstart AAAAAAAMBV}{\bkmkend AAAAAAAMBV}
00167                         {\cf19 if}((client_crc16[0] == pak_crc_byte[0] && client_crc16[1] == pak_crc_byte[1]) || (client_crc16[0] == pak_crc_byte[1] && client_crc16[1] == pak_crc_byte[0]))\par
{\bkmkstart AAAAAAAMBW}{\bkmkend AAAAAAAMBW}
00168                         \{\par
{\bkmkstart AAAAAAAMBX}{\bkmkend AAAAAAAMBX}
00169                             printf({\cf22 "Server::ACK packet received\\nServer::message sent successfully\\n"});\par
{\bkmkstart AAAAAAAMBY}{\bkmkend AAAAAAAMBY}
00170                             server_resend_count = 0;\par
{\bkmkstart AAAAAAAMBZ}{\bkmkend AAAAAAAMBZ}
00171                             flag_server_ready = 1;\par
{\bkmkstart AAAAAAAMCA}{\bkmkend AAAAAAAMCA}
00172                             {\cf19 break};\par
{\bkmkstart AAAAAAAMCB}{\bkmkend AAAAAAAMCB}
00173                         \}\par
{\bkmkstart AAAAAAAMCC}{\bkmkend AAAAAAAMCC}
00174                         {\cf19 else}\par
{\bkmkstart AAAAAAAMCD}{\bkmkend AAAAAAAMCD}
00175                         \{\par
{\bkmkstart AAAAAAAMCE}{\bkmkend AAAAAAAMCE}
00176                             printf({\cf22 "Server::ACK packet CRC16 failed, resending...\\n"});\par
{\bkmkstart AAAAAAAMCF}{\bkmkend AAAAAAAMCF}
00177                             {\cf19 if}(server_resend_count == 2)\par
{\bkmkstart AAAAAAAMCG}{\bkmkend AAAAAAAMCG}
00178                             \{\par
{\bkmkstart AAAAAAAMCH}{\bkmkend AAAAAAAMCH}
00179                                 printf({\cf22 "Server::second resend failed, aborted!\\n"});\par
{\bkmkstart AAAAAAAMCI}{\bkmkend AAAAAAAMCI}
00180                                 flag_server_ready = 1;\par
{\bkmkstart AAAAAAAMCJ}{\bkmkend AAAAAAAMCJ}
00181                                 server_resend_count = 0;\par
{\bkmkstart AAAAAAAMCK}{\bkmkend AAAAAAAMCK}
00182                                 {\cf19 break};\par
{\bkmkstart AAAAAAAMCL}{\bkmkend AAAAAAAMCL}
00183                             \}\par
{\bkmkstart AAAAAAAMCM}{\bkmkend AAAAAAAMCM}
00184                             server_resend_count++;\par
{\bkmkstart AAAAAAAMCN}{\bkmkend AAAAAAAMCN}
00185                             {\cf19 for}(; flag_client_isdumping;)\par
{\bkmkstart AAAAAAAMCO}{\bkmkend AAAAAAAMCO}
00186                                 delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAMCP}{\bkmkend AAAAAAAMCP}
00187 \par
{\bkmkstart AAAAAAAMCQ}{\bkmkend AAAAAAAMCQ}
00188                             flag_server_isdumping = 1;\par
{\bkmkstart AAAAAAAMCR}{\bkmkend AAAAAAAMCR}
00189                             {\cf19 for}(i=0; i<*pak_data_length + 4; i++)\par
{\bkmkstart AAAAAAAMCS}{\bkmkend AAAAAAAMCS}
00190                                 SD_buffer_put(server_pak[i]);\par
{\bkmkstart AAAAAAAMCT}{\bkmkend AAAAAAAMCT}
00191                             flag_server_isdumping = 0;\par
{\bkmkstart AAAAAAAMCU}{\bkmkend AAAAAAAMCU}
00192 \par
{\bkmkstart AAAAAAAMCV}{\bkmkend AAAAAAAMCV}
00193                             {\cf19 break};\par
{\bkmkstart AAAAAAAMCW}{\bkmkend AAAAAAAMCW}
00194                         \}\par
{\bkmkstart AAAAAAAMCX}{\bkmkend AAAAAAAMCX}
00195                     \}\par
{\bkmkstart AAAAAAAMCY}{\bkmkend AAAAAAAMCY}
00196 \par
{\bkmkstart AAAAAAAMCZ}{\bkmkend AAAAAAAMCZ}
00197                 {\cf19 if}(!flag_client_get_ack)\par
{\bkmkstart AAAAAAAMDA}{\bkmkend AAAAAAAMDA}
00198                 \{\par
{\bkmkstart AAAAAAAMDB}{\bkmkend AAAAAAAMDB}
00199                         printf({\cf22 "Server::ACK timeout, resending...\\n"});\par
{\bkmkstart AAAAAAAMDC}{\bkmkend AAAAAAAMDC}
00200                         {\cf19 if}(server_resend_count == 2)\par
{\bkmkstart AAAAAAAMDD}{\bkmkend AAAAAAAMDD}
00201                         \{\par
{\bkmkstart AAAAAAAMDE}{\bkmkend AAAAAAAMDE}
00202                             printf({\cf22 "Server::second resend failed, aborted!\\n"});\par
{\bkmkstart AAAAAAAMDF}{\bkmkend AAAAAAAMDF}
00203                             flag_server_ready = 1;\par
{\bkmkstart AAAAAAAMDG}{\bkmkend AAAAAAAMDG}
00204                             server_resend_count = 0;\par
{\bkmkstart AAAAAAAMDH}{\bkmkend AAAAAAAMDH}
00205                             {\cf19 break};\par
{\bkmkstart AAAAAAAMDI}{\bkmkend AAAAAAAMDI}
00206                         \}\par
{\bkmkstart AAAAAAAMDJ}{\bkmkend AAAAAAAMDJ}
00207                         server_resend_count++;\par
{\bkmkstart AAAAAAAMDK}{\bkmkend AAAAAAAMDK}
00208                         {\cf19 for}(; flag_client_isdumping;)\par
{\bkmkstart AAAAAAAMDL}{\bkmkend AAAAAAAMDL}
00209                             delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAMDM}{\bkmkend AAAAAAAMDM}
00210 \par
{\bkmkstart AAAAAAAMDN}{\bkmkend AAAAAAAMDN}
00211                         flag_server_isdumping = 1;\par
{\bkmkstart AAAAAAAMDO}{\bkmkend AAAAAAAMDO}
00212                         {\cf19 for}(i=0; i<*pak_data_length + 4; i++)\par
{\bkmkstart AAAAAAAMDP}{\bkmkend AAAAAAAMDP}
00213                             SD_buffer_put(server_pak[i]);\par
{\bkmkstart AAAAAAAMDQ}{\bkmkend AAAAAAAMDQ}
00214                         flag_server_isdumping = 0;\par
{\bkmkstart AAAAAAAMDR}{\bkmkend AAAAAAAMDR}
00215                 \}\par
{\bkmkstart AAAAAAAMDS}{\bkmkend AAAAAAAMDS}
00216 \par
{\bkmkstart AAAAAAAMDT}{\bkmkend AAAAAAAMDT}
00217                 flag_client_get_ack = 0;\par
{\bkmkstart AAAAAAAMDU}{\bkmkend AAAAAAAMDU}
00218             \}\par
{\bkmkstart AAAAAAAMDV}{\bkmkend AAAAAAAMDV}
00219 \par
{\bkmkstart AAAAAAAMDW}{\bkmkend AAAAAAAMDW}
00220 {\cf21 #ifdef _DEBUG}\par
{\bkmkstart AAAAAAAMDX}{\bkmkend AAAAAAAMDX}
00221             printf({\cf22 "Server::server is ready\\n"});\par
{\bkmkstart AAAAAAAMDY}{\bkmkend AAAAAAAMDY}
00222 {\cf21 #endif }{\cf20 /*// _DEBUG*/}{\cf21 }\par
{\bkmkstart AAAAAAAMDZ}{\bkmkend AAAAAAAMDZ}
00223 \par
{\bkmkstart AAAAAAAMEA}{\bkmkend AAAAAAAMEA}
00224         \}\par
{\bkmkstart AAAAAAAMEB}{\bkmkend AAAAAAAMEB}
00225         delay(BAUD_RATE);\par
{\bkmkstart AAAAAAAMEC}{\bkmkend AAAAAAAMEC}
00226     \}\par
{\bkmkstart AAAAAAAMED}{\bkmkend AAAAAAAMED}
00227 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
server.h\par \pard\plain 
{\bkmkstart AAAAAAAMEE}
{\bkmkend AAAAAAAMEE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAMEF}{\bkmkend AAAAAAAMEF}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAMEG}{\bkmkend AAAAAAAMEG}
00002 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAMEH}{\bkmkend AAAAAAAMEH}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAMEI}{\bkmkend AAAAAAAMEI}
00004 {\cf20 // Purpose:}\par
{\bkmkstart AAAAAAAMEJ}{\bkmkend AAAAAAAMEJ}
00005 {\cf20 //}\par
{\bkmkstart AAAAAAAMEK}{\bkmkend AAAAAAAMEK}
00006 {\cf20 // $NoKeywords: $}\par
{\bkmkstart AAAAAAAMEL}{\bkmkend AAAAAAAMEL}
00007 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAMEM}{\bkmkend AAAAAAAMEM}
00008 {\cf20 */}\par
{\bkmkstart AAAAAAAMEN}{\bkmkend AAAAAAAMEN}
00009 \par
{\bkmkstart AAAAAAAMEO}{\bkmkend AAAAAAAMEO}
00010 {\cf20 /*}\par
{\bkmkstart AAAAAAAMEP}{\bkmkend AAAAAAAMEP}
00011 {\cf20 }\par
{\bkmkstart AAAAAAAMEQ}{\bkmkend AAAAAAAMEQ}
00012 {\cf20 frame structure}\par
{\bkmkstart AAAAAAAMER}{\bkmkend AAAAAAAMER}
00013 {\cf20 |0|D0|D1|D2|D3|D4|D5|D6|D7|1|1|}\par
{\bkmkstart AAAAAAAMES}{\bkmkend AAAAAAAMES}
00014 {\cf20 data packet structure}\par
{\bkmkstart AAAAAAAMET}{\bkmkend AAAAAAAMET}
00015 {\cf20 |0|length of data|-data-|-|crc16byte0|crc16byte1|}\par
{\bkmkstart AAAAAAAMEU}{\bkmkend AAAAAAAMEU}
00016 {\cf20 ACK (acknowledge) packet structure}\par
{\bkmkstart AAAAAAAMEV}{\bkmkend AAAAAAAMEV}
00017 {\cf20 |6|crc16byte0|crc16byte1|}\par
{\bkmkstart AAAAAAAMEW}{\bkmkend AAAAAAAMEW}
00018 {\cf20 }\par
{\bkmkstart AAAAAAAMEX}{\bkmkend AAAAAAAMEX}
00019 {\cf20 */}\par
{\bkmkstart AAAAAAAMEY}{\bkmkend AAAAAAAMEY}
00020 \par
{\bkmkstart AAAAAAAMEZ}{\bkmkend AAAAAAAMEZ}
00021 \par
{\bkmkstart AAAAAAAMFA}{\bkmkend AAAAAAAMFA}
00022 {\cf21 #ifndef __SERVER__}\par
{\bkmkstart AAAAAAAMFB}{\bkmkend AAAAAAAMFB}
00023 {\cf21 #define __SERVER__}\par
{\bkmkstart AAAAAAAMFC}{\bkmkend AAAAAAAMFC}
00024 \par
{\bkmkstart AAAAAAAMFD}{\bkmkend AAAAAAAMFD}
00025 \par
{\bkmkstart AAAAAAAMFE}{\bkmkend AAAAAAAMFE}
00026 {\cf20 /*}\par
{\bkmkstart AAAAAAAMFF}{\bkmkend AAAAAAAMFF}
00027 {\cf20 // server.h}\par
{\bkmkstart AAAAAAAMFG}{\bkmkend AAAAAAAMFG}
00028 {\cf20 */}\par
{\bkmkstart AAAAAAAMFH}{\bkmkend AAAAAAAMFH}
00029 \par
{\bkmkstart AAAAAAAMFI}{\bkmkend AAAAAAAMFI}
00030 \par
{\bkmkstart AAAAAAAMFJ}{\bkmkend AAAAAAAMFJ}
00031 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAMFK}{\bkmkend AAAAAAAMFK}
00032 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAAMFL}{\bkmkend AAAAAAAMFL}
00033 \{\par
{\bkmkstart AAAAAAAMFM}{\bkmkend AAAAAAAMFM}
00034 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMFN}{\bkmkend AAAAAAAMFN}
00035 \par
{\bkmkstart AAAAAAAMFO}{\bkmkend AAAAAAAMFO}
00036 {\cf17 extern} {\cf18 int} flag_server_ready;\par
{\bkmkstart AAAAAAAMFP}{\bkmkend AAAAAAAMFP}
00037 {\cf17 extern} {\cf18 int} flag_server_isdumping;\par
{\bkmkstart AAAAAAAMFQ}{\bkmkend AAAAAAAMFQ}
00038 \par
{\bkmkstart AAAAAAAMFR}{\bkmkend AAAAAAAMFR}
00039 {\cf18 void} SV_insert_msg({\cf18 unsigned} {\cf18 char} *msg);\par
{\bkmkstart AAAAAAAMFS}{\bkmkend AAAAAAAMFS}
00040 {\cf18 int} SV_insert_msg_nb({\cf18 unsigned} {\cf18 char} *msg);\par
{\bkmkstart AAAAAAAMFT}{\bkmkend AAAAAAAMFT}
00041 \par
{\bkmkstart AAAAAAAMFU}{\bkmkend AAAAAAAMFU}
00042 {\cf18 void} server_main();\par
{\bkmkstart AAAAAAAMFV}{\bkmkend AAAAAAAMFV}
00043 \par
{\bkmkstart AAAAAAAMFW}{\bkmkend AAAAAAAMFW}
00044 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAMFX}{\bkmkend AAAAAAAMFX}
00045 \}\par
{\bkmkstart AAAAAAAMFY}{\bkmkend AAAAAAAMFY}
00046 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMFZ}{\bkmkend AAAAAAAMFZ}
00047 \par
{\bkmkstart AAAAAAAMGA}{\bkmkend AAAAAAAMGA}
00048 \par
{\bkmkstart AAAAAAAMGB}{\bkmkend AAAAAAAMGB}
00049 {\cf21 #endif  }{\cf20 /*__SERVER__*/}{\cf21 }\par
{\bkmkstart AAAAAAAMGC}{\bkmkend AAAAAAAMGC}
00050 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
shared.h\par \pard\plain 
{\bkmkstart AAAAAAAMGD}
{\bkmkend AAAAAAAMGD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAMGE}{\bkmkend AAAAAAAMGE}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAMGF}{\bkmkend AAAAAAAMGF}
00002 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAMGG}{\bkmkend AAAAAAAMGG}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAMGH}{\bkmkend AAAAAAAMGH}
00004 {\cf20 // Purpose:}\par
{\bkmkstart AAAAAAAMGI}{\bkmkend AAAAAAAMGI}
00005 {\cf20 //}\par
{\bkmkstart AAAAAAAMGJ}{\bkmkend AAAAAAAMGJ}
00006 {\cf20 // $NoKeywords: $}\par
{\bkmkstart AAAAAAAMGK}{\bkmkend AAAAAAAMGK}
00007 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAMGL}{\bkmkend AAAAAAAMGL}
00008 {\cf20 */}\par
{\bkmkstart AAAAAAAMGM}{\bkmkend AAAAAAAMGM}
00009 \par
{\bkmkstart AAAAAAAMGN}{\bkmkend AAAAAAAMGN}
00010 \par
{\bkmkstart AAAAAAAMGO}{\bkmkend AAAAAAAMGO}
00011 {\cf21 #ifndef __SHARED__}\par
{\bkmkstart AAAAAAAMGP}{\bkmkend AAAAAAAMGP}
00012 {\cf21 #define __SHARED__}\par
{\bkmkstart AAAAAAAMGQ}{\bkmkend AAAAAAAMGQ}
00013 \par
{\bkmkstart AAAAAAAMGR}{\bkmkend AAAAAAAMGR}
00014 \par
{\bkmkstart AAAAAAAMGS}{\bkmkend AAAAAAAMGS}
00015 {\cf20 /*}\par
{\bkmkstart AAAAAAAMGT}{\bkmkend AAAAAAAMGT}
00016 {\cf20 // shared.h}\par
{\bkmkstart AAAAAAAMGU}{\bkmkend AAAAAAAMGU}
00017 {\cf20 */}\par
{\bkmkstart AAAAAAAMGV}{\bkmkend AAAAAAAMGV}
00018 \par
{\bkmkstart AAAAAAAMGW}{\bkmkend AAAAAAAMGW}
00019 \par
{\bkmkstart AAAAAAAMGX}{\bkmkend AAAAAAAMGX}
00020 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAMGY}{\bkmkend AAAAAAAMGY}
00021 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAAMGZ}{\bkmkend AAAAAAAMGZ}
00022 \{\par
{\bkmkstart AAAAAAAMHA}{\bkmkend AAAAAAAMHA}
00023 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMHB}{\bkmkend AAAAAAAMHB}
00024 \par
{\bkmkstart AAAAAAAMHC}{\bkmkend AAAAAAAMHC}
00025 \par
{\bkmkstart AAAAAAAMHD}{\bkmkend AAAAAAAMHD}
00026 {\cf21 #ifndef __BUFFER__}\par
{\bkmkstart AAAAAAAMHE}{\bkmkend AAAAAAAMHE}
00027 {\cf21 #include "buffer.h"}\par
{\bkmkstart AAAAAAAMHF}{\bkmkend AAAAAAAMHF}
00028 {\cf21 #endif  }{\cf20 /*__BUFFER__*/}{\cf21 }\par
{\bkmkstart AAAAAAAMHG}{\bkmkend AAAAAAAMHG}
00029 \par
{\bkmkstart AAAAAAAMHH}{\bkmkend AAAAAAAMHH}
00030 {\cf21 #ifndef __CMDUTIL__}\par
{\bkmkstart AAAAAAAMHI}{\bkmkend AAAAAAAMHI}
00031 {\cf21 #include "cmdlib.h"}\par
{\bkmkstart AAAAAAAMHJ}{\bkmkend AAAAAAAMHJ}
00032 {\cf21 #endif  }{\cf20 /*__CMDUTIL__*/}{\cf21 }\par
{\bkmkstart AAAAAAAMHK}{\bkmkend AAAAAAAMHK}
00033 \par
{\bkmkstart AAAAAAAMHL}{\bkmkend AAAAAAAMHL}
00034 \par
{\bkmkstart AAAAAAAMHM}{\bkmkend AAAAAAAMHM}
00035 {\cf21 #define BUFFER_SIZE     32  }{\cf20 /* size must be 2 ^ n */}{\cf21 }\par
{\bkmkstart AAAAAAAMHN}{\bkmkend AAAAAAAMHN}
00036 {\cf21 #define BAUD_RATE       10 }{\cf20 /* This is timespan not rate */}{\cf21 }\par
{\bkmkstart AAAAAAAMHO}{\bkmkend AAAAAAAMHO}
00037 {\cf21 #define _SCAN_TIME_SPAN (BAUD_RATE / 10)}\par
{\bkmkstart AAAAAAAMHP}{\bkmkend AAAAAAAMHP}
00038 \par
{\bkmkstart AAAAAAAMHQ}{\bkmkend AAAAAAAMHQ}
00039 {\cf21 #define MAX_MSG_LENGTH  (BUFFER_SIZE - 4)  }{\cf20 /* BUFFER_SIZE - 4 */}{\cf21 }\par
{\bkmkstart AAAAAAAMHR}{\bkmkend AAAAAAAMHR}
00040 \par
{\bkmkstart AAAAAAAMHS}{\bkmkend AAAAAAAMHS}
00041 {\cf21 #ifdef _SLOW}\par
{\bkmkstart AAAAAAAMHT}{\bkmkend AAAAAAAMHT}
00042 {\cf21 #define MAX_WAIT_TIMES  (BUFFER_SIZE + 6) * 22}\par
{\bkmkstart AAAAAAAMHU}{\bkmkend AAAAAAAMHU}
00043 {\cf21 #elif defined _SLOWX2}\par
{\bkmkstart AAAAAAAMHV}{\bkmkend AAAAAAAMHV}
00044 {\cf21 #define MAX_WAIT_TIMES  (BUFFER_SIZE + 6) * 33}\par
{\bkmkstart AAAAAAAMHW}{\bkmkend AAAAAAAMHW}
00045 {\cf21 #else}\par
{\bkmkstart AAAAAAAMHX}{\bkmkend AAAAAAAMHX}
00046 {\cf21 #define MAX_WAIT_TIMES  (BUFFER_SIZE + 6) * 11}\par
{\bkmkstart AAAAAAAMHY}{\bkmkend AAAAAAAMHY}
00047 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMHZ}{\bkmkend AAAAAAAMHZ}
00048 \par
{\bkmkstart AAAAAAAMIA}{\bkmkend AAAAAAAMIA}
00049 {\cf21 #ifdef _SERVER}\par
{\bkmkstart AAAAAAAMIB}{\bkmkend AAAAAAAMIB}
00050 {\cf21 #define TX              4}\par
{\bkmkstart AAAAAAAMIC}{\bkmkend AAAAAAAMIC}
00051 {\cf21 #define RX              17}\par
{\bkmkstart AAAAAAAMID}{\bkmkend AAAAAAAMID}
00052 {\cf21 #else}\par
{\bkmkstart AAAAAAAMIE}{\bkmkend AAAAAAAMIE}
00053 {\cf21 #define TX              17}\par
{\bkmkstart AAAAAAAMIF}{\bkmkend AAAAAAAMIF}
00054 {\cf21 #define RX              4}\par
{\bkmkstart AAAAAAAMIG}{\bkmkend AAAAAAAMIG}
00055 {\cf21 #endif }{\cf20 /*// _SERVER*/}{\cf21 }\par
{\bkmkstart AAAAAAAMIH}{\bkmkend AAAAAAAMIH}
00056 \par
{\bkmkstart AAAAAAAMII}{\bkmkend AAAAAAAMII}
00057 {\cf17 extern} {\cf18 int} flag_sender_ready;\par
{\bkmkstart AAAAAAAMIJ}{\bkmkend AAAAAAAMIJ}
00058 \par
{\bkmkstart AAAAAAAMIK}{\bkmkend AAAAAAAMIK}
00059 {\cf17 extern} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 sender_buffer;\par
{\bkmkstart AAAAAAAMIL}{\bkmkend AAAAAAAMIL}
00060 \par
{\bkmkstart AAAAAAAMIM}{\bkmkend AAAAAAAMIM}
00061 {\cf18 void} SD_buffer_put({\cf18 byte} elem);\par
{\bkmkstart AAAAAAAMIN}{\bkmkend AAAAAAAMIN}
00062 {\cf18 void} SD_print_buffer();\par
{\bkmkstart AAAAAAAMIO}{\bkmkend AAAAAAAMIO}
00063 {\cf18 void} SD_flush_buffer();\par
{\bkmkstart AAAAAAAMIP}{\bkmkend AAAAAAAMIP}
00064 \par
{\bkmkstart AAAAAAAMIQ}{\bkmkend AAAAAAAMIQ}
00065 {\cf18 void} sender_main();\par
{\bkmkstart AAAAAAAMIR}{\bkmkend AAAAAAAMIR}
00066 \par
{\bkmkstart AAAAAAAMIS}{\bkmkend AAAAAAAMIS}
00067 {\cf20 /******************************/}\par
{\bkmkstart AAAAAAAMIT}{\bkmkend AAAAAAAMIT}
00068 \par
{\bkmkstart AAAAAAAMIU}{\bkmkend AAAAAAAMIU}
00069 {\cf17 extern} {\cf18 int} flag_receiver_ready;\par
{\bkmkstart AAAAAAAMIV}{\bkmkend AAAAAAAMIV}
00070 \par
{\bkmkstart AAAAAAAMIW}{\bkmkend AAAAAAAMIW}
00071 {\cf17 extern} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 ring_buffer}}}
 receiver_buffer;\par
{\bkmkstart AAAAAAAMIX}{\bkmkend AAAAAAAMIX}
00072 \par
{\bkmkstart AAAAAAAMIY}{\bkmkend AAAAAAAMIY}
00073 {\cf18 byte} RC_buffer_get();\par
{\bkmkstart AAAAAAAMIZ}{\bkmkend AAAAAAAMIZ}
00074 {\cf18 void} RC_print_buffer();\par
{\bkmkstart AAAAAAAMJA}{\bkmkend AAAAAAAMJA}
00075 {\cf18 void} RC_flush_buffer();\par
{\bkmkstart AAAAAAAMJB}{\bkmkend AAAAAAAMJB}
00076 \par
{\bkmkstart AAAAAAAMJC}{\bkmkend AAAAAAAMJC}
00077 {\cf18 void} receiver_main();\par
{\bkmkstart AAAAAAAMJD}{\bkmkend AAAAAAAMJD}
00078 \par
{\bkmkstart AAAAAAAMJE}{\bkmkend AAAAAAAMJE}
00079 {\cf20 /******************************/}\par
{\bkmkstart AAAAAAAMJF}{\bkmkend AAAAAAAMJF}
00080 \par
{\bkmkstart AAAAAAAMJG}{\bkmkend AAAAAAAMJG}
00081 {\cf17 extern} {\cf18 int} mxargc;\par
{\bkmkstart AAAAAAAMJH}{\bkmkend AAAAAAAMJH}
00082 {\cf17 extern} {\cf18 char} **mxargv;\par
{\bkmkstart AAAAAAAMJI}{\bkmkend AAAAAAAMJI}
00083 \par
{\bkmkstart AAAAAAAMJJ}{\bkmkend AAAAAAAMJJ}
00084 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAMJK}{\bkmkend AAAAAAAMJK}
00085 \}\par
{\bkmkstart AAAAAAAMJL}{\bkmkend AAAAAAAMJL}
00086 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMJM}{\bkmkend AAAAAAAMJM}
00087 \par
{\bkmkstart AAAAAAAMJN}{\bkmkend AAAAAAAMJN}
00088 \par
{\bkmkstart AAAAAAAMJO}{\bkmkend AAAAAAAMJO}
00089 {\cf21 #endif  }{\cf20 /*__SHARED__*/}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
softgpio.c\par \pard\plain 
{\bkmkstart AAAAAAAMJP}
{\bkmkend AAAAAAAMJP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAMJQ}{\bkmkend AAAAAAAMJQ}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAMJR}{\bkmkend AAAAAAAMJR}
00002 {\cf20 }\par
{\bkmkstart AAAAAAAMJS}{\bkmkend AAAAAAAMJS}
00003 {\cf20 ===== sotfgpio.c ========================================================}\par
{\bkmkstart AAAAAAAMJT}{\bkmkend AAAAAAAMJT}
00004 {\cf20 }\par
{\bkmkstart AAAAAAAMJU}{\bkmkend AAAAAAAMJU}
00005 {\cf20 */}\par
{\bkmkstart AAAAAAAMJV}{\bkmkend AAAAAAAMJV}
00006 \par
{\bkmkstart AAAAAAAMJW}{\bkmkend AAAAAAAMJW}
00007 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAAMJX}{\bkmkend AAAAAAAMJX}
00008 \par
{\bkmkstart AAAAAAAMJY}{\bkmkend AAAAAAAMJY}
00009 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAAMJZ}{\bkmkend AAAAAAAMJZ}
00010 {\cf21 #include <windows.h>}\par
{\bkmkstart AAAAAAAMKA}{\bkmkend AAAAAAAMKA}
00011 {\cf21 #else}\par
{\bkmkstart AAAAAAAMKB}{\bkmkend AAAAAAAMKB}
00012 {\cf21 #include <unistd.h>}\par
{\bkmkstart AAAAAAAMKC}{\bkmkend AAAAAAAMKC}
00013 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMKD}{\bkmkend AAAAAAAMKD}
00014 \par
{\bkmkstart AAAAAAAMKE}{\bkmkend AAAAAAAMKE}
00015 {\cf21 #include "cmdlib.h"}\par
{\bkmkstart AAAAAAAMKF}{\bkmkend AAAAAAAMKF}
00016 \par
{\bkmkstart AAAAAAAMKG}{\bkmkend AAAAAAAMKG}
00017 {\cf21 #include "softgpio.h"}\par
{\bkmkstart AAAAAAAMKH}{\bkmkend AAAAAAAMKH}
00018 \par
{\bkmkstart AAAAAAAMKI}{\bkmkend AAAAAAAMKI}
00019 \par
{\bkmkstart AAAAAAAMKJ}{\bkmkend AAAAAAAMKJ}
00020 {\cf17 typedef} {\cf17 struct}\par
{\bkmkstart AAAAAAAMKK}{\bkmkend AAAAAAAMKK}
00021 \{\par
{\bkmkstart AAAAAAAMKL}{\bkmkend AAAAAAAMKL}
00022     {\cf18 char} state;\par
{\bkmkstart AAAAAAAMKM}{\bkmkend AAAAAAAMKM}
00023 \} softgpio_t;\par
{\bkmkstart AAAAAAAMKN}{\bkmkend AAAAAAAMKN}
00024 \par
{\bkmkstart AAAAAAAMKO}{\bkmkend AAAAAAAMKO}
00025 \par
{\bkmkstart AAAAAAAMKP}{\bkmkend AAAAAAAMKP}
00026 {\cf20 /*static char filepath[14][128];*/}\par
{\bkmkstart AAAAAAAMKQ}{\bkmkend AAAAAAAMKQ}
00027 {\cf17 static} {\cf18 char} filepath[14][9];\par
{\bkmkstart AAAAAAAMKR}{\bkmkend AAAAAAAMKR}
00028 {\cf17 static} qboolean pinmode[14] = \{{\cf17 true}\};\par
{\bkmkstart AAAAAAAMKS}{\bkmkend AAAAAAAMKS}
00029 \par
{\bkmkstart AAAAAAAMKT}{\bkmkend AAAAAAAMKT}
00030 {\cf18 int} wiringPiSetup( {\cf18 void} )\par
{\bkmkstart AAAAAAAMKU}{\bkmkend AAAAAAAMKU}
00031 \{\par
{\bkmkstart AAAAAAAMKV}{\bkmkend AAAAAAAMKV}
00032     {\cf18 char} source[128];\par
{\bkmkstart AAAAAAAMKW}{\bkmkend AAAAAAAMKW}
00033     {\cf18 int} i;\par
{\bkmkstart AAAAAAAMKX}{\bkmkend AAAAAAAMKX}
00034     Q_getwd(source);\par
{\bkmkstart AAAAAAAMKY}{\bkmkend AAAAAAAMKY}
00035     {\cf19 for}(i=0; i<14; i++)\par
{\bkmkstart AAAAAAAMKZ}{\bkmkend AAAAAAAMKZ}
00036 \par
{\bkmkstart AAAAAAAMLA}{\bkmkend AAAAAAAMLA}
00037     \{\par
{\bkmkstart AAAAAAAMLB}{\bkmkend AAAAAAAMLB}
00038         {\cf20 /*}\par
{\bkmkstart AAAAAAAMLC}{\bkmkend AAAAAAAMLC}
00039 {\cf20         strcpy(filepath[i], source);}\par
{\bkmkstart AAAAAAAMLD}{\bkmkend AAAAAAAMLD}
00040 {\cf20         sprintf (filepath[i] + strlen(filepath[i]),"pin%d.bin", i);}\par
{\bkmkstart AAAAAAAMLE}{\bkmkend AAAAAAAMLE}
00041 {\cf20         */}\par
{\bkmkstart AAAAAAAMLF}{\bkmkend AAAAAAAMLF}
00042         sprintf (filepath[i],{\cf22 "pin%d.bin"}, i);\par
{\bkmkstart AAAAAAAMLG}{\bkmkend AAAAAAAMLG}
00043     \}\par
{\bkmkstart AAAAAAAMLH}{\bkmkend AAAAAAAMLH}
00044 \par
{\bkmkstart AAAAAAAMLI}{\bkmkend AAAAAAAMLI}
00045     {\cf19 return} 0;\par
{\bkmkstart AAAAAAAMLJ}{\bkmkend AAAAAAAMLJ}
00046 \}\par
{\bkmkstart AAAAAAAMLK}{\bkmkend AAAAAAAMLK}
00047 \par
{\bkmkstart AAAAAAAMLL}{\bkmkend AAAAAAAMLL}
00048 {\cf18 int} wiringPiSetupGpio( {\cf18 void} )\par
{\bkmkstart AAAAAAAMLM}{\bkmkend AAAAAAAMLM}
00049 \{\par
{\bkmkstart AAAAAAAMLN}{\bkmkend AAAAAAAMLN}
00050     {\cf18 char} source[128];\par
{\bkmkstart AAAAAAAMLO}{\bkmkend AAAAAAAMLO}
00051     {\cf18 int} i;\par
{\bkmkstart AAAAAAAMLP}{\bkmkend AAAAAAAMLP}
00052     Q_getwd(source);\par
{\bkmkstart AAAAAAAMLQ}{\bkmkend AAAAAAAMLQ}
00053     {\cf19 for}(i=0; i<14; i++)\par
{\bkmkstart AAAAAAAMLR}{\bkmkend AAAAAAAMLR}
00054 \par
{\bkmkstart AAAAAAAMLS}{\bkmkend AAAAAAAMLS}
00055     \{\par
{\bkmkstart AAAAAAAMLT}{\bkmkend AAAAAAAMLT}
00056         {\cf20 /*}\par
{\bkmkstart AAAAAAAMLU}{\bkmkend AAAAAAAMLU}
00057 {\cf20         strcpy(filepath[i], source);}\par
{\bkmkstart AAAAAAAMLV}{\bkmkend AAAAAAAMLV}
00058 {\cf20         sprintf (filepath[i] + strlen(filepath[i]),"pin%d.bin", i);}\par
{\bkmkstart AAAAAAAMLW}{\bkmkend AAAAAAAMLW}
00059 {\cf20         */}\par
{\bkmkstart AAAAAAAMLX}{\bkmkend AAAAAAAMLX}
00060         sprintf (filepath[i],{\cf22 "pin%d.bin"}, i);\par
{\bkmkstart AAAAAAAMLY}{\bkmkend AAAAAAAMLY}
00061     \}\par
{\bkmkstart AAAAAAAMLZ}{\bkmkend AAAAAAAMLZ}
00062 \par
{\bkmkstart AAAAAAAMMA}{\bkmkend AAAAAAAMMA}
00063     {\cf19 return} 0;\par
{\bkmkstart AAAAAAAMMB}{\bkmkend AAAAAAAMMB}
00064 \}\par
{\bkmkstart AAAAAAAMMC}{\bkmkend AAAAAAAMMC}
00065 \par
{\bkmkstart AAAAAAAMMD}{\bkmkend AAAAAAAMMD}
00066 {\cf18 void} pinMode({\cf18 int} pin, {\cf18 int} mode)\par
{\bkmkstart AAAAAAAMME}{\bkmkend AAAAAAAMME}
00067 \{\par
{\bkmkstart AAAAAAAMMF}{\bkmkend AAAAAAAMMF}
00068     softgpio_t default_value;\par
{\bkmkstart AAAAAAAMMG}{\bkmkend AAAAAAAMMG}
00069     default_value.state = 1;\par
{\bkmkstart AAAAAAAMMH}{\bkmkend AAAAAAAMMH}
00070     {\cf19 if}(mode == INPUT)\par
{\bkmkstart AAAAAAAMMI}{\bkmkend AAAAAAAMMI}
00071         pinmode[pin] = {\cf17 true};\par
{\bkmkstart AAAAAAAMMJ}{\bkmkend AAAAAAAMMJ}
00072     {\cf19 else} {\cf19 if}(mode == OUTPUT)\par
{\bkmkstart AAAAAAAMMK}{\bkmkend AAAAAAAMMK}
00073         pinmode[pin] = {\cf17 false};\par
{\bkmkstart AAAAAAAMML}{\bkmkend AAAAAAAMML}
00074     SaveFile (filepath[pin],&default_value,{\cf17 sizeof}(softgpio_t));\par
{\bkmkstart AAAAAAAMMM}{\bkmkend AAAAAAAMMM}
00075 \}\par
{\bkmkstart AAAAAAAMMN}{\bkmkend AAAAAAAMMN}
00076 \par
{\bkmkstart AAAAAAAMMO}{\bkmkend AAAAAAAMMO}
00077 {\cf18 int} digitalRead({\cf18 int} pin)\par
{\bkmkstart AAAAAAAMMP}{\bkmkend AAAAAAAMMP}
00078 \{\par
{\bkmkstart AAAAAAAMMQ}{\bkmkend AAAAAAAMMQ}
00079     {\cf19 if}(pinmode[pin])\par
{\bkmkstart AAAAAAAMMR}{\bkmkend AAAAAAAMMR}
00080 \par
{\bkmkstart AAAAAAAMMS}{\bkmkend AAAAAAAMMS}
00081     \{\par
{\bkmkstart AAAAAAAMMT}{\bkmkend AAAAAAAMMT}
00082         softgpio_t *buffer;\par
{\bkmkstart AAAAAAAMMU}{\bkmkend AAAAAAAMMU}
00083         {\cf18 int} ret;\par
{\bkmkstart AAAAAAAMMV}{\bkmkend AAAAAAAMMV}
00084         LoadFile (filepath[pin], ({\cf18 void} **)&buffer);\par
{\bkmkstart AAAAAAAMMW}{\bkmkend AAAAAAAMMW}
00085         ret = buffer->state;\par
{\bkmkstart AAAAAAAMMX}{\bkmkend AAAAAAAMMX}
00086         free(buffer);\par
{\bkmkstart AAAAAAAMMY}{\bkmkend AAAAAAAMMY}
00087         {\cf19 return} ret;\par
{\bkmkstart AAAAAAAMMZ}{\bkmkend AAAAAAAMMZ}
00088     \}\par
{\bkmkstart AAAAAAAMNA}{\bkmkend AAAAAAAMNA}
00089 \par
{\bkmkstart AAAAAAAMNB}{\bkmkend AAAAAAAMNB}
00090     {\cf19 else}\par
{\bkmkstart AAAAAAAMNC}{\bkmkend AAAAAAAMNC}
00091         Error({\cf22 "Write Only"});\par
{\bkmkstart AAAAAAAMND}{\bkmkend AAAAAAAMND}
00092     {\cf19 return} -1;\par
{\bkmkstart AAAAAAAMNE}{\bkmkend AAAAAAAMNE}
00093 \}\par
{\bkmkstart AAAAAAAMNF}{\bkmkend AAAAAAAMNF}
00094 \par
{\bkmkstart AAAAAAAMNG}{\bkmkend AAAAAAAMNG}
00095 {\cf18 void} digitalWrite({\cf18 int} pin, {\cf18 int} value)\par
{\bkmkstart AAAAAAAMNH}{\bkmkend AAAAAAAMNH}
00096 \{\par
{\bkmkstart AAAAAAAMNI}{\bkmkend AAAAAAAMNI}
00097     {\cf19 if}(!pinmode[pin])\par
{\bkmkstart AAAAAAAMNJ}{\bkmkend AAAAAAAMNJ}
00098 \par
{\bkmkstart AAAAAAAMNK}{\bkmkend AAAAAAAMNK}
00099     \{\par
{\bkmkstart AAAAAAAMNL}{\bkmkend AAAAAAAMNL}
00100         softgpio_t buffer;\par
{\bkmkstart AAAAAAAMNM}{\bkmkend AAAAAAAMNM}
00101         buffer.state = (char)value;\par
{\bkmkstart AAAAAAAMNN}{\bkmkend AAAAAAAMNN}
00102         SaveFile (filepath[pin], &buffer,{\cf17 sizeof}(softgpio_t));\par
{\bkmkstart AAAAAAAMNO}{\bkmkend AAAAAAAMNO}
00103     \}\par
{\bkmkstart AAAAAAAMNP}{\bkmkend AAAAAAAMNP}
00104 \par
{\bkmkstart AAAAAAAMNQ}{\bkmkend AAAAAAAMNQ}
00105     {\cf19 else}\par
{\bkmkstart AAAAAAAMNR}{\bkmkend AAAAAAAMNR}
00106         Error({\cf22 "Read Only"});\par
{\bkmkstart AAAAAAAMNS}{\bkmkend AAAAAAAMNS}
00107 \par
{\bkmkstart AAAAAAAMNT}{\bkmkend AAAAAAAMNT}
00108 \}\par
{\bkmkstart AAAAAAAMNU}{\bkmkend AAAAAAAMNU}
00109 \par
{\bkmkstart AAAAAAAMNV}{\bkmkend AAAAAAAMNV}
00110 {\cf18 void} delay({\cf18 unsigned} {\cf18 int} howLong)\par
{\bkmkstart AAAAAAAMNW}{\bkmkend AAAAAAAMNW}
00111 \{\par
{\bkmkstart AAAAAAAMNX}{\bkmkend AAAAAAAMNX}
00112 \par
{\bkmkstart AAAAAAAMNY}{\bkmkend AAAAAAAMNY}
00113 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAAMNZ}{\bkmkend AAAAAAAMNZ}
00114     Sleep(howLong);\par
{\bkmkstart AAAAAAAMOA}{\bkmkend AAAAAAAMOA}
00115 {\cf21 #else}\par
{\bkmkstart AAAAAAAMOB}{\bkmkend AAAAAAAMOB}
00116     usleep(howLong * 1000);\par
{\bkmkstart AAAAAAAMOC}{\bkmkend AAAAAAAMOC}
00117 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMOD}{\bkmkend AAAAAAAMOD}
00118 \par
{\bkmkstart AAAAAAAMOE}{\bkmkend AAAAAAAMOE}
00119 \}\par
{\bkmkstart AAAAAAAMOF}{\bkmkend AAAAAAAMOF}
00120 \par
{\bkmkstart AAAAAAAMOG}{\bkmkend AAAAAAAMOG}
00121 {\cf18 void} delayMicroseconds({\cf18 unsigned} {\cf18 int} howLong)\par
{\bkmkstart AAAAAAAMOH}{\bkmkend AAAAAAAMOH}
00122 \{\par
{\bkmkstart AAAAAAAMOI}{\bkmkend AAAAAAAMOI}
00123 \par
{\bkmkstart AAAAAAAMOJ}{\bkmkend AAAAAAAMOJ}
00124 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAAMOK}{\bkmkend AAAAAAAMOK}
00125 \par
{\bkmkstart AAAAAAAMOL}{\bkmkend AAAAAAAMOL}
00126 {\cf21 #else}\par
{\bkmkstart AAAAAAAMOM}{\bkmkend AAAAAAAMOM}
00127     usleep(howLong);\par
{\bkmkstart AAAAAAAMON}{\bkmkend AAAAAAAMON}
00128 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMOO}{\bkmkend AAAAAAAMOO}
00129 \par
{\bkmkstart AAAAAAAMOP}{\bkmkend AAAAAAAMOP}
00130 \}\par
{\bkmkstart AAAAAAAMOQ}{\bkmkend AAAAAAAMOQ}
00131 \par
{\bkmkstart AAAAAAAMOR}{\bkmkend AAAAAAAMOR}
00132 {\cf21 #endif }{\cf20 /* _SOFTGPIO */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
softgpio.h\par \pard\plain 
{\bkmkstart AAAAAAAMOS}
{\bkmkend AAAAAAAMOS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAMOT}{\bkmkend AAAAAAAMOT}
00001 {\cf20 /*}\par
{\bkmkstart AAAAAAAMOU}{\bkmkend AAAAAAAMOU}
00002 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAMOV}{\bkmkend AAAAAAAMOV}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAAMOW}{\bkmkend AAAAAAAMOW}
00004 {\cf20 // Purpose:}\par
{\bkmkstart AAAAAAAMOX}{\bkmkend AAAAAAAMOX}
00005 {\cf20 //}\par
{\bkmkstart AAAAAAAMOY}{\bkmkend AAAAAAAMOY}
00006 {\cf20 // $NoKeywords: $}\par
{\bkmkstart AAAAAAAMOZ}{\bkmkend AAAAAAAMOZ}
00007 {\cf20 //=============================================================================}\par
{\bkmkstart AAAAAAAMPA}{\bkmkend AAAAAAAMPA}
00008 {\cf20 */}\par
{\bkmkstart AAAAAAAMPB}{\bkmkend AAAAAAAMPB}
00009 \par
{\bkmkstart AAAAAAAMPC}{\bkmkend AAAAAAAMPC}
00010 \par
{\bkmkstart AAAAAAAMPD}{\bkmkend AAAAAAAMPD}
00011 {\cf21 #ifndef __SOFTGPIO__}\par
{\bkmkstart AAAAAAAMPE}{\bkmkend AAAAAAAMPE}
00012 {\cf21 #define __SOFTGPIO__}\par
{\bkmkstart AAAAAAAMPF}{\bkmkend AAAAAAAMPF}
00013 \par
{\bkmkstart AAAAAAAMPG}{\bkmkend AAAAAAAMPG}
00014 \par
{\bkmkstart AAAAAAAMPH}{\bkmkend AAAAAAAMPH}
00015 {\cf20 /*}\par
{\bkmkstart AAAAAAAMPI}{\bkmkend AAAAAAAMPI}
00016 {\cf20 // softgpio.h}\par
{\bkmkstart AAAAAAAMPJ}{\bkmkend AAAAAAAMPJ}
00017 {\cf20 */}\par
{\bkmkstart AAAAAAAMPK}{\bkmkend AAAAAAAMPK}
00018 \par
{\bkmkstart AAAAAAAMPL}{\bkmkend AAAAAAAMPL}
00019 \par
{\bkmkstart AAAAAAAMPM}{\bkmkend AAAAAAAMPM}
00020 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAMPN}{\bkmkend AAAAAAAMPN}
00021 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAAMPO}{\bkmkend AAAAAAAMPO}
00022 \{\par
{\bkmkstart AAAAAAAMPP}{\bkmkend AAAAAAAMPP}
00023     {\cf17 namespace }softgpio \{\par
{\bkmkstart AAAAAAAMPQ}{\bkmkend AAAAAAAMPQ}
00024 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMPR}{\bkmkend AAAAAAAMPR}
00025 \par
{\bkmkstart AAAAAAAMPS}{\bkmkend AAAAAAAMPS}
00026 {\cf21 #ifdef _SOFTGPIO}\par
{\bkmkstart AAAAAAAMPT}{\bkmkend AAAAAAAMPT}
00027 \par
{\bkmkstart AAAAAAAMPU}{\bkmkend AAAAAAAMPU}
00028 \par
{\bkmkstart AAAAAAAMPV}{\bkmkend AAAAAAAMPV}
00029 {\cf21 #define INPUT                    0}\par
{\bkmkstart AAAAAAAMPW}{\bkmkend AAAAAAAMPW}
00030 {\cf21 #define OUTPUT                   1}\par
{\bkmkstart AAAAAAAMPX}{\bkmkend AAAAAAAMPX}
00031 {\cf21 #define PWM_OUTPUT               2}\par
{\bkmkstart AAAAAAAMPY}{\bkmkend AAAAAAAMPY}
00032 {\cf21 #define GPIO_CLOCK               3}\par
{\bkmkstart AAAAAAAMPZ}{\bkmkend AAAAAAAMPZ}
00033 {\cf21 #define SOFT_PWM_OUTPUT          4}\par
{\bkmkstart AAAAAAAMQA}{\bkmkend AAAAAAAMQA}
00034 {\cf21 #define SOFT_TONE_OUTPUT         5}\par
{\bkmkstart AAAAAAAMQB}{\bkmkend AAAAAAAMQB}
00035 {\cf21 #define PWM_TONE_OUTPUT          6}\par
{\bkmkstart AAAAAAAMQC}{\bkmkend AAAAAAAMQC}
00036 \par
{\bkmkstart AAAAAAAMQD}{\bkmkend AAAAAAAMQD}
00037 \par
{\bkmkstart AAAAAAAMQE}{\bkmkend AAAAAAAMQE}
00038 {\cf21 #define LOW                          0}\par
{\bkmkstart AAAAAAAMQF}{\bkmkend AAAAAAAMQF}
00039 {\cf21 #define HIGH                     1}\par
{\bkmkstart AAAAAAAMQG}{\bkmkend AAAAAAAMQG}
00040 \par
{\bkmkstart AAAAAAAMQH}{\bkmkend AAAAAAAMQH}
00041 \par
{\bkmkstart AAAAAAAMQI}{\bkmkend AAAAAAAMQI}
00042 {\cf18 int} wiringPiSetup( {\cf18 void} );\par
{\bkmkstart AAAAAAAMQJ}{\bkmkend AAAAAAAMQJ}
00043 {\cf18 int} wiringPiSetupGpio( {\cf18 void} );\par
{\bkmkstart AAAAAAAMQK}{\bkmkend AAAAAAAMQK}
00044 {\cf18 void} pinMode({\cf18 int} pin, {\cf18 int} mode);\par
{\bkmkstart AAAAAAAMQL}{\bkmkend AAAAAAAMQL}
00045 \par
{\bkmkstart AAAAAAAMQM}{\bkmkend AAAAAAAMQM}
00046 {\cf18 int} digitalRead({\cf18 int} pin);\par
{\bkmkstart AAAAAAAMQN}{\bkmkend AAAAAAAMQN}
00047 \par
{\bkmkstart AAAAAAAMQO}{\bkmkend AAAAAAAMQO}
00048 {\cf18 void} digitalWrite({\cf18 int} pin, {\cf18 int} value);\par
{\bkmkstart AAAAAAAMQP}{\bkmkend AAAAAAAMQP}
00049 \par
{\bkmkstart AAAAAAAMQQ}{\bkmkend AAAAAAAMQQ}
00050 {\cf18 void} delay({\cf18 unsigned} {\cf18 int} howLong);\par
{\bkmkstart AAAAAAAMQR}{\bkmkend AAAAAAAMQR}
00051 {\cf18 void} delayMicroseconds({\cf18 unsigned} {\cf18 int} howLong);\par
{\bkmkstart AAAAAAAMQS}{\bkmkend AAAAAAAMQS}
00052 \par
{\bkmkstart AAAAAAAMQT}{\bkmkend AAAAAAAMQT}
00053 \par
{\bkmkstart AAAAAAAMQU}{\bkmkend AAAAAAAMQU}
00054 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAAMQV}{\bkmkend AAAAAAAMQV}
00055     \} {\cf20 //namespace softgpio}\par
{\bkmkstart AAAAAAAMQW}{\bkmkend AAAAAAAMQW}
00056 \}\par
{\bkmkstart AAAAAAAMQX}{\bkmkend AAAAAAAMQX}
00057 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMQY}{\bkmkend AAAAAAAMQY}
00058 \par
{\bkmkstart AAAAAAAMQZ}{\bkmkend AAAAAAAMQZ}
00059 {\cf21 #endif }{\cf20 /* _SOFTGPIO */}{\cf21 }\par
{\bkmkstart AAAAAAAMRA}{\bkmkend AAAAAAAMRA}
00060 \par
{\bkmkstart AAAAAAAMRB}{\bkmkend AAAAAAAMRB}
00061 \par
{\bkmkstart AAAAAAAMRC}{\bkmkend AAAAAAAMRC}
00062 {\cf21 #endif  }{\cf20 /*__SOFTGPIO__*/}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
threads.c\par \pard\plain 
{\bkmkstart AAAAAAAMRD}
{\bkmkend AAAAAAAMRD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAMRE}{\bkmkend AAAAAAAMRE}
00001 {\cf20 /***}\par
{\bkmkstart AAAAAAAMRF}{\bkmkend AAAAAAAMRF}
00002 {\cf20 *}\par
{\bkmkstart AAAAAAAMRG}{\bkmkend AAAAAAAMRG}
00003 {\cf20 *       Copyright (c) 1996-2002, Valve LLC. All rights reserved.}\par
{\bkmkstart AAAAAAAMRH}{\bkmkend AAAAAAAMRH}
00004 {\cf20 *}\par
{\bkmkstart AAAAAAAMRI}{\bkmkend AAAAAAAMRI}
00005 {\cf20 *       This product contains software technology licensed from Id}\par
{\bkmkstart AAAAAAAMRJ}{\bkmkend AAAAAAAMRJ}
00006 {\cf20 *       Software, Inc. ("Id Technology").  Id Technology (c) 1996 Id Software, Inc.}\par
{\bkmkstart AAAAAAAMRK}{\bkmkend AAAAAAAMRK}
00007 {\cf20 *       All Rights Reserved.}\par
{\bkmkstart AAAAAAAMRL}{\bkmkend AAAAAAAMRL}
00008 {\cf20 *}\par
{\bkmkstart AAAAAAAMRM}{\bkmkend AAAAAAAMRM}
00009 {\cf20 ****/}\par
{\bkmkstart AAAAAAAMRN}{\bkmkend AAAAAAAMRN}
00010 \par
{\bkmkstart AAAAAAAMRO}{\bkmkend AAAAAAAMRO}
00011 {\cf20 /*}\par
{\bkmkstart AAAAAAAMRP}{\bkmkend AAAAAAAMRP}
00012 {\cf20 =================}\par
{\bkmkstart AAAAAAAMRQ}{\bkmkend AAAAAAAMRQ}
00013 {\cf20 last modified:}\par
{\bkmkstart AAAAAAAMRR}{\bkmkend AAAAAAAMRR}
00014 {\cf20 =================}\par
{\bkmkstart AAAAAAAMRS}{\bkmkend AAAAAAAMRS}
00015 {\cf20 */}\par
{\bkmkstart AAAAAAAMRT}{\bkmkend AAAAAAAMRT}
00016 \par
{\bkmkstart AAAAAAAMRU}{\bkmkend AAAAAAAMRU}
00017 {\cf21 #include "cmdlib.h"}\par
{\bkmkstart AAAAAAAMRV}{\bkmkend AAAAAAAMRV}
00018 {\cf21 #define NO_THREAD_NAMES}\par
{\bkmkstart AAAAAAAMRW}{\bkmkend AAAAAAAMRW}
00019 {\cf21 #include "threads.h"}\par
{\bkmkstart AAAAAAAMRX}{\bkmkend AAAAAAAMRX}
00020 \par
{\bkmkstart AAAAAAAMRY}{\bkmkend AAAAAAAMRY}
00021 {\cf21 #define MAX_THREADS     64}\par
{\bkmkstart AAAAAAAMRZ}{\bkmkend AAAAAAAMRZ}
00022 \par
{\bkmkstart AAAAAAAMSA}{\bkmkend AAAAAAAMSA}
00023 {\cf18 int}             dispatch;\par
{\bkmkstart AAAAAAAMSB}{\bkmkend AAAAAAAMSB}
00024 {\cf18 int}             workcount;\par
{\bkmkstart AAAAAAAMSC}{\bkmkend AAAAAAAMSC}
00025 {\cf18 int}             oldf;\par
{\bkmkstart AAAAAAAMSD}{\bkmkend AAAAAAAMSD}
00026 qboolean                pacifier;\par
{\bkmkstart AAAAAAAMSE}{\bkmkend AAAAAAAMSE}
00027 \par
{\bkmkstart AAAAAAAMSF}{\bkmkend AAAAAAAMSF}
00028 qboolean        threaded;\par
{\bkmkstart AAAAAAAMSG}{\bkmkend AAAAAAAMSG}
00029 \par
{\bkmkstart AAAAAAAMSH}{\bkmkend AAAAAAAMSH}
00030 {\cf20 /*}\par
{\bkmkstart AAAAAAAMSI}{\bkmkend AAAAAAAMSI}
00031 {\cf20 =============}\par
{\bkmkstart AAAAAAAMSJ}{\bkmkend AAAAAAAMSJ}
00032 {\cf20 GetThreadWork}\par
{\bkmkstart AAAAAAAMSK}{\bkmkend AAAAAAAMSK}
00033 {\cf20 }\par
{\bkmkstart AAAAAAAMSL}{\bkmkend AAAAAAAMSL}
00034 {\cf20 =============}\par
{\bkmkstart AAAAAAAMSM}{\bkmkend AAAAAAAMSM}
00035 {\cf20 */}\par
{\bkmkstart AAAAAAAMSN}{\bkmkend AAAAAAAMSN}
00036 {\cf18 int}     GetThreadWork ({\cf18 void})\par
{\bkmkstart AAAAAAAMSO}{\bkmkend AAAAAAAMSO}
00037 \{\par
{\bkmkstart AAAAAAAMSP}{\bkmkend AAAAAAAMSP}
00038     {\cf18 int} r;\par
{\bkmkstart AAAAAAAMSQ}{\bkmkend AAAAAAAMSQ}
00039     {\cf18 int} f;\par
{\bkmkstart AAAAAAAMSR}{\bkmkend AAAAAAAMSR}
00040 \par
{\bkmkstart AAAAAAAMSS}{\bkmkend AAAAAAAMSS}
00041     ThreadLock ();\par
{\bkmkstart AAAAAAAMST}{\bkmkend AAAAAAAMST}
00042 \par
{\bkmkstart AAAAAAAMSU}{\bkmkend AAAAAAAMSU}
00043     {\cf19 if} (dispatch == workcount)\par
{\bkmkstart AAAAAAAMSV}{\bkmkend AAAAAAAMSV}
00044     \{\par
{\bkmkstart AAAAAAAMSW}{\bkmkend AAAAAAAMSW}
00045         ThreadUnlock ();\par
{\bkmkstart AAAAAAAMSX}{\bkmkend AAAAAAAMSX}
00046         {\cf19 return} -1;\par
{\bkmkstart AAAAAAAMSY}{\bkmkend AAAAAAAMSY}
00047     \}\par
{\bkmkstart AAAAAAAMSZ}{\bkmkend AAAAAAAMSZ}
00048 \par
{\bkmkstart AAAAAAAMTA}{\bkmkend AAAAAAAMTA}
00049     f = 10*dispatch / workcount;\par
{\bkmkstart AAAAAAAMTB}{\bkmkend AAAAAAAMTB}
00050     {\cf19 if} (f != oldf)\par
{\bkmkstart AAAAAAAMTC}{\bkmkend AAAAAAAMTC}
00051     \{\par
{\bkmkstart AAAAAAAMTD}{\bkmkend AAAAAAAMTD}
00052         oldf = f;\par
{\bkmkstart AAAAAAAMTE}{\bkmkend AAAAAAAMTE}
00053         {\cf19 if} (pacifier)\par
{\bkmkstart AAAAAAAMTF}{\bkmkend AAAAAAAMTF}
00054             printf ({\cf22 "%i..."}, f);\par
{\bkmkstart AAAAAAAMTG}{\bkmkend AAAAAAAMTG}
00055     \}\par
{\bkmkstart AAAAAAAMTH}{\bkmkend AAAAAAAMTH}
00056 \par
{\bkmkstart AAAAAAAMTI}{\bkmkend AAAAAAAMTI}
00057     r = dispatch;\par
{\bkmkstart AAAAAAAMTJ}{\bkmkend AAAAAAAMTJ}
00058     dispatch++;\par
{\bkmkstart AAAAAAAMTK}{\bkmkend AAAAAAAMTK}
00059     ThreadUnlock ();\par
{\bkmkstart AAAAAAAMTL}{\bkmkend AAAAAAAMTL}
00060 \par
{\bkmkstart AAAAAAAMTM}{\bkmkend AAAAAAAMTM}
00061     {\cf19 return} r;\par
{\bkmkstart AAAAAAAMTN}{\bkmkend AAAAAAAMTN}
00062 \}\par
{\bkmkstart AAAAAAAMTO}{\bkmkend AAAAAAAMTO}
00063 \par
{\bkmkstart AAAAAAAMTP}{\bkmkend AAAAAAAMTP}
00064 \par
{\bkmkstart AAAAAAAMTQ}{\bkmkend AAAAAAAMTQ}
00065 void (*workfunction) (int);\par
{\bkmkstart AAAAAAAMTR}{\bkmkend AAAAAAAMTR}
00066 \par
{\bkmkstart AAAAAAAMTS}{\bkmkend AAAAAAAMTS}
00067 {\cf18 void} ThreadWorkerFunction ({\cf18 int} threadnum)\par
{\bkmkstart AAAAAAAMTT}{\bkmkend AAAAAAAMTT}
00068 \{\par
{\bkmkstart AAAAAAAMTU}{\bkmkend AAAAAAAMTU}
00069     {\cf18 int}         work;\par
{\bkmkstart AAAAAAAMTV}{\bkmkend AAAAAAAMTV}
00070 \par
{\bkmkstart AAAAAAAMTW}{\bkmkend AAAAAAAMTW}
00071     {\cf19 while} (1)\par
{\bkmkstart AAAAAAAMTX}{\bkmkend AAAAAAAMTX}
00072     \{\par
{\bkmkstart AAAAAAAMTY}{\bkmkend AAAAAAAMTY}
00073         work = GetThreadWork ();\par
{\bkmkstart AAAAAAAMTZ}{\bkmkend AAAAAAAMTZ}
00074         {\cf19 if} (work == -1)\par
{\bkmkstart AAAAAAAMUA}{\bkmkend AAAAAAAMUA}
00075             {\cf19 break};\par
{\bkmkstart AAAAAAAMUB}{\bkmkend AAAAAAAMUB}
00076         workfunction(work);\par
{\bkmkstart AAAAAAAMUC}{\bkmkend AAAAAAAMUC}
00077     \}\par
{\bkmkstart AAAAAAAMUD}{\bkmkend AAAAAAAMUD}
00078 \}\par
{\bkmkstart AAAAAAAMUE}{\bkmkend AAAAAAAMUE}
00079 \par
{\bkmkstart AAAAAAAMUF}{\bkmkend AAAAAAAMUF}
00080 {\cf18 void} RunThreadsOnIndividual ({\cf18 int} workcnt, qboolean showpacifier, {\cf18 void}(*func)({\cf18 int}))\par
{\bkmkstart AAAAAAAMUG}{\bkmkend AAAAAAAMUG}
00081 \{\par
{\bkmkstart AAAAAAAMUH}{\bkmkend AAAAAAAMUH}
00082     workfunction = func;\par
{\bkmkstart AAAAAAAMUI}{\bkmkend AAAAAAAMUI}
00083     RunThreadsOn (workcnt, showpacifier, ThreadWorkerFunction);\par
{\bkmkstart AAAAAAAMUJ}{\bkmkend AAAAAAAMUJ}
00084 \}\par
{\bkmkstart AAAAAAAMUK}{\bkmkend AAAAAAAMUK}
00085 \par
{\bkmkstart AAAAAAAMUL}{\bkmkend AAAAAAAMUL}
00086 \par
{\bkmkstart AAAAAAAMUM}{\bkmkend AAAAAAAMUM}
00087 {\cf20 /*}\par
{\bkmkstart AAAAAAAMUN}{\bkmkend AAAAAAAMUN}
00088 {\cf20 ===================================================================}\par
{\bkmkstart AAAAAAAMUO}{\bkmkend AAAAAAAMUO}
00089 {\cf20 }\par
{\bkmkstart AAAAAAAMUP}{\bkmkend AAAAAAAMUP}
00090 {\cf20 WIN32}\par
{\bkmkstart AAAAAAAMUQ}{\bkmkend AAAAAAAMUQ}
00091 {\cf20 }\par
{\bkmkstart AAAAAAAMUR}{\bkmkend AAAAAAAMUR}
00092 {\cf20 ===================================================================}\par
{\bkmkstart AAAAAAAMUS}{\bkmkend AAAAAAAMUS}
00093 {\cf20 */}\par
{\bkmkstart AAAAAAAMUT}{\bkmkend AAAAAAAMUT}
00094 {\cf21 #ifdef WIN32}\par
{\bkmkstart AAAAAAAMUU}{\bkmkend AAAAAAAMUU}
00095 \par
{\bkmkstart AAAAAAAMUV}{\bkmkend AAAAAAAMUV}
00096 {\cf21 #define USED}\par
{\bkmkstart AAAAAAAMUW}{\bkmkend AAAAAAAMUW}
00097 \par
{\bkmkstart AAAAAAAMUX}{\bkmkend AAAAAAAMUX}
00098 {\cf21 #include <windows.h>}\par
{\bkmkstart AAAAAAAMUY}{\bkmkend AAAAAAAMUY}
00099 \par
{\bkmkstart AAAAAAAMUZ}{\bkmkend AAAAAAAMUZ}
00100 {\cf18 int}             numthreads = -1;\par
{\bkmkstart AAAAAAAMVA}{\bkmkend AAAAAAAMVA}
00101 CRITICAL_SECTION                crit;\par
{\bkmkstart AAAAAAAMVB}{\bkmkend AAAAAAAMVB}
00102 {\cf17 static} {\cf18 int} enter;\par
{\bkmkstart AAAAAAAMVC}{\bkmkend AAAAAAAMVC}
00103 \par
{\bkmkstart AAAAAAAMVD}{\bkmkend AAAAAAAMVD}
00104 {\cf18 void} ThreadSetDefault ({\cf18 void})\par
{\bkmkstart AAAAAAAMVE}{\bkmkend AAAAAAAMVE}
00105 \{\par
{\bkmkstart AAAAAAAMVF}{\bkmkend AAAAAAAMVF}
00106     SYSTEM_INFO info;\par
{\bkmkstart AAAAAAAMVG}{\bkmkend AAAAAAAMVG}
00107 \par
{\bkmkstart AAAAAAAMVH}{\bkmkend AAAAAAAMVH}
00108     {\cf19 if} (numthreads == -1)       {\cf20 /* not set manually */}\par
{\bkmkstart AAAAAAAMVI}{\bkmkend AAAAAAAMVI}
00109     \{\par
{\bkmkstart AAAAAAAMVJ}{\bkmkend AAAAAAAMVJ}
00110         GetSystemInfo (&info);\par
{\bkmkstart AAAAAAAMVK}{\bkmkend AAAAAAAMVK}
00111         numthreads = info.dwNumberOfProcessors;\par
{\bkmkstart AAAAAAAMVL}{\bkmkend AAAAAAAMVL}
00112         {\cf19 if} (numthreads < 1 || numthreads > 32)\par
{\bkmkstart AAAAAAAMVM}{\bkmkend AAAAAAAMVM}
00113             numthreads = 1;\par
{\bkmkstart AAAAAAAMVN}{\bkmkend AAAAAAAMVN}
00114     \}\par
{\bkmkstart AAAAAAAMVO}{\bkmkend AAAAAAAMVO}
00115 \par
{\bkmkstart AAAAAAAMVP}{\bkmkend AAAAAAAMVP}
00116     qprintf ({\cf22 "%i threads\\n"}, numthreads);\par
{\bkmkstart AAAAAAAMVQ}{\bkmkend AAAAAAAMVQ}
00117 \}\par
{\bkmkstart AAAAAAAMVR}{\bkmkend AAAAAAAMVR}
00118 \par
{\bkmkstart AAAAAAAMVS}{\bkmkend AAAAAAAMVS}
00119 \par
{\bkmkstart AAAAAAAMVT}{\bkmkend AAAAAAAMVT}
00120 {\cf18 void} ThreadLock ({\cf18 void})\par
{\bkmkstart AAAAAAAMVU}{\bkmkend AAAAAAAMVU}
00121 \{\par
{\bkmkstart AAAAAAAMVV}{\bkmkend AAAAAAAMVV}
00122     {\cf19 if} (!threaded)\par
{\bkmkstart AAAAAAAMVW}{\bkmkend AAAAAAAMVW}
00123         {\cf19 return};\par
{\bkmkstart AAAAAAAMVX}{\bkmkend AAAAAAAMVX}
00124     EnterCriticalSection (&crit);\par
{\bkmkstart AAAAAAAMVY}{\bkmkend AAAAAAAMVY}
00125     {\cf19 if} (enter)\par
{\bkmkstart AAAAAAAMVZ}{\bkmkend AAAAAAAMVZ}
00126         Error ({\cf22 "Recursive ThreadLock\\n"});\par
{\bkmkstart AAAAAAAMWA}{\bkmkend AAAAAAAMWA}
00127     enter = 1;\par
{\bkmkstart AAAAAAAMWB}{\bkmkend AAAAAAAMWB}
00128 \}\par
{\bkmkstart AAAAAAAMWC}{\bkmkend AAAAAAAMWC}
00129 \par
{\bkmkstart AAAAAAAMWD}{\bkmkend AAAAAAAMWD}
00130 {\cf18 void} ThreadUnlock ({\cf18 void})\par
{\bkmkstart AAAAAAAMWE}{\bkmkend AAAAAAAMWE}
00131 \{\par
{\bkmkstart AAAAAAAMWF}{\bkmkend AAAAAAAMWF}
00132     {\cf19 if} (!threaded)\par
{\bkmkstart AAAAAAAMWG}{\bkmkend AAAAAAAMWG}
00133         {\cf19 return};\par
{\bkmkstart AAAAAAAMWH}{\bkmkend AAAAAAAMWH}
00134     {\cf19 if} (!enter)\par
{\bkmkstart AAAAAAAMWI}{\bkmkend AAAAAAAMWI}
00135         Error ({\cf22 "ThreadUnlock without lock\\n"});\par
{\bkmkstart AAAAAAAMWJ}{\bkmkend AAAAAAAMWJ}
00136     enter = 0;\par
{\bkmkstart AAAAAAAMWK}{\bkmkend AAAAAAAMWK}
00137     LeaveCriticalSection (&crit);\par
{\bkmkstart AAAAAAAMWL}{\bkmkend AAAAAAAMWL}
00138 \}\par
{\bkmkstart AAAAAAAMWM}{\bkmkend AAAAAAAMWM}
00139 \par
{\bkmkstart AAAAAAAMWN}{\bkmkend AAAAAAAMWN}
00140 {\cf20 /*}\par
{\bkmkstart AAAAAAAMWO}{\bkmkend AAAAAAAMWO}
00141 {\cf20 =============}\par
{\bkmkstart AAAAAAAMWP}{\bkmkend AAAAAAAMWP}
00142 {\cf20 RunThreadsOn}\par
{\bkmkstart AAAAAAAMWQ}{\bkmkend AAAAAAAMWQ}
00143 {\cf20 =============}\par
{\bkmkstart AAAAAAAMWR}{\bkmkend AAAAAAAMWR}
00144 {\cf20 */}\par
{\bkmkstart AAAAAAAMWS}{\bkmkend AAAAAAAMWS}
00145 {\cf18 void} RunThreadsOn ({\cf18 int} workcnt, qboolean showpacifier, {\cf18 void}(*func)({\cf18 int}))\par
{\bkmkstart AAAAAAAMWT}{\bkmkend AAAAAAAMWT}
00146 \{\par
{\bkmkstart AAAAAAAMWU}{\bkmkend AAAAAAAMWU}
00147     {\cf18 int}         threadid[MAX_THREADS];\par
{\bkmkstart AAAAAAAMWV}{\bkmkend AAAAAAAMWV}
00148     HANDLE      threadhandle[MAX_THREADS];\par
{\bkmkstart AAAAAAAMWW}{\bkmkend AAAAAAAMWW}
00149     {\cf18 int}         i;\par
{\bkmkstart AAAAAAAMWX}{\bkmkend AAAAAAAMWX}
00150     {\cf18 int}         start, end;\par
{\bkmkstart AAAAAAAMWY}{\bkmkend AAAAAAAMWY}
00151 \par
{\bkmkstart AAAAAAAMWZ}{\bkmkend AAAAAAAMWZ}
00152     start = I_FloatTime ();\par
{\bkmkstart AAAAAAAMXA}{\bkmkend AAAAAAAMXA}
00153     dispatch = 0;\par
{\bkmkstart AAAAAAAMXB}{\bkmkend AAAAAAAMXB}
00154     workcount = workcnt;\par
{\bkmkstart AAAAAAAMXC}{\bkmkend AAAAAAAMXC}
00155     oldf = -1;\par
{\bkmkstart AAAAAAAMXD}{\bkmkend AAAAAAAMXD}
00156     pacifier = showpacifier;\par
{\bkmkstart AAAAAAAMXE}{\bkmkend AAAAAAAMXE}
00157     threaded = {\cf17 true};\par
{\bkmkstart AAAAAAAMXF}{\bkmkend AAAAAAAMXF}
00158     {\cf20 /*}\par
{\bkmkstart AAAAAAAMXG}{\bkmkend AAAAAAAMXG}
00159 {\cf20     // run threads in parallel}\par
{\bkmkstart AAAAAAAMXH}{\bkmkend AAAAAAAMXH}
00160 {\cf20     */}\par
{\bkmkstart AAAAAAAMXI}{\bkmkend AAAAAAAMXI}
00161     InitializeCriticalSection (&crit);\par
{\bkmkstart AAAAAAAMXJ}{\bkmkend AAAAAAAMXJ}
00162     {\cf19 for} (i=0 ; i<numthreads ; i++)\par
{\bkmkstart AAAAAAAMXK}{\bkmkend AAAAAAAMXK}
00163     \{\par
{\bkmkstart AAAAAAAMXL}{\bkmkend AAAAAAAMXL}
00164         threadhandle[i] = CreateThread(\par
{\bkmkstart AAAAAAAMXM}{\bkmkend AAAAAAAMXM}
00165                               NULL,     {\cf20 /* LPSECURITY_ATTRIBUTES lpsa, */}\par
{\bkmkstart AAAAAAAMXN}{\bkmkend AAAAAAAMXN}
00166                               0,                {\cf20 /* DWORD cbStack, */}\par
{\bkmkstart AAAAAAAMXO}{\bkmkend AAAAAAAMXO}
00167                               (LPTHREAD_START_ROUTINE)func,     {\cf20 /* LPTHREAD_START_ROUTINE lpStartAddr, */}\par
{\bkmkstart AAAAAAAMXP}{\bkmkend AAAAAAAMXP}
00168                               (LPVOID)i,        {\cf20 /* LPVOID lpvThreadParm, */}\par
{\bkmkstart AAAAAAAMXQ}{\bkmkend AAAAAAAMXQ}
00169                               0,                        {\cf20 /*   DWORD fdwCreate, */}\par
{\bkmkstart AAAAAAAMXR}{\bkmkend AAAAAAAMXR}
00170                               (LPDWORD)&threadid[i]);              {\cf20 /* jw26u22 */}\par
{\bkmkstart AAAAAAAMXS}{\bkmkend AAAAAAAMXS}
00171         {\cf20 /*   (LPDWORD)&threadid[i]); */}\par
{\bkmkstart AAAAAAAMXT}{\bkmkend AAAAAAAMXT}
00172     \}\par
{\bkmkstart AAAAAAAMXU}{\bkmkend AAAAAAAMXU}
00173 \par
{\bkmkstart AAAAAAAMXV}{\bkmkend AAAAAAAMXV}
00174     {\cf19 for} (i=0 ; i<numthreads ; i++)\par
{\bkmkstart AAAAAAAMXW}{\bkmkend AAAAAAAMXW}
00175         WaitForSingleObject (threadhandle[i], INFINITE);\par
{\bkmkstart AAAAAAAMXX}{\bkmkend AAAAAAAMXX}
00176     DeleteCriticalSection (&crit);\par
{\bkmkstart AAAAAAAMXY}{\bkmkend AAAAAAAMXY}
00177 \par
{\bkmkstart AAAAAAAMXZ}{\bkmkend AAAAAAAMXZ}
00178     threaded = {\cf17 false};\par
{\bkmkstart AAAAAAAMYA}{\bkmkend AAAAAAAMYA}
00179     end = I_FloatTime ();\par
{\bkmkstart AAAAAAAMYB}{\bkmkend AAAAAAAMYB}
00180     {\cf19 if} (pacifier)\par
{\bkmkstart AAAAAAAMYC}{\bkmkend AAAAAAAMYC}
00181         printf ({\cf22 " (%i)\\n"}, end-start);\par
{\bkmkstart AAAAAAAMYD}{\bkmkend AAAAAAAMYD}
00182 \}\par
{\bkmkstart AAAAAAAMYE}{\bkmkend AAAAAAAMYE}
00183 \par
{\bkmkstart AAAAAAAMYF}{\bkmkend AAAAAAAMYF}
00184 \par
{\bkmkstart AAAAAAAMYG}{\bkmkend AAAAAAAMYG}
00185 {\cf21 #endif}\par
{\bkmkstart AAAAAAAMYH}{\bkmkend AAAAAAAMYH}
00186 \par
{\bkmkstart AAAAAAAMYI}{\bkmkend AAAAAAAMYI}
00187 {\cf20 /*}\par
{\bkmkstart AAAAAAAMYJ}{\bkmkend AAAAAAAMYJ}
00188 {\cf20 ===================================================================}\par
{\bkmkstart AAAAAAAMYK}{\bkmkend AAAAAAAMYK}
00189 {\cf20 }\par
{\bkmkstart AAAAAAAMYL}{\bkmkend AAAAAAAMYL}
00190 {\cf20 OSF1}\par
{\bkmkstart AAAAAAAMYM}{\bkmkend AAAAAAAMYM}
00191 {\cf20 }\par
{\bkmkstart AAAAAAAMYN}{\bkmkend AAAAAAAMYN}
00192 {\cf20 ===================================================================}\par
{\bkmkstart AAAAAAAMYO}{\bkmkend AAAAAAAMYO}
00193 {\cf20 */}\par
{\bkmkstart AAAAAAAMYP}{\bkmkend AAAAAAAMYP}
00194 \par
{\bkmkstart AAAAAAAMYQ}{\bkmkend AAAAAAAMYQ}
00195 {\cf21 #ifdef __osf__}\par
{\bkmkstart AAAAAAAMYR}{\bkmkend AAAAAAAMYR}
00196 {\cf21 #define USED}\par
{\bkmkstart AAAAAAAMYS}{\bkmkend AAAAAAAMYS}
00197 \par
{\bkmkstart AAAAAAAMYT}{\bkmkend AAAAAAAMYT}
00198 {\cf18 int}             numthreads = 4;\par
{\bkmkstart AAAAAAAMYU}{\bkmkend AAAAAAAMYU}
00199 \par
{\bkmkstart AAAAAAAMYV}{\bkmkend AAAAAAAMYV}
00200 {\cf18 void} ThreadSetDefault ({\cf18 void})\par
{\bkmkstart AAAAAAAMYW}{\bkmkend AAAAAAAMYW}
00201 \{\par
{\bkmkstart AAAAAAAMYX}{\bkmkend AAAAAAAMYX}
00202     numthreads = 4;\par
{\bkmkstart AAAAAAAMYY}{\bkmkend AAAAAAAMYY}
00203 \}\par
{\bkmkstart AAAAAAAMYZ}{\bkmkend AAAAAAAMYZ}
00204 \par
{\bkmkstart AAAAAAAMZA}{\bkmkend AAAAAAAMZA}
00205 {\cf21 #include <stdlib.h>}\par
{\bkmkstart AAAAAAAMZB}{\bkmkend AAAAAAAMZB}
00206 {\cf21 #include <pthread.h>}\par
{\bkmkstart AAAAAAAMZC}{\bkmkend AAAAAAAMZC}
00207 \par
{\bkmkstart AAAAAAAMZD}{\bkmkend AAAAAAAMZD}
00208 pthread_mutex_t *my_mutex;\par
{\bkmkstart AAAAAAAMZE}{\bkmkend AAAAAAAMZE}
00209 \par
{\bkmkstart AAAAAAAMZF}{\bkmkend AAAAAAAMZF}
00210 {\cf18 void} ThreadLock ({\cf18 void})\par
{\bkmkstart AAAAAAAMZG}{\bkmkend AAAAAAAMZG}
00211 \{\par
{\bkmkstart AAAAAAAMZH}{\bkmkend AAAAAAAMZH}
00212     {\cf19 if} (my_mutex)\par
{\bkmkstart AAAAAAAMZI}{\bkmkend AAAAAAAMZI}
00213         pthread_mutex_lock (my_mutex);\par
{\bkmkstart AAAAAAAMZJ}{\bkmkend AAAAAAAMZJ}
00214 \}\par
{\bkmkstart AAAAAAAMZK}{\bkmkend AAAAAAAMZK}
00215 \par
{\bkmkstart AAAAAAAMZL}{\bkmkend AAAAAAAMZL}
00216 {\cf18 void} ThreadUnlock ({\cf18 void})\par
{\bkmkstart AAAAAAAMZM}{\bkmkend AAAAAAAMZM}
00217 \{\par
{\bkmkstart AAAAAAAMZN}{\bkmkend AAAAAAAMZN}
00218     {\cf19 if} (my_mutex)\par
{\bkmkstart AAAAAAAMZO}{\bkmkend AAAAAAAMZO}
00219         pthread_mutex_unlock (my_mutex);\par
{\bkmkstart AAAAAAAMZP}{\bkmkend AAAAAAAMZP}
00220 \}\par
{\bkmkstart AAAAAAAMZQ}{\bkmkend AAAAAAAMZQ}
00221 \par
{\bkmkstart AAAAAAAMZR}{\bkmkend AAAAAAAMZR}
00222 \par
{\bkmkstart AAAAAAAMZS}{\bkmkend AAAAAAAMZS}
00223 {\cf20 /*}\par
{\bkmkstart AAAAAAAMZT}{\bkmkend AAAAAAAMZT}
00224 {\cf20 =============}\par
{\bkmkstart AAAAAAAMZU}{\bkmkend AAAAAAAMZU}
00225 {\cf20 RunThreadsOn}\par
{\bkmkstart AAAAAAAMZV}{\bkmkend AAAAAAAMZV}
00226 {\cf20 =============}\par
{\bkmkstart AAAAAAAMZW}{\bkmkend AAAAAAAMZW}
00227 {\cf20 */}\par
{\bkmkstart AAAAAAAMZX}{\bkmkend AAAAAAAMZX}
00228 {\cf18 void} RunThreadsOn ({\cf18 int} workcnt, qboolean showpacifier, {\cf18 void}(*func)({\cf18 int}))\par
{\bkmkstart AAAAAAAMZY}{\bkmkend AAAAAAAMZY}
00229 \{\par
{\bkmkstart AAAAAAAMZZ}{\bkmkend AAAAAAAMZZ}
00230     {\cf18 int}         i;\par
{\bkmkstart AAAAAAANAA}{\bkmkend AAAAAAANAA}
00231     pthread_t   work_threads[MAX_THREADS];\par
{\bkmkstart AAAAAAANAB}{\bkmkend AAAAAAANAB}
00232     {\cf20 /*pthread_addr_t    status; */}  {\cf20 /* fix me */}\par
{\bkmkstart AAAAAAANAC}{\bkmkend AAAAAAANAC}
00233     pthread_attr_t      attrib;\par
{\bkmkstart AAAAAAANAD}{\bkmkend AAAAAAANAD}
00234     pthread_mutexattr_t mattrib;\par
{\bkmkstart AAAAAAANAE}{\bkmkend AAAAAAANAE}
00235     {\cf18 int}         start, end;\par
{\bkmkstart AAAAAAANAF}{\bkmkend AAAAAAANAF}
00236 \par
{\bkmkstart AAAAAAANAG}{\bkmkend AAAAAAANAG}
00237     start = I_FloatTime ();\par
{\bkmkstart AAAAAAANAH}{\bkmkend AAAAAAANAH}
00238     dispatch = 0;\par
{\bkmkstart AAAAAAANAI}{\bkmkend AAAAAAANAI}
00239     workcount = workcnt;\par
{\bkmkstart AAAAAAANAJ}{\bkmkend AAAAAAANAJ}
00240     oldf = -1;\par
{\bkmkstart AAAAAAANAK}{\bkmkend AAAAAAANAK}
00241     pacifier = showpacifier;\par
{\bkmkstart AAAAAAANAL}{\bkmkend AAAAAAANAL}
00242     threaded = {\cf17 true};\par
{\bkmkstart AAAAAAANAM}{\bkmkend AAAAAAANAM}
00243 \par
{\bkmkstart AAAAAAANAN}{\bkmkend AAAAAAANAN}
00244     {\cf19 if} (pacifier)\par
{\bkmkstart AAAAAAANAO}{\bkmkend AAAAAAANAO}
00245         setbuf (stdout, NULL);\par
{\bkmkstart AAAAAAANAP}{\bkmkend AAAAAAANAP}
00246 \par
{\bkmkstart AAAAAAANAQ}{\bkmkend AAAAAAANAQ}
00247     {\cf19 if} (!my_mutex)\par
{\bkmkstart AAAAAAANAR}{\bkmkend AAAAAAANAR}
00248     \{\par
{\bkmkstart AAAAAAANAS}{\bkmkend AAAAAAANAS}
00249         my_mutex = malloc ({\cf17 sizeof}(*my_mutex));\par
{\bkmkstart AAAAAAANAT}{\bkmkend AAAAAAANAT}
00250         {\cf20 /*if (pthread_mutexattr_create (&mattrib) == -1)*/}\par
{\bkmkstart AAAAAAANAU}{\bkmkend AAAAAAANAU}
00251         {\cf19 if} (pthread_mutexattr_init (&mattrib) == -1)\par
{\bkmkstart AAAAAAANAV}{\bkmkend AAAAAAANAV}
00252             Error ({\cf22 "pthread_mutex_attr_create failed"});\par
{\bkmkstart AAAAAAANAW}{\bkmkend AAAAAAANAW}
00253         {\cf20 /*if (pthread_mutexattr_setkind_np (&mattrib, MUTEX_FAST_NP) == -1) */}\par
{\bkmkstart AAAAAAANAX}{\bkmkend AAAAAAANAX}
00254         {\cf19 if} (pthread_mutexattr_settype (&mattrib, PTHREAD_MUTEX_TIMED_NP) == -1)   {\cf20 /* fix me */}\par
{\bkmkstart AAAAAAANAY}{\bkmkend AAAAAAANAY}
00255             Error ({\cf22 "pthread_mutexattr_setkind_np failed"});\par
{\bkmkstart AAAAAAANAZ}{\bkmkend AAAAAAANAZ}
00256         {\cf20 /*if (pthread_mutex_init (my_mutex, mattrib) == -1)*/}\par
{\bkmkstart AAAAAAANBA}{\bkmkend AAAAAAANBA}
00257         {\cf19 if} (pthread_mutex_init (my_mutex, &mattrib) == -1) {\cf20 /* fix me */}\par
{\bkmkstart AAAAAAANBB}{\bkmkend AAAAAAANBB}
00258             Error ({\cf22 "pthread_mutex_init failed"});\par
{\bkmkstart AAAAAAANBC}{\bkmkend AAAAAAANBC}
00259     \}\par
{\bkmkstart AAAAAAANBD}{\bkmkend AAAAAAANBD}
00260 \par
{\bkmkstart AAAAAAANBE}{\bkmkend AAAAAAANBE}
00261     {\cf20 /*if (pthread_attr_create (&attrib) == -1)*/}\par
{\bkmkstart AAAAAAANBF}{\bkmkend AAAAAAANBF}
00262     {\cf19 if} (pthread_attr_init (&attrib) == -1)\par
{\bkmkstart AAAAAAANBG}{\bkmkend AAAAAAANBG}
00263         Error ({\cf22 "pthread_attr_create failed"});\par
{\bkmkstart AAAAAAANBH}{\bkmkend AAAAAAANBH}
00264     {\cf19 if} (pthread_attr_setstacksize (&attrib, 0x100000) == -1)\par
{\bkmkstart AAAAAAANBI}{\bkmkend AAAAAAANBI}
00265         Error ({\cf22 "pthread_attr_setstacksize failed"});\par
{\bkmkstart AAAAAAANBJ}{\bkmkend AAAAAAANBJ}
00266 \par
{\bkmkstart AAAAAAANBK}{\bkmkend AAAAAAANBK}
00267     {\cf19 for} (i=0 ; i<numthreads ; i++)\par
{\bkmkstart AAAAAAANBL}{\bkmkend AAAAAAANBL}
00268     \{\par
{\bkmkstart AAAAAAANBM}{\bkmkend AAAAAAANBM}
00269         {\cf20 /*if (pthread_create(&work_threads[i], attrib}\par
{\bkmkstart AAAAAAANBN}{\bkmkend AAAAAAANBN}
00270 {\cf20                 , (pthread_startroutine_t)func, (pthread_addr_t)i) == -1)*/}\par
{\bkmkstart AAAAAAANBO}{\bkmkend AAAAAAANBO}
00271         {\cf19 if} (pthread_create(&work_threads[i], &attrib\par
{\bkmkstart AAAAAAANBP}{\bkmkend AAAAAAANBP}
00272                            , ({\cf18 void} * (*)({\cf18 void} *))func, ({\cf18 void} *)i) == -1)\par
{\bkmkstart AAAAAAANBQ}{\bkmkend AAAAAAANBQ}
00273             Error ({\cf22 "pthread_create failed"});\par
{\bkmkstart AAAAAAANBR}{\bkmkend AAAAAAANBR}
00274     \}\par
{\bkmkstart AAAAAAANBS}{\bkmkend AAAAAAANBS}
00275 \par
{\bkmkstart AAAAAAANBT}{\bkmkend AAAAAAANBT}
00276     {\cf19 for} (i=0 ; i<numthreads ; i++)\par
{\bkmkstart AAAAAAANBU}{\bkmkend AAAAAAANBU}
00277     \{\par
{\bkmkstart AAAAAAANBV}{\bkmkend AAAAAAANBV}
00278         {\cf19 if} (pthread_join (work_threads[i], NULL) == -1) {\cf20 /* fix me */}\par
{\bkmkstart AAAAAAANBW}{\bkmkend AAAAAAANBW}
00279             Error ({\cf22 "pthread_join failed"});\par
{\bkmkstart AAAAAAANBX}{\bkmkend AAAAAAANBX}
00280     \}\par
{\bkmkstart AAAAAAANBY}{\bkmkend AAAAAAANBY}
00281 \par
{\bkmkstart AAAAAAANBZ}{\bkmkend AAAAAAANBZ}
00282     threaded = {\cf17 false};\par
{\bkmkstart AAAAAAANCA}{\bkmkend AAAAAAANCA}
00283 \par
{\bkmkstart AAAAAAANCB}{\bkmkend AAAAAAANCB}
00284     end = I_FloatTime ();\par
{\bkmkstart AAAAAAANCC}{\bkmkend AAAAAAANCC}
00285     {\cf19 if} (pacifier)\par
{\bkmkstart AAAAAAANCD}{\bkmkend AAAAAAANCD}
00286         printf ({\cf22 " (%i)\\n"}, end-start);\par
{\bkmkstart AAAAAAANCE}{\bkmkend AAAAAAANCE}
00287 \}\par
{\bkmkstart AAAAAAANCF}{\bkmkend AAAAAAANCF}
00288 \par
{\bkmkstart AAAAAAANCG}{\bkmkend AAAAAAANCG}
00289 \par
{\bkmkstart AAAAAAANCH}{\bkmkend AAAAAAANCH}
00290 {\cf21 #endif}\par
{\bkmkstart AAAAAAANCI}{\bkmkend AAAAAAANCI}
00291 \par
{\bkmkstart AAAAAAANCJ}{\bkmkend AAAAAAANCJ}
00292 {\cf20 /*}\par
{\bkmkstart AAAAAAANCK}{\bkmkend AAAAAAANCK}
00293 {\cf20 =======================================================================}\par
{\bkmkstart AAAAAAANCL}{\bkmkend AAAAAAANCL}
00294 {\cf20 }\par
{\bkmkstart AAAAAAANCM}{\bkmkend AAAAAAANCM}
00295 {\cf20   SINGLE THREAD}\par
{\bkmkstart AAAAAAANCN}{\bkmkend AAAAAAANCN}
00296 {\cf20 }\par
{\bkmkstart AAAAAAANCO}{\bkmkend AAAAAAANCO}
00297 {\cf20 =======================================================================}\par
{\bkmkstart AAAAAAANCP}{\bkmkend AAAAAAANCP}
00298 {\cf20 */}\par
{\bkmkstart AAAAAAANCQ}{\bkmkend AAAAAAANCQ}
00299 \par
{\bkmkstart AAAAAAANCR}{\bkmkend AAAAAAANCR}
00300 {\cf21 #ifndef USED}\par
{\bkmkstart AAAAAAANCS}{\bkmkend AAAAAAANCS}
00301 \par
{\bkmkstart AAAAAAANCT}{\bkmkend AAAAAAANCT}
00302 {\cf18 int}             numthreads = 1;\par
{\bkmkstart AAAAAAANCU}{\bkmkend AAAAAAANCU}
00303 \par
{\bkmkstart AAAAAAANCV}{\bkmkend AAAAAAANCV}
00304 {\cf18 void} ThreadSetDefault ({\cf18 void})\par
{\bkmkstart AAAAAAANCW}{\bkmkend AAAAAAANCW}
00305 \{\par
{\bkmkstart AAAAAAANCX}{\bkmkend AAAAAAANCX}
00306     numthreads = 1;\par
{\bkmkstart AAAAAAANCY}{\bkmkend AAAAAAANCY}
00307 \}\par
{\bkmkstart AAAAAAANCZ}{\bkmkend AAAAAAANCZ}
00308 \par
{\bkmkstart AAAAAAANDA}{\bkmkend AAAAAAANDA}
00309 {\cf18 void} ThreadLock ({\cf18 void})\par
{\bkmkstart AAAAAAANDB}{\bkmkend AAAAAAANDB}
00310 \{\par
{\bkmkstart AAAAAAANDC}{\bkmkend AAAAAAANDC}
00311 \}\par
{\bkmkstart AAAAAAANDD}{\bkmkend AAAAAAANDD}
00312 \par
{\bkmkstart AAAAAAANDE}{\bkmkend AAAAAAANDE}
00313 {\cf18 void} ThreadUnlock ({\cf18 void})\par
{\bkmkstart AAAAAAANDF}{\bkmkend AAAAAAANDF}
00314 \{\par
{\bkmkstart AAAAAAANDG}{\bkmkend AAAAAAANDG}
00315 \}\par
{\bkmkstart AAAAAAANDH}{\bkmkend AAAAAAANDH}
00316 \par
{\bkmkstart AAAAAAANDI}{\bkmkend AAAAAAANDI}
00317 {\cf20 /*}\par
{\bkmkstart AAAAAAANDJ}{\bkmkend AAAAAAANDJ}
00318 {\cf20 =============}\par
{\bkmkstart AAAAAAANDK}{\bkmkend AAAAAAANDK}
00319 {\cf20 RunThreadsOn}\par
{\bkmkstart AAAAAAANDL}{\bkmkend AAAAAAANDL}
00320 {\cf20 =============}\par
{\bkmkstart AAAAAAANDM}{\bkmkend AAAAAAANDM}
00321 {\cf20 */}\par
{\bkmkstart AAAAAAANDN}{\bkmkend AAAAAAANDN}
00322 {\cf18 void} RunThreadsOn ({\cf18 int} workcnt, qboolean showpacifier, {\cf18 void}(*func)({\cf18 int}))\par
{\bkmkstart AAAAAAANDO}{\bkmkend AAAAAAANDO}
00323 \{\par
{\bkmkstart AAAAAAANDP}{\bkmkend AAAAAAANDP}
00324     {\cf18 int}         i;\par
{\bkmkstart AAAAAAANDQ}{\bkmkend AAAAAAANDQ}
00325     {\cf18 int}         start, end;\par
{\bkmkstart AAAAAAANDR}{\bkmkend AAAAAAANDR}
00326 \par
{\bkmkstart AAAAAAANDS}{\bkmkend AAAAAAANDS}
00327     dispatch = 0;\par
{\bkmkstart AAAAAAANDT}{\bkmkend AAAAAAANDT}
00328     workcount = workcnt;\par
{\bkmkstart AAAAAAANDU}{\bkmkend AAAAAAANDU}
00329     oldf = -1;\par
{\bkmkstart AAAAAAANDV}{\bkmkend AAAAAAANDV}
00330     pacifier = showpacifier;\par
{\bkmkstart AAAAAAANDW}{\bkmkend AAAAAAANDW}
00331     start = I_FloatTime ();\par
{\bkmkstart AAAAAAANDX}{\bkmkend AAAAAAANDX}
00332 {\cf21 #ifdef NeXT}\par
{\bkmkstart AAAAAAANDY}{\bkmkend AAAAAAANDY}
00333     {\cf19 if} (pacifier)\par
{\bkmkstart AAAAAAANDZ}{\bkmkend AAAAAAANDZ}
00334         setbuf (stdout, NULL);\par
{\bkmkstart AAAAAAANEA}{\bkmkend AAAAAAANEA}
00335 {\cf21 #endif}\par
{\bkmkstart AAAAAAANEB}{\bkmkend AAAAAAANEB}
00336     func(0);\par
{\bkmkstart AAAAAAANEC}{\bkmkend AAAAAAANEC}
00337 \par
{\bkmkstart AAAAAAANED}{\bkmkend AAAAAAANED}
00338     end = I_FloatTime ();\par
{\bkmkstart AAAAAAANEE}{\bkmkend AAAAAAANEE}
00339     {\cf19 if} (pacifier)\par
{\bkmkstart AAAAAAANEF}{\bkmkend AAAAAAANEF}
00340         printf ({\cf22 " (%i)\\n"}, end-start);\par
{\bkmkstart AAAAAAANEG}{\bkmkend AAAAAAANEG}
00341 \}\par
{\bkmkstart AAAAAAANEH}{\bkmkend AAAAAAANEH}
00342 \par
{\bkmkstart AAAAAAANEI}{\bkmkend AAAAAAANEI}
00343 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
threads.h\par \pard\plain 
{\bkmkstart AAAAAAANEJ}
{\bkmkend AAAAAAANEJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAANEK}{\bkmkend AAAAAAANEK}
00001 {\cf20 /***}\par
{\bkmkstart AAAAAAANEL}{\bkmkend AAAAAAANEL}
00002 {\cf20 *}\par
{\bkmkstart AAAAAAANEM}{\bkmkend AAAAAAANEM}
00003 {\cf20 *       Copyright (c) 1996-2002, Valve LLC. All rights reserved.}\par
{\bkmkstart AAAAAAANEN}{\bkmkend AAAAAAANEN}
00004 {\cf20 *}\par
{\bkmkstart AAAAAAANEO}{\bkmkend AAAAAAANEO}
00005 {\cf20 *       This product contains software technology licensed from Id}\par
{\bkmkstart AAAAAAANEP}{\bkmkend AAAAAAANEP}
00006 {\cf20 *       Software, Inc. ("Id Technology").  Id Technology (c) 1996 Id Software, Inc.}\par
{\bkmkstart AAAAAAANEQ}{\bkmkend AAAAAAANEQ}
00007 {\cf20 *       All Rights Reserved.}\par
{\bkmkstart AAAAAAANER}{\bkmkend AAAAAAANER}
00008 {\cf20 *}\par
{\bkmkstart AAAAAAANES}{\bkmkend AAAAAAANES}
00009 {\cf20 ****/}\par
{\bkmkstart AAAAAAANET}{\bkmkend AAAAAAANET}
00010 \par
{\bkmkstart AAAAAAANEU}{\bkmkend AAAAAAANEU}
00011 {\cf20 /* thread.h */}\par
{\bkmkstart AAAAAAANEV}{\bkmkend AAAAAAANEV}
00012 \par
{\bkmkstart AAAAAAANEW}{\bkmkend AAAAAAANEW}
00013 {\cf20 /*}\par
{\bkmkstart AAAAAAANEX}{\bkmkend AAAAAAANEX}
00014 {\cf20 =================}\par
{\bkmkstart AAAAAAANEY}{\bkmkend AAAAAAANEY}
00015 {\cf20 last modified: 2023/3/25}\par
{\bkmkstart AAAAAAANEZ}{\bkmkend AAAAAAANEZ}
00016 {\cf20 =================}\par
{\bkmkstart AAAAAAANFA}{\bkmkend AAAAAAANFA}
00017 {\cf20 */}\par
{\bkmkstart AAAAAAANFB}{\bkmkend AAAAAAANFB}
00018 \par
{\bkmkstart AAAAAAANFC}{\bkmkend AAAAAAANFC}
00019 {\cf21 #ifndef __THREADS__}\par
{\bkmkstart AAAAAAANFD}{\bkmkend AAAAAAANFD}
00020 {\cf21 #define __THREADS__}\par
{\bkmkstart AAAAAAANFE}{\bkmkend AAAAAAANFE}
00021 \par
{\bkmkstart AAAAAAANFF}{\bkmkend AAAAAAANFF}
00022 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAANFG}{\bkmkend AAAAAAANFG}
00023 {\cf17 extern} {\cf22 "C"}\par
{\bkmkstart AAAAAAANFH}{\bkmkend AAAAAAANFH}
00024 \{\par
{\bkmkstart AAAAAAANFI}{\bkmkend AAAAAAANFI}
00025 {\cf21 #endif}\par
{\bkmkstart AAAAAAANFJ}{\bkmkend AAAAAAANFJ}
00026 \par
{\bkmkstart AAAAAAANFK}{\bkmkend AAAAAAANFK}
00027 {\cf17 extern}  {\cf18 int}             numthreads;\par
{\bkmkstart AAAAAAANFL}{\bkmkend AAAAAAANFL}
00028 \par
{\bkmkstart AAAAAAANFM}{\bkmkend AAAAAAANFM}
00029 {\cf18 void} ThreadSetDefault ({\cf18 void});\par
{\bkmkstart AAAAAAANFN}{\bkmkend AAAAAAANFN}
00030 {\cf18 int}     GetThreadWork ({\cf18 void});\par
{\bkmkstart AAAAAAANFO}{\bkmkend AAAAAAANFO}
00031 {\cf18 void} RunThreadsOnIndividual ({\cf18 int} workcnt, qboolean showpacifier, {\cf18 void}(*func)({\cf18 int}));\par
{\bkmkstart AAAAAAANFP}{\bkmkend AAAAAAANFP}
00032 {\cf18 void} RunThreadsOn ({\cf18 int} workcnt, qboolean showpacifier, {\cf18 void}(*func)({\cf18 int}));\par
{\bkmkstart AAAAAAANFQ}{\bkmkend AAAAAAANFQ}
00033 {\cf18 void} ThreadLock ({\cf18 void});\par
{\bkmkstart AAAAAAANFR}{\bkmkend AAAAAAANFR}
00034 {\cf18 void} ThreadUnlock ({\cf18 void});\par
{\bkmkstart AAAAAAANFS}{\bkmkend AAAAAAANFS}
00035 \par
{\bkmkstart AAAAAAANFT}{\bkmkend AAAAAAANFT}
00036 {\cf21 #ifndef NO_THREAD_NAMES}\par
{\bkmkstart AAAAAAANFU}{\bkmkend AAAAAAANFU}
00037 {\cf21 #define RunThreadsOn(n,p,f) \{ if (p) printf("%-20s "}, #f ":"); RunThreadsOn(n,p,f); \}\par
{\bkmkstart AAAAAAANFV}{\bkmkend AAAAAAANFV}
00038 {\cf21 #define RunThreadsOnIndividual(n,p,f) \{ if (p) printf("%-20s "}, #f ":"); RunThreadsOnIndividual(n,p,f); \}\par
{\bkmkstart AAAAAAANFW}{\bkmkend AAAAAAANFW}
00039 {\cf21 #endif}\par
{\bkmkstart AAAAAAANFX}{\bkmkend AAAAAAANFX}
00040 \par
{\bkmkstart AAAAAAANFY}{\bkmkend AAAAAAANFY}
00041 \par
{\bkmkstart AAAAAAANFZ}{\bkmkend AAAAAAANFZ}
00042 \par
{\bkmkstart AAAAAAANGA}{\bkmkend AAAAAAANGA}
00043 \par
{\bkmkstart AAAAAAANGB}{\bkmkend AAAAAAANGB}
00044 \par
{\bkmkstart AAAAAAANGC}{\bkmkend AAAAAAANGC}
00045 {\cf21 #ifdef __cplusplus}\par
{\bkmkstart AAAAAAANGD}{\bkmkend AAAAAAANGD}
00046 \}\par
{\bkmkstart AAAAAAANGE}{\bkmkend AAAAAAANGE}
00047 {\cf21 #endif}\par
{\bkmkstart AAAAAAANGF}{\bkmkend AAAAAAANGF}
00048 \par
{\bkmkstart AAAAAAANGG}{\bkmkend AAAAAAANGG}
00049 {\cf21 #endif }{\cf20 /*__THREADS__*/}{\cf21 }\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
